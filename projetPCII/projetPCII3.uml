<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:UMLLabProfile="http:///schemas/UMLLabProfile/NS/0" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http:///schemas/UMLLabProfile/NS/0 pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile">
  <uml:Model xmi:id="_er18UIobEeqevdMp57x66A" name="projetPCII3">
    <eAnnotations xmi:id="_fuiIYIobEeqevdMp57x66A" source="http://ns.yatta.de/umllab">
      <contents xmi:type="ecore:EAnnotation" xmi:id="_fuiIYYobEeqevdMp57x66A" source="codegen">
        <details xmi:id="_fuiIYoobEeqevdMp57x66A" key="codegenDirectory" value="/projetPCII/src"/>
        <details xmi:id="_lDDWAIobEeqevdMp57x66A" key="AssociatedSourceCode" value="/projetPCII/src/control/Avancer.java;1532904091/1;/projetPCII/src/control/Keys.java;1207296785/1;/projetPCII/src/control/Nuage.java;2316705388/1;/projetPCII/src/control/RepaintScreen.java;3534191472/1;/projetPCII/src/control/StoppableThread.java;1580792668/1;/projetPCII/src/control/Vitesse.java;3189475445/1;/projetPCII/src/main/Main.java;2167819080/1;/projetPCII/src/model/Checkpoint.java;4170712186/1;/projetPCII/src/model/Clock.java;3073157121/1;/projetPCII/src/model/Decor.java;2587451362/1;/projetPCII/src/model/Ennemi.java;3641734717/1;/projetPCII/src/model/Etat.java;3251331753/1;/projetPCII/src/model/Montagne.java;2164723914/1;/projetPCII/src/model/Obstacle.java;2045965333/1;/projetPCII/src/model/Piste.java;1206899388/1;/projetPCII/src/view/Affichage.java;2492932882/1;/projetPCII/src/view/VueDecors.java;2476756672/1;/projetPCII/src/view/VueEnnemis.java;238290926/1;/projetPCII/src/view/VueMoto.java;2402487575/1;/projetPCII/src/view/VueNuages.java;468023658/1;"/>
      </contents>
    </eAnnotations>
    <elementImport xmi:id="_hmdTUIobEeqevdMp57x66A">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
    </elementImport>
    <elementImport xmi:id="_hmd6YIobEeqevdMp57x66A">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
    </elementImport>
    <elementImport xmi:id="_hmd6YYobEeqevdMp57x66A">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
    </elementImport>
    <elementImport xmi:id="_hmd6YoobEeqevdMp57x66A">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
    </elementImport>
    <elementImport xmi:id="_hmd6Y4obEeqevdMp57x66A">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
    </elementImport>
    <elementImport xmi:id="_hmehcIobEeqevdMp57x66A">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </elementImport>
    <elementImport xmi:id="_hmjZ8IobEeqevdMp57x66A">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
    </elementImport>
    <elementImport xmi:id="_hmkBAIobEeqevdMp57x66A">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
    </elementImport>
    <elementImport xmi:id="_hmmdQIobEeqevdMp57x66A">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </elementImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_hmw1UIobEeqevdMp57x66A" name="model">
      <packagedElement xmi:type="uml:Class" xmi:id="_hwyUAIobEeqevdMp57x66A" name="Checkpoint">
        <ownedAttribute xmi:id="_iB1nwYobEeqevdMp57x66A" name="VOIE_MAX" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_iB2O0IobEeqevdMp57x66A" value="2"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iB214YobEeqevdMp57x66A" name="INCR" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_iB3c8IobEeqevdMp57x66A" value="5"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iB4rEIobEeqevdMp57x66A" name="DEFAULT_TIME" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_iB5SIIobEeqevdMp57x66A" value="20"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iB55MIobEeqevdMp57x66A" name="voie" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iB55MYobEeqevdMp57x66A" name="posY" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iB7HUIobEeqevdMp57x66A" name="time" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iB8VcYobEeqevdMp57x66A" name="prevTime" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iB88gIobEeqevdMp57x66A" name="clock" type="_hxTRYIobEeqevdMp57x66A" isReadOnly="true" association="_iGuHwIobEeqevdMp57x66A"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFIzY4obEeqevdMp57x66A" name="Checkpoint" specification="_h-LPwIobEeqevdMp57x66A">
          <ownedParameter xmi:id="_iFIzZIobEeqevdMp57x66A" name="etat" type="_hytmoIobEeqevdMp57x66A"/>
          <ownedParameter xmi:id="_iFIzZYobEeqevdMp57x66A" type="_hwyUAIobEeqevdMp57x66A" direction="return"/>
          <language>java</language>
          <body>this.time = DEFAULT_TIME;
		this.prevTime = DEFAULT_TIME;
		this.posY = INCR*Piste.incr;
		this.clock = new Clock(time,etat);
		this.voie = 0;
		
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFJacIobEeqevdMp57x66A" name="nextCheckpoint" specification="_hw4aoIobEeqevdMp57x66A">
          <language>java</language>
          <body>this.voie = randint(0, VOIE_MAX);
		this.posY += INCR*Piste.incr;
		System.out.println(&quot;next CHECK | y = &quot;+posY);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFJacYobEeqevdMp57x66A" name="addTime" specification="_hw-hQIobEeqevdMp57x66A">
          <language>java</language>
          <body>clock.setTempsRestant(clock.getTempsRestant() + time);
		if(time >= 5) {
			this.prevTime = this.time;
			this.time--;
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFJacoobEeqevdMp57x66A" name="getTime" specification="_hw-hQYobEeqevdMp57x66A">
          <ownedParameter xmi:id="_iFJac4obEeqevdMp57x66A" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return this.time;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFKBgIobEeqevdMp57x66A" name="getPosX" specification="_hxDZwIobEeqevdMp57x66A">
          <ownedParameter xmi:id="_iFKBgYobEeqevdMp57x66A" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_iFKBgoobEeqevdMp57x66A" value="*"/>
          </ownedParameter>
          <language>java</language>
          <body>double[] res = new double[2];
	
		if(voie==0) {
			res[0] = 0;
			res[1] = -2./3;
		}else {
			if(voie==1) {
				res[0] = 1./3;
				res[1] = -1./3;
			}else {
				res[0] = 2./3;
				res[1] = 0;
			}
		}
		
		
		return res;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFKBg4obEeqevdMp57x66A" name="randint" specification="_hxFO8IobEeqevdMp57x66A">
          <ownedParameter xmi:id="_iFKBhIobEeqevdMp57x66A" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iFKBhYobEeqevdMp57x66A" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iFKBhoobEeqevdMp57x66A" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return ThreadLocalRandom.current().nextInt(min, max + 1);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFKBh4obEeqevdMp57x66A" name="restart" specification="_hxGdEIobEeqevdMp57x66A">
          <language>java</language>
          <body>this.time = DEFAULT_TIME;
		this.prevTime = DEFAULT_TIME;
		this.posY = INCR*Piste.incr;
		this.clock.restart();
		this.voie = 0;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_hw4aoIobEeqevdMp57x66A" name="nextCheckpoint" method="_iFJacIobEeqevdMp57x66A">
          <ownedComment xmi:id="_iFy6s4obEeqevdMp57x66A">
            <body>On génére au checkpoint suivant</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_hw-hQIobEeqevdMp57x66A" name="addTime" method="_iFJacYobEeqevdMp57x66A">
          <ownedComment xmi:id="_iFy6tIobEeqevdMp57x66A">
            <body>ajoute {@link #time} au temps restant et le décrémente si {@link #time} n'est pas passé en dessous de 5 secondes</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_hw-hQYobEeqevdMp57x66A" name="getTime" method="_iFJacoobEeqevdMp57x66A">
          <ownedComment xmi:id="_iFy6tYobEeqevdMp57x66A">
            <body>
	 * @return le temps d'ajout actuel pour un franchissement de checkpoint {@link #time}</body>
          </ownedComment>
          <ownedParameter xmi:id="_hw_IUIobEeqevdMp57x66A" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_hxDZwIobEeqevdMp57x66A" name="getPosX" method="_iFKBgIobEeqevdMp57x66A">
          <ownedComment xmi:id="_iFy6toobEeqevdMp57x66A">
            <body>@return les décalages pour l'affichage et les tests de franchissement du checkpoint courant en fonction de sa {@link #voie}</body>
          </ownedComment>
          <ownedParameter xmi:id="_hxDZwYobEeqevdMp57x66A" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_hxEA0IobEeqevdMp57x66A" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_hxFO8IobEeqevdMp57x66A" name="randint" method="_iFKBg4obEeqevdMp57x66A">
          <ownedComment xmi:id="_iFy6t4obEeqevdMp57x66A">
            <body>Génère un chiffre aléatoire entre min et max
	 * @param min
	 * @param max
	 * @return random int between min and max</body>
          </ownedComment>
          <ownedParameter xmi:id="_hxFO8YobEeqevdMp57x66A" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_hxFO8oobEeqevdMp57x66A" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_hxF2AIobEeqevdMp57x66A" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_hxGdEIobEeqevdMp57x66A" name="restart" visibility="package" method="_iFKBh4obEeqevdMp57x66A">
          <ownedComment xmi:id="_iFzhwIobEeqevdMp57x66A">
            <body>réinitialise le temps restant et le checkpoint courant quand le joueur relance une partie</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_h-LPwIobEeqevdMp57x66A" name="Checkpoint" method="_iFIzY4obEeqevdMp57x66A">
          <eAnnotations xmi:id="_h-L20IobEeqevdMp57x66A" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_h-L20YobEeqevdMp57x66A" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_iFy6soobEeqevdMp57x66A">
            <body>Constructor
	 * @param etat</body>
          </ownedComment>
          <ownedParameter xmi:id="_h-LPwYobEeqevdMp57x66A" name="etat" type="_hytmoIobEeqevdMp57x66A"/>
          <ownedParameter xmi:id="_h-L20oobEeqevdMp57x66A" type="_hwyUAIobEeqevdMp57x66A" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_hxTRYIobEeqevdMp57x66A" name="Clock">
        <generalization xmi:id="_iAiAMIobEeqevdMp57x66A" general="_h_naMIobEeqevdMp57x66A"/>
        <ownedAttribute xmi:id="_iB9jkIobEeqevdMp57x66A" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_iB9jkYobEeqevdMp57x66A" value="1L"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iB-KoIobEeqevdMp57x66A" name="etat" visibility="private" type="_hytmoIobEeqevdMp57x66A" association="_iGuu0YobEeqevdMp57x66A"/>
        <ownedAttribute xmi:id="_iB-xsIobEeqevdMp57x66A" name="timer" type="_iAe84IobEeqevdMp57x66A" association="_iF0v4IobEeqevdMp57x66A"/>
        <ownedAttribute xmi:id="_iB-xsYobEeqevdMp57x66A" name="tempsRestant" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iB_YwIobEeqevdMp57x66A" name="tempsInit" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iB__0YobEeqevdMp57x66A" name="prevTime" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFKokIobEeqevdMp57x66A" name="Clock" specification="_h-VAwYobEeqevdMp57x66A">
          <ownedParameter xmi:id="_iFKokYobEeqevdMp57x66A" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iFKokoobEeqevdMp57x66A" name="etat" type="_hytmoIobEeqevdMp57x66A"/>
          <ownedParameter xmi:id="_iFKok4obEeqevdMp57x66A" type="_hxTRYIobEeqevdMp57x66A" direction="return"/>
          <language>java</language>
          <body>this.etat = etat;
		timer = createTimer();
		timer.start();
		setOpaque(false);
		setPreferredSize(new Dimension(72, 72));
     this.tempsRestant = x;
     this.prevTime = x+1; //pour pas afficher de gain de temps au début
     this.tempsInit = x;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFKolIobEeqevdMp57x66A" name="setTempsRestant" specification="_hxgFsIobEeqevdMp57x66A">
          <ownedParameter xmi:id="_iFKolYobEeqevdMp57x66A" name="tempsRestant">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>this.prevTime = this.tempsRestant;
 	this.tempsRestant = tempsRestant; 
 </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFLPoIobEeqevdMp57x66A" name="getTemps" specification="_hxhT0IobEeqevdMp57x66A">
          <ownedParameter xmi:id="_iFLPoYobEeqevdMp57x66A" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return tempsInit;
 </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFLPooobEeqevdMp57x66A" name="setTemps" specification="_hxih8IobEeqevdMp57x66A">
          <ownedParameter xmi:id="_iFLPo4obEeqevdMp57x66A" name="temps">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>this.tempsInit = temps;
 </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFL2sIobEeqevdMp57x66A" name="start" specification="_hxjJAIobEeqevdMp57x66A">
          <language>java</language>
          <body>timer.start();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFL2sYobEeqevdMp57x66A" name="stop" specification="_hxjwEIobEeqevdMp57x66A">
          <language>java</language>
          <body>timer.stop();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFL2soobEeqevdMp57x66A" name="createTimer" specification="_hxjwEYobEeqevdMp57x66A">
          <ownedParameter xmi:id="_iFL2s4obEeqevdMp57x66A" type="_iAe84IobEeqevdMp57x66A" direction="return"/>
          <language>java</language>
          <body>ActionListener action = new ActionListener (){
         public void actionPerformed (ActionEvent event){
             
         	if(tempsRestant>0){
                 setTempsRestant(tempsRestant-1);
             }
             else{
                 timer.stop();
                 etat.gameOver();
             }
         }
     };
     return new Timer (1000, action);
 </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFL2tIobEeqevdMp57x66A" name="restart" specification="_hxllQIobEeqevdMp57x66A">
          <language>java</language>
          <body>timer.stop();
		this.tempsRestant = 20;
		timer.start();
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_hxgFsIobEeqevdMp57x66A" name="setTempsRestant" method="_iFKolIobEeqevdMp57x66A">
          <ownedParameter xmi:id="_hxgswIobEeqevdMp57x66A" name="tempsRestant">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_hxhT0IobEeqevdMp57x66A" name="getTemps" method="_iFLPoIobEeqevdMp57x66A">
          <ownedParameter xmi:id="_hxh64IobEeqevdMp57x66A" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_hxih8IobEeqevdMp57x66A" name="setTemps" method="_iFLPooobEeqevdMp57x66A">
          <ownedParameter xmi:id="_hxih8YobEeqevdMp57x66A" name="temps">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_hxjJAIobEeqevdMp57x66A" name="start" method="_iFL2sIobEeqevdMp57x66A">
          <ownedComment xmi:id="_iF1W8YobEeqevdMp57x66A">
            <body>demarrage du timer</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_hxjwEIobEeqevdMp57x66A" name="stop" method="_iFL2sYobEeqevdMp57x66A">
          <ownedComment xmi:id="_iF1W8oobEeqevdMp57x66A">
            <body>arret du timer</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_hxjwEYobEeqevdMp57x66A" name="createTimer" visibility="private" method="_iFL2soobEeqevdMp57x66A">
          <ownedComment xmi:id="_iF1-AIobEeqevdMp57x66A">
            <body>creation du timer
	 * @return le timer</body>
          </ownedComment>
          <ownedParameter xmi:id="_iAhZIIobEeqevdMp57x66A" type="_iAe84IobEeqevdMp57x66A" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_hxllQIobEeqevdMp57x66A" name="restart" method="_iFL2tIobEeqevdMp57x66A"/>
        <ownedOperation xmi:id="_h-VAwYobEeqevdMp57x66A" name="Clock" method="_iFKokIobEeqevdMp57x66A">
          <eAnnotations xmi:id="_h-Vn0oobEeqevdMp57x66A" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_h-Vn04obEeqevdMp57x66A" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_iF1W8IobEeqevdMp57x66A">
            <body>Construction de l'horloge
	 * @param x temps initiale en secondes</body>
          </ownedComment>
          <ownedParameter xmi:id="_h-Vn0IobEeqevdMp57x66A" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_h-Vn0YobEeqevdMp57x66A" name="etat" type="_hytmoIobEeqevdMp57x66A"/>
          <ownedParameter xmi:id="_h-Vn1IobEeqevdMp57x66A" type="_hxTRYIobEeqevdMp57x66A" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_hxxLcIobEeqevdMp57x66A" name="Decor">
        <ownedAttribute xmi:id="_iCAm4IobEeqevdMp57x66A" name="probaArbre" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_iCBN8IobEeqevdMp57x66A" value="40"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iCCcEYobEeqevdMp57x66A" name="probaRock" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_iCDDIIobEeqevdMp57x66A" value="40"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iCDqMYobEeqevdMp57x66A" name="probaHouse" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_iCDqMoobEeqevdMp57x66A" value="20"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iCERQYobEeqevdMp57x66A" name="x" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iCFfYIobEeqevdMp57x66A" name="y" visibility="private" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iCJJwIobEeqevdMp57x66A" name="width" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iCJw0YobEeqevdMp57x66A" name="height" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iCK-8YobEeqevdMp57x66A" name="etat" visibility="private" type="_hytmoIobEeqevdMp57x66A" association="_iGvV4YobEeqevdMp57x66A"/>
        <ownedAttribute xmi:id="_iCMNEIobEeqevdMp57x66A" name="type" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFMdwoobEeqevdMp57x66A" name="Decor" specification="_h-c8kIobEeqevdMp57x66A">
          <ownedParameter xmi:id="_iFMdw4obEeqevdMp57x66A" name="etat" type="_hytmoIobEeqevdMp57x66A"/>
          <ownedParameter xmi:id="_iFMdxIobEeqevdMp57x66A" type="_hxxLcIobEeqevdMp57x66A" direction="return"/>
          <language>java</language>
          <body>this.y = etat.getPosY() + Affichage.HAUT;
		int rdm = randint(0, 100);
		if(rdm &lt; probaArbre) {
			//arbre
			this.type = 0;
			this.width = 50;
			this.height = 100;
			
		}else {
			if(rdm &lt; probaArbre + probaRock) {
				//rocher
				this.type = 1;
				this.width = 50;
				this.height = 40;
			}else {
				// Maison
				this.type = 2;
				this.width = 100;
				this.height = 100;
			}
		}
		if(randint(0,1)==0) {
			//décor à gauche
			this.x = randint(-Affichage.LARG,Affichage.LARG/2-Piste.largeurPiste/2-Piste.dec-this.width);
		}else {
			//décor à droite
			this.x = randint(Affichage.LARG/2+Piste.largeurPiste/2+Piste.dec, Affichage.LARG*2);
		}
		
		this.etat = etat;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFNE0IobEeqevdMp57x66A" name="getBounds" specification="_hx68cIobEeqevdMp57x66A">
          <ownedParameter xmi:id="_iFNE0YobEeqevdMp57x66A" type="_h-agUYobEeqevdMp57x66A" direction="return"/>
          <language>java</language>
          <body>Point p1 = new Point(x-etat.getPosX(), getY());						//p1 : point en bas à gauche
		Point p3 = etat.projection(p1.x,0,p1.y);							//p3 : projection de p1 sur le plan (hauteur = 0)
		Point p2 = etat.projection(p1.x+width, 0, p1.y);					//p2 : projection du point en bas à droite sur le plan (hauteur = 0)
		
		int haut =  etat.projection(p1.x, height, p1.y).y - p3.y;			//haut : y du point en haut à gauche (projeté sur le plan) - y de p3
		int larg = p2.x-p3.x;												//larg : x de p2 - x de p1
		return new Rectangle(p3.x, Affichage.HAUT - p3.y, larg, haut);		// on renvoie direct les coordonnées avec Y inversé
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFNE0oobEeqevdMp57x66A" name="randint" specification="_hx7jgIobEeqevdMp57x66A">
          <ownedParameter xmi:id="_iFNE04obEeqevdMp57x66A" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iFNE1IobEeqevdMp57x66A" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iFNE1YobEeqevdMp57x66A" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return ThreadLocalRandom.current().nextInt(min, max + 1);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_hx68cIobEeqevdMp57x66A" name="getBounds" method="_iFNE0IobEeqevdMp57x66A">
          <ownedParameter xmi:id="_iAjOUIobEeqevdMp57x66A" type="_h-agUYobEeqevdMp57x66A" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_hx7jgIobEeqevdMp57x66A" name="randint" visibility="private" method="_iFNE0oobEeqevdMp57x66A">
          <ownedComment xmi:id="_iF3MIIobEeqevdMp57x66A">
            <body>Génère un chiffre aléatoire entre min et max
	 * @param int min
	 * @param int max
	 * @return random int between min and max</body>
          </ownedComment>
          <ownedParameter xmi:id="_hx8KkIobEeqevdMp57x66A" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_hx8KkYobEeqevdMp57x66A" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_hx8KkoobEeqevdMp57x66A" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_h-c8kIobEeqevdMp57x66A" name="Decor" method="_iFMdwoobEeqevdMp57x66A">
          <eAnnotations xmi:id="_h-djoIobEeqevdMp57x66A" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_h-djoYobEeqevdMp57x66A" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_h-c8kYobEeqevdMp57x66A" name="etat" type="_hytmoIobEeqevdMp57x66A"/>
          <ownedParameter xmi:id="_h-djooobEeqevdMp57x66A" type="_hxxLcIobEeqevdMp57x66A" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_hyEGYIobEeqevdMp57x66A" name="Ennemi">
        <ownedAttribute xmi:id="_iCNbMIobEeqevdMp57x66A" name="MAX_TIME" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_iCNbMYobEeqevdMp57x66A" value="80"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iCOpUIobEeqevdMp57x66A" name="MIN_TIME" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_iCOpUYobEeqevdMp57x66A" value="30"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iCS6wIobEeqevdMp57x66A" name="V_MAX" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_iCTh0IobEeqevdMp57x66A" value="(int) Etat.vitesseMax"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iCUI4IobEeqevdMp57x66A" name="FACT_V" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_iCUI4YobEeqevdMp57x66A" value="90"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iCVXAYobEeqevdMp57x66A" name="x" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iCV-EYobEeqevdMp57x66A" name="y" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iCXMMYobEeqevdMp57x66A" name="etatMoto" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iCYaUYobEeqevdMp57x66A" name="etat" visibility="private" type="_hytmoIobEeqevdMp57x66A" association="_iG01cYobEeqevdMp57x66A"/>
        <ownedAttribute xmi:id="_iCZBYYobEeqevdMp57x66A" name="timeVirage" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFOS8IobEeqevdMp57x66A" name="Ennemi" specification="_h-uCUIobEeqevdMp57x66A">
          <ownedParameter xmi:id="_iFOS8YobEeqevdMp57x66A" name="etat" type="_hytmoIobEeqevdMp57x66A"/>
          <ownedParameter xmi:id="_iFOS8oobEeqevdMp57x66A" type="_hyEGYIobEeqevdMp57x66A" direction="return"/>
          <language>java</language>
          <body>this.y = etat.getPosY() + Affichage.HAUT;
		this.x = randint((Affichage.LARG/2)-Piste.largeurPiste/2, (Affichage.LARG/2)+Piste.largeurPiste/2);
		
		this.etatMoto = 1;
		this.etat = etat;
		this.timeVirage = 0;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFOS84obEeqevdMp57x66A" name="getEtatMoto" specification="_hyWaQIobEeqevdMp57x66A">
          <ownedParameter xmi:id="_iFOS9IobEeqevdMp57x66A" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return this.etatMoto;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFO6AIobEeqevdMp57x66A" name="updateEtatMoto" specification="_hyXBUYobEeqevdMp57x66A">
          <language>java</language>
          <body>int rdm = randint(0, 1000);
		
		if(timeVirage &lt;= 0) {
			//si le temps est écoulé alors la moto va tout droit
			this.etatMoto = 1;
		}
		
		if(this.etatMoto == 1) {
			if(rdm &lt;= 5) {
				if(this.x  &lt;= Affichage.LARG/2 + Piste.largeurPiste/2) {
					//etat virage droite si on a pas déjà dépassé le bord droit de la piste
					this.etatMoto = 2;
					this.timeVirage = randint(MIN_TIME, MAX_TIME);
				}
				
			}else {
				if(rdm &lt;= 10) {
					if(this.x  >= Affichage.LARG/2 - Piste.largeurPiste/2) {
						//etat virage gauche si on a pas déjà dépassé le bord gauche de la piste
						this.etatMoto = 0;
						this.timeVirage = randint(MIN_TIME, MAX_TIME);
					}
				}
			}
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFO6AYobEeqevdMp57x66A" name="getVitesse" specification="_hyXoYIobEeqevdMp57x66A">
          <ownedParameter xmi:id="_iFO6AoobEeqevdMp57x66A" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>int away = Math.abs((int) ((double)(this.x - Affichage.LARG/2) / FACT_V));
		
		return V_MAX - away ;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFPhEIobEeqevdMp57x66A" name="avance" specification="_hyYPcIobEeqevdMp57x66A">
          <language>java</language>
          <body>//dans tout les cas on avance en y
		this.y += getVitesse();
		updateEtatMoto();
		if(etatMoto == 0) {
			// on va a gauche 
			
			this.x -= Etat.deplacement;
			this.timeVirage--;
			
			// on arrete le virage si on va trop loin du centre de la fenetre
			if(this.x &lt;= Affichage.LARG/2 - Piste.largeurPiste/2) {
				this.timeVirage = 0;
			}
			
		}else {
			if(etatMoto == 2) {
				//on va a droite 
				this.x += Etat.deplacement;
				this.timeVirage--;
				// on arrete le virage si on va trop loin du centre de la fenetre
				if(this.x >= Affichage.LARG/2 + Piste.largeurPiste/2) {
					this.timeVirage = 0;
				}
			}
		}		
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFPhEYobEeqevdMp57x66A" name="recule" specification="_hydH8IobEeqevdMp57x66A">
          <language>java</language>
          <body>this.y -= V_MAX;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFPhEoobEeqevdMp57x66A" name="getMotoBounds" specification="_hyeWEIobEeqevdMp57x66A">
          <ownedParameter xmi:id="_iFPhE4obEeqevdMp57x66A" type="_h-agUYobEeqevdMp57x66A" direction="return"/>
          <language>java</language>
          <body>String str = VueEnnemis.PATH+etatMoto+&quot;.png&quot;;
		try {
			Image image = ImageIO.read(VueEnnemis.class.getResource(str));
			// on multiplie par 1.2 pour que la taille soit environs la meme que la moto du joueur
			// (car la moto du joueur n'est pas soumise à la perspective vu qu'elle est toujours au meme y)
			int height = (int) (image.getHeight(null) * 1.2);
			int width = (int) (image.getWidth(null) * 1.2);
			
			return new Rectangle(x,y,width,height);
			
		}catch (IOException e) {
			e.printStackTrace();
			return new Rectangle(-1,-1,-1,-1);
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFQIIIobEeqevdMp57x66A" name="getBounds" specification="_hyjOkIobEeqevdMp57x66A">
          <ownedParameter xmi:id="_iFQIIYobEeqevdMp57x66A" type="_h-agUYobEeqevdMp57x66A" direction="return"/>
          <language>java</language>
          <body>Rectangle b = getMotoBounds();
		
		Point p1 = new Point(x-etat.getPosX(), y - etat.getPosY());			//p1 : point en bas à gauche
		Point p3 = etat.projection(p1.x,0,p1.y);							//p3 : projection de p1 sur le plan (hauteur = 0)
		
		
		Point p2 = etat.projection(p1.x+b.width, 0, p1.y);					//p2 : projection du point en bas à droite sur le plan (hauteur = 0)
		
		int haut =  etat.projection(p1.x, b.height, p1.y).y - p3.y;			//haut : y du point en haut à gauche (projeté sur le plan) - y de p3
		int larg = p2.x-p3.x;												//larg : x de p2 - x de p1
		
		return new Rectangle(p3.x, Affichage.HAUT - p3.y, larg, haut);		// on renvoie direct les coordonnées avec Y inversé
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFQIIoobEeqevdMp57x66A" name="randint" specification="_hykcsIobEeqevdMp57x66A">
          <ownedParameter xmi:id="_iFQII4obEeqevdMp57x66A" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iFQIJIobEeqevdMp57x66A" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iFQIJYobEeqevdMp57x66A" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return ThreadLocalRandom.current().nextInt(min, max + 1);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_hyWaQIobEeqevdMp57x66A" name="getEtatMoto" method="_iFOS84obEeqevdMp57x66A">
          <ownedParameter xmi:id="_hyXBUIobEeqevdMp57x66A" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_hyXBUYobEeqevdMp57x66A" name="updateEtatMoto" visibility="private" method="_iFO6AIobEeqevdMp57x66A"/>
        <ownedOperation xmi:id="_hyXoYIobEeqevdMp57x66A" name="getVitesse" visibility="private" method="_iFO6AYobEeqevdMp57x66A">
          <ownedComment xmi:id="_iF3MIYobEeqevdMp57x66A">
            <body>On calcule away qui représente la distance entre le milieu de la piste et la moto
	 * Ici on calcule la différence entre le milieu de la fenetre et la position de la moto
	 * divisé par {@link #V_MAX}
	 * @return {@link #V_MAX} - away</body>
          </ownedComment>
          <ownedParameter xmi:id="_hyXoYYobEeqevdMp57x66A" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_hyYPcIobEeqevdMp57x66A" name="avance" method="_iFPhEIobEeqevdMp57x66A"/>
        <ownedOperation xmi:id="_hydH8IobEeqevdMp57x66A" name="recule" method="_iFPhEYobEeqevdMp57x66A">
          <ownedComment xmi:id="_iF3MIoobEeqevdMp57x66A">
            <body>fait reculer l'ennemi, appelé par {@link Etat#CollisionEnnemi()} quand le joueur fait une queue de poisson</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_hyeWEIobEeqevdMp57x66A" name="getMotoBounds" visibility="private" method="_iFPhEoobEeqevdMp57x66A">
          <ownedParameter xmi:id="_iAlDgIobEeqevdMp57x66A" type="_h-agUYobEeqevdMp57x66A" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_hyjOkIobEeqevdMp57x66A" name="getBounds" method="_iFQIIIobEeqevdMp57x66A">
          <ownedParameter xmi:id="_iAlDgYobEeqevdMp57x66A" type="_h-agUYobEeqevdMp57x66A" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_hykcsIobEeqevdMp57x66A" name="randint" visibility="private" method="_iFQIIoobEeqevdMp57x66A">
          <ownedComment xmi:id="_iF3zMIobEeqevdMp57x66A">
            <body>Génère un chiffre aléatoire entre min et max
	 * @param int min
	 * @param int max
	 * @return random int between min and max</body>
          </ownedComment>
          <ownedParameter xmi:id="_hykcsYobEeqevdMp57x66A" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_hykcsoobEeqevdMp57x66A" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_hylDwIobEeqevdMp57x66A" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_h-uCUIobEeqevdMp57x66A" name="Ennemi" method="_iFOS8IobEeqevdMp57x66A">
          <eAnnotations xmi:id="_h-uCUoobEeqevdMp57x66A" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_h-uCU4obEeqevdMp57x66A" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_h-uCUYobEeqevdMp57x66A" name="etat" type="_hytmoIobEeqevdMp57x66A"/>
          <ownedParameter xmi:id="_h-uCVIobEeqevdMp57x66A" type="_hyEGYIobEeqevdMp57x66A" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_hytmoIobEeqevdMp57x66A" name="Etat">
        <ownedAttribute xmi:id="_iCa2kIobEeqevdMp57x66A" name="deplacement" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_iCbdoIobEeqevdMp57x66A" value="6"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iCcEsIobEeqevdMp57x66A" name="FACT_ACCEL" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_iCcEsYobEeqevdMp57x66A" value="Piste.largeurPiste/150"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iCcrwYobEeqevdMp57x66A" name="FACT_ACCEL_VERT" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_iCd54IobEeqevdMp57x66A" value="1.5"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iCeg8IobEeqevdMp57x66A" name="ACCEL_MAX" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_iCeg8YobEeqevdMp57x66A" value="150"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iCiLUIobEeqevdMp57x66A" name="PosVert_MAX" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_iCiLUYobEeqevdMp57x66A" value="50"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iCjZcYobEeqevdMp57x66A" name="probaDecor" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_iCjZcoobEeqevdMp57x66A" value="5"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iCknkIobEeqevdMp57x66A" name="maxDecors" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_iCknkYobEeqevdMp57x66A" value="10"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iCnq4IobEeqevdMp57x66A" name="probaEnnemi" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_iCnq4YobEeqevdMp57x66A" value="5"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iCo5AIobEeqevdMp57x66A" name="maxEnnemis" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_iCo5AYobEeqevdMp57x66A" value="3"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iCpgEYobEeqevdMp57x66A" name="HAUT_OBS" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_iCqHIIobEeqevdMp57x66A" value="10"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iCr8UIobEeqevdMp57x66A" name="HAUT_ENNEMIS" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_iCr8UYobEeqevdMp57x66A" value="20"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iCtxgIobEeqevdMp57x66A" name="ImpactObstacle" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_iCtxgYobEeqevdMp57x66A" value="4"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iCuYkYobEeqevdMp57x66A" name="ImpactHole" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_iCu_oIobEeqevdMp57x66A" value="7"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iCwNwIobEeqevdMp57x66A" name="MinVitesseVol" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_iCwNwYobEeqevdMp57x66A" value="2"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iCw00YobEeqevdMp57x66A" name="vitesseMax" visibility="package" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_iCw00oobEeqevdMp57x66A" value="8.0"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iCyC8YobEeqevdMp57x66A" name="ADD_SCORE" visibility="package" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_iCyqAIobEeqevdMp57x66A" value="10"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iCzREIobEeqevdMp57x66A" name="posX" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iC0fMIobEeqevdMp57x66A" name="leftPressed" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iC2UYIobEeqevdMp57x66A" name="rightPressed" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iC27cYobEeqevdMp57x66A" name="upPressed" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iC3igYobEeqevdMp57x66A" name="downPressed" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iC4woIobEeqevdMp57x66A" name="goDown" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iC7z8IobEeqevdMp57x66A" name="accel" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iC9CEYobEeqevdMp57x66A" name="vitesse" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iC9pIIobEeqevdMp57x66A" name="fin" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iC-QMYobEeqevdMp57x66A" name="posVert">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iC_eUIobEeqevdMp57x66A" name="etatMoto" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iDB6kIobEeqevdMp57x66A" name="retry" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iDChoIobEeqevdMp57x66A" name="score" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iDDvwYobEeqevdMp57x66A" name="threads" visibility="private" type="_hwNFMIobEeqevdMp57x66A" association="_iG2DkIobEeqevdMp57x66A">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_iDDvwoobEeqevdMp57x66A" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iDE94IobEeqevdMp57x66A" name="montagne" visibility="private" type="_h0UJIIobEeqevdMp57x66A" association="_iG68EIobEeqevdMp57x66A"/>
        <ownedAttribute xmi:id="_iDFk8YobEeqevdMp57x66A" name="check" type="_hwyUAIobEeqevdMp57x66A" isReadOnly="true" association="_iG7jIYobEeqevdMp57x66A"/>
        <ownedAttribute xmi:id="_iDGMAIobEeqevdMp57x66A" name="decors" type="_h-1XEIobEeqevdMp57x66A" isReadOnly="true" association="_iG8xQYobEeqevdMp57x66A"/>
        <ownedAttribute xmi:id="_iDHaIIobEeqevdMp57x66A" name="ennemis" type="_h-1XEIobEeqevdMp57x66A" isReadOnly="true" association="_iG9_YYobEeqevdMp57x66A"/>
        <ownedAttribute xmi:id="_iDLrkIobEeqevdMp57x66A" name="piste" type="_h070MIobEeqevdMp57x66A" isReadOnly="true" association="_iG_NgYobEeqevdMp57x66A"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFR9U4obEeqevdMp57x66A" name="Etat" specification="_hzC90IobEeqevdMp57x66A">
          <ownedParameter xmi:id="_iFR9VIobEeqevdMp57x66A" type="_hytmoIobEeqevdMp57x66A" direction="return"/>
          <language>java</language>
          <body>this.goDown = false;
		this.leftPressed = false;
		this.rightPressed = false;
		this.upPressed = false;
		this.downPressed = false;
		this.piste = new Piste(this);
		this.check = new Checkpoint(this);
		this.posX = 0;
		this.accel = 100.;
		this.vitesse =  vitesseMax;
		this.montagne = new Montagne(this);
		this.etatMoto = 1;
		this.posVert = 0;
		this.decors = new ArrayList&lt;Decor>();
		this.ennemis = new ArrayList&lt;Ennemi>();
		this.score = 0;
		this.fin = false;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFR9VYobEeqevdMp57x66A" name="projection" specification="_hzEL8IobEeqevdMp57x66A">
          <ownedParameter xmi:id="_iFR9VoobEeqevdMp57x66A" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iFR9V4obEeqevdMp57x66A" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iFR9WIobEeqevdMp57x66A" name="z">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iFR9WYobEeqevdMp57x66A" type="_h-XdAIobEeqevdMp57x66A" direction="return"/>
          <language>java</language>
          <body>int posAffX = Affichage.LARG/2 - getPosX(); //position d'affichage posX depuis le milieu de l'écran
		//projection sur l'axe y (de la fenetre)
		int y_resultat = (z * (Affichage.HAUTEUR_Y - y)) / (z + Affichage.RECUL_Z) + y;
		//projection sur l'axe x (de la fenetre)
		int x_resultat = (z * (posAffX - x)) / (z + Affichage.RECUL_Z) + x;
		return new Point(x_resultat,y_resultat);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFSkYIobEeqevdMp57x66A" name="testCheckpoint" specification="_hzEzAIobEeqevdMp57x66A">
          <language>java</language>
          <body>Rectangle mBounds = getMotoBounds();
		Point[][] piste = getPiste();
		//calcul indice checkpoint sur la piste
		int i = (check.getPosY()-this.getPosY())/Piste.incr+1;
		if(i&lt;piste.length) {
			// on projete un point au niveau Y du checkpoint pour obtenir l'Y d'affichage du checkpoint (qui prend déjà en compte posY de la moto)
			int yCheckProj =  projection(piste[i][0].x, 0, piste[i][0].y).y;
			
			if(yCheckProj &lt;= mBounds.height) {
			//si le checkpoint a atteint le niveau de la moto
				// calcul points au niveau du checkpoint
				Point pG = projection(piste[i][0].x, 0, piste[i][0].y);
				Point pD = projection(piste[i][1].x, 0, piste[i][1].y);	
				
				// on récupère x1 et x2 du checkpoint tels qu'ils sont affichés
				double[] Xcheck = check.getPosX();
				int largPiste = pD.x - pG.x; 
				int cX1 = pG.x + (int)(Xcheck[0] * largPiste);
				int cX2 = pD.x + (int)(Xcheck[1] * largPiste);
	
				// on récupère x1 et x2 de la Moto
				int mX1 = mBounds.x;                
				int mX2 = mBounds.x + mBounds.width;
				
				if((cX1 &lt;= mX2 &amp;&amp; mX2 &lt;= cX2) || (cX1 &lt;= mX1 &amp;&amp; mX1 &lt;= cX2)) {
					//si x1 ou x2 de la moto est entre les coordonnées X du checkpoint alors on ajoute du temps
					check.addTime();
					// et on génère le prochain checkpoint
					check.nextCheckpoint();
				}
			}
			
			if(yCheckProj &lt;= VueMoto.decBord) {
				//sinon si, le checkpoint est sorti de la fenètre alors on passe au suivant sans ajouter de temps
				System.out.println(&quot;checkpoint missed : checkPosY &quot;+check.getPosY()+&quot; | posY &quot;+getPosY());
				check.nextCheckpoint();
				System.out.println(&quot;checkpoint missed : checkPosY &quot;+check.getPosY()+&quot; | posY &quot;+getPosY());
			}
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFSkYYobEeqevdMp57x66A" name="gameOver" specification="_hzFaEIobEeqevdMp57x66A">
          <language>java</language>
          <body>System.out.println(&quot;GAME OVER&quot;);
		this.vitesse = 0;
		this.accel = 0;
		this.fin = true;
		
		for(StoppableThread t : this.threads) {
			
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFSkYoobEeqevdMp57x66A" name="updateVitesse" specification="_hzLgsIobEeqevdMp57x66A">
          <language>java</language>
          <body>//this.vitesse = getAccel()/100*vitesse;
		
		double newV = getAccel()/100*vitesse;
		
		if(newV&lt;vitesseMax) {
			this.vitesse=newV;
		}else {
			this.vitesse = vitesseMax;
		}
		
		
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFSkY4obEeqevdMp57x66A" name="updateAccel" specification="_hzMHwIobEeqevdMp57x66A">
          <language>java</language>
          <body>double away = (double)(Math.abs(Affichage.LARG/2 - piste.getMidX(0)) + Math.abs(posX)) / FACT_ACCEL;
		//on ajoute un dixième de la position verticale de la moto
		away += this.posVert / FACT_ACCEL_VERT ;
		
		if(accel>0) {
			accel = ACCEL_MAX - away;
		}
		if(accel>=ACCEL_MAX) {
			accel=ACCEL_MAX;
		}
		
		
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFTLcIobEeqevdMp57x66A" name="avance" specification="_hzMu0IobEeqevdMp57x66A">
          <language>java</language>
          <body>testCheckpoint();
		/* 0 &lt;= accel/100 &lt;= 1
		 * quand accel est Ã  100 on avance de vitesseMax
		 */
		if(this.vitesse &lt;= 0)gameOver();
		int iEnnemi = CollisionEnnemi();
		testCheckpoint();
		if(iEnnemi !=-1) {
			// on considère qu'une collision avec un ennemi ne fait pas baisser la vitesse en dessous de 1
			if(this.vitesse-1>1)this.vitesse -= 1;
			this.ennemis.get(iEnnemi).avance();
		}else {
			piste.avance(Math.round((float)getVitesse()));
		}
		// on fait avancer tout les ennemis
		for (Ennemi ennemi : ennemis) {
			ennemi.avance();
		}
		testCheckpoint();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFTLcYobEeqevdMp57x66A" name="pressLeft" specification="_hzNV4IobEeqevdMp57x66A">
          <ownedParameter xmi:id="_iFTLcoobEeqevdMp57x66A" name="b">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>this.leftPressed = b;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFTLc4obEeqevdMp57x66A" name="pressRight" specification="_hzN88IobEeqevdMp57x66A">
          <ownedParameter xmi:id="_iFTLdIobEeqevdMp57x66A" name="b">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>this.rightPressed = b;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFTygIobEeqevdMp57x66A" name="pressUp" specification="_hzOkAIobEeqevdMp57x66A">
          <ownedParameter xmi:id="_iFTygYobEeqevdMp57x66A" name="b">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>this.upPressed = b;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFTygoobEeqevdMp57x66A" name="pressDown" specification="_hzPyIIobEeqevdMp57x66A">
          <ownedParameter xmi:id="_iFTyg4obEeqevdMp57x66A" name="b">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>this.downPressed = b;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFTyhIobEeqevdMp57x66A" name="goUp" specification="_hzV4wIobEeqevdMp57x66A">
          <language>java</language>
          <body>if(posVert &lt; PosVert_MAX) {
			this.posVert++;
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFTyhYobEeqevdMp57x66A" name="goDown" specification="_hzV4wYobEeqevdMp57x66A">
          <language>java</language>
          <body>if(posVert > 0) {
			this.posVert--;
			this.goDown = true;
		}else {
			this.goDown = false;
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFUZkIobEeqevdMp57x66A" name="goLeft" specification="_hzWf0IobEeqevdMp57x66A">
          <language>java</language>
          <body>this.posX = posX-deplacement;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFUZkYobEeqevdMp57x66A" name="goRight" specification="_hzWf0YobEeqevdMp57x66A">
          <language>java</language>
          <body>this.posX = posX+deplacement;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFUZkoobEeqevdMp57x66A" name="goStraight" specification="_hzXG4IobEeqevdMp57x66A">
          <language>java</language>
          <body>this.etatMoto = 1;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFUZk4obEeqevdMp57x66A" name="majEtatMoto" specification="_hzXt8IobEeqevdMp57x66A">
          <language>java</language>
          <body>if(!this.fin){
			if(leftPressed) {
				if(rightPressed) {
					//si les 2 touche sont pressées en même temps alors on va tout droit 
					this.etatMoto = 1;		
				}else {
					//si seulement la touche pour aller à gauche est pressée alors on va à gauche
					this.etatMoto = 0;
					goLeft();
				}	
			}else {
				if(rightPressed) {
					//si seulement la touche pour aller à droite est pressée alors on va à droite
					this.etatMoto = 2;
					goRight();
				}else {
					//si aucune des 2 touches n'est pressée alors on va tout droit 
					this.etatMoto = 1;
				}
			}
			
			if(this.vitesse &lt; MinVitesseVol) {
				goDown();
			}else {
				if(this.upPressed &amp;&amp; !this.downPressed) {
					goUp();
				}else {
					if(this.downPressed) {
						goDown();
					}
				}
			}
		}	
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFUZlIobEeqevdMp57x66A" name="testCollision" specification="_hzXt8YobEeqevdMp57x66A">
          <ownedParameter xmi:id="_iFUZlYobEeqevdMp57x66A" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>// si la moto à une altitude inférieure à 1 (sinon on ingrore les obstacles) (altitude 1 telle qu'affichée à l'utilisateur mais 10 en réalité)
		if(this.posVert &lt; HAUT_OBS) {	
			int i=0;
			for(Obstacle o : piste.getObstacles()) {
				Rectangle oBounds = o.getBounds();
				Rectangle mBounds = getMotoBounds();
				
				int mX1 = Affichage.LARG/2;						//bord gauche de la moto
				int mX2 = mX1 + mBounds.width;					//bord droit de la moto
				int mY1 = Affichage.HAUT - mBounds.height;		//bord haut de la moto
				int mY2 = Affichage.HAUT - VueMoto.decBord;		//bord bas de la moto
				
				// si l'obstacle arrive à la position y de la moto
				// c-a-d si le bas de l'obstacle est en dessous du haut de la moto ET que le haut de l'obstacle est au dessus du bas de la moto
				if(oBounds.y + oBounds.height > mY1 &amp;&amp; oBounds.y &lt;= mY2) {
					// si bord gauche de OBS &lt; bord droit de moto ET bord droit de OBS > bord gauche de moto
					if(oBounds.x &lt;= mX2 &amp;&amp; oBounds.x + oBounds.width >= mX1) {
						if(o.isHole()) {
							this.vitesse -= ImpactHole;
						}else {
							this.vitesse -= ImpactObstacle;
						}
						return i;
					}
				}
				i++;
			}
		}
		return -1;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFVAoIobEeqevdMp57x66A" name="CollisionEnnemi" specification="_hzYVAYobEeqevdMp57x66A">
          <ownedParameter xmi:id="_iFVAoYobEeqevdMp57x66A" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>for (int i=0; i&lt; ennemis.size();i++) {
			Ennemi ennemi = ennemis.get(i);
			Rectangle eBounds = ennemi.getBounds();
			Rectangle mBounds = getMotoBounds();
			
			int mX1 = Affichage.LARG/2;						//bord gauche de la moto
			int mX2 = mX1 + mBounds.width;					//bord droit de la moto
			int mY1 = Affichage.HAUT - mBounds.height;		//bord haut de la moto
			int mY2 = Affichage.HAUT - VueMoto.decBord;		//bord bas de la moto
			
			
			// si la on est en dessous de 1 d'altitude et que l'ennemi arrive à la position y de la moto
			// c-a-d si le bas de l'ennemi est en dessous du haut de la moto ET que le haut de l'ennemi est au dessus du bas de la moto
			if(this.posVert &lt; HAUT_ENNEMIS &amp;&amp; eBounds.y + eBounds.height > mY1 &amp;&amp; eBounds.y &lt;= mY2) {
				
				
				//si bord gauche de ennemi &lt; bord droit de moto ET bord droit de ennemi > bord gauche de moto
				if(eBounds.x &lt;= mX2 &amp;&amp; eBounds.x + eBounds.width >= mX1) {
					//si le haut de la moto est > au haut de l'ennemi, c'est l'ennemi qui perd de la vitesse 
					if(mY1 &lt; eBounds.y ) {
						ennemi.recule();
						
					}else {
						//sinon on retourne l'indice de l'ennemi pour le faire avancer et faire perdre de la vitesse au joueur
						return i;
					}
					
				}
			}
		}
		return -1;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFVAooobEeqevdMp57x66A" name="updateDecors" specification="_hzY8EIobEeqevdMp57x66A">
          <language>java</language>
          <body>int rdm = randint(0, 100);
		
		for (int i=0; i&lt;decors.size();) {
			Rectangle b = decors.get(i).getBounds();
			//on retire l'obstacle si il sort de la vue
			if(b.y >= Affichage.LARG || b.x+b.width &lt;= 0 || b.x > Affichage.LARG) {
				decors.remove(i);
			}else {
				i++;
			}
		}
		
		//on génére un décor si on a pas atteint le max et avec une certaine probabilité
		if(decors.size() &lt; maxDecors &amp;&amp; rdm &lt; probaDecor) {
			this.decors.add(new Decor(this));
		}
		
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFVAo4obEeqevdMp57x66A" name="updateEnnemis" specification="_hzZjIIobEeqevdMp57x66A">
          <language>java</language>
          <body>for (int i=0; i&lt;ennemis.size();) {
			Rectangle b = ennemis.get(i).getBounds();
			//on retire l'ennemi si il sort de la vue
			if(b.y >= Affichage.HAUT) {
				System.out.println(&quot;y = &quot;+b.y);
				ennemis.remove(i);
				this.addScore();
			}else {
				i++;
			}
		}
		int rdm = randint(0,1000);
		if(ennemis.size() &lt; maxEnnemis &amp;&amp; rdm &lt;= probaEnnemi)ennemis.add(new Ennemi(this));
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFVnsIobEeqevdMp57x66A" name="getFin" specification="_hzZjIYobEeqevdMp57x66A">
          <ownedParameter xmi:id="_iFVnsYobEeqevdMp57x66A" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>return fin;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFVnsoobEeqevdMp57x66A" name="getPosVert" specification="_hzcmcIobEeqevdMp57x66A">
          <ownedParameter xmi:id="_iFVns4obEeqevdMp57x66A" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return this.posVert;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFVntIobEeqevdMp57x66A" name="getEtatMoto" specification="_hzdNgIobEeqevdMp57x66A">
          <ownedParameter xmi:id="_iFVntYobEeqevdMp57x66A" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>majEtatMoto();
		return this.etatMoto;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFWOwIobEeqevdMp57x66A" name="getMotoBounds" specification="_hzd0kIobEeqevdMp57x66A">
          <ownedParameter xmi:id="_iFWOwYobEeqevdMp57x66A" type="_h-agUYobEeqevdMp57x66A" direction="return"/>
          <language>java</language>
          <body>String str = VueMoto.PATH+etatMoto+&quot;.png&quot;;
		try {
			Image image = ImageIO.read(VueMoto.class.getResource(str));
			
			
			int height = image.getHeight(null) + VueMoto.decBord;
			int width = image.getWidth(null);
			int x = posX + Affichage.LARG/2;
			
			int y = getPosY();
			return new Rectangle(x,y,width,height);
			
		}catch (IOException e) {
			e.printStackTrace();
			return new Rectangle(-1,-1,-1,-1);
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFWOwoobEeqevdMp57x66A" name="getLargPiste" specification="_hzeboIobEeqevdMp57x66A">
          <ownedParameter xmi:id="_iFWOw4obEeqevdMp57x66A" name="i">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iFWOxIobEeqevdMp57x66A" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return piste.getLargPiste(i);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFWOxYobEeqevdMp57x66A" name="getPosY" specification="_hzfpwIobEeqevdMp57x66A">
          <ownedParameter xmi:id="_iFWOxoobEeqevdMp57x66A" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return piste.getPosY();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFW10IobEeqevdMp57x66A" name="getMontagne" specification="_hzj7MIobEeqevdMp57x66A">
          <ownedParameter xmi:id="_iFW10YobEeqevdMp57x66A" type="_h-1XEIobEeqevdMp57x66A" direction="return"/>
          <language>java</language>
          <body>return montagne.getPointsVisibles();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFW10oobEeqevdMp57x66A" name="getObstacles" specification="_hzqo4IobEeqevdMp57x66A">
          <ownedParameter xmi:id="_iFW104obEeqevdMp57x66A" type="_h-1XEIobEeqevdMp57x66A" direction="return"/>
          <language>java</language>
          <body>int i = testCollision();
		if(i >= 0) {
			this.piste.removeObstacle(i);
		}
		return piste.getObstacles();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFXc4IobEeqevdMp57x66A" name="getRetry" specification="_hzseEYobEeqevdMp57x66A">
          <ownedParameter xmi:id="_iFXc4YobEeqevdMp57x66A" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>if(retry) {
			this.retry = false;
			return true;
		}else {
			return false;
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFXc4oobEeqevdMp57x66A" name="setThreads" specification="_h-9S4IobEeqevdMp57x66A">
          <ownedParameter xmi:id="_iFXc44obEeqevdMp57x66A" name="threads" type="_hwNFMIobEeqevdMp57x66A">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_iFXc5IobEeqevdMp57x66A" value="*"/>
          </ownedParameter>
          <language>java</language>
          <body>this.threads= threads; 
		for(StoppableThread t : threads) {
			t.start();
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFYD8IobEeqevdMp57x66A" name="randint" specification="_hztsMIobEeqevdMp57x66A">
          <ownedParameter xmi:id="_iFYD8YobEeqevdMp57x66A" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iFYD8oobEeqevdMp57x66A" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iFYD84obEeqevdMp57x66A" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return ThreadLocalRandom.current().nextInt(min, max + 1);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFYrAIobEeqevdMp57x66A" name="retry" specification="_hzvhYIobEeqevdMp57x66A">
          <language>java</language>
          <body>this.retry = true;
		this.goDown = false;
		this.leftPressed = false;
		this.rightPressed = false;
		this.upPressed = false;
		this.downPressed = false;
		this.piste = new Piste(this);
		this.check.restart();
		this.posX = 0;
		this.accel = 100.;
		this.vitesse =  vitesseMax;
		this.montagne = new Montagne(this);
		this.etatMoto = 1;
		this.posVert = 0;
		this.decors = new ArrayList&lt;Decor>();
		this.ennemis = new ArrayList&lt;Ennemi>();
		this.score = 0;
		this.fin = false;
		
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFZSEIobEeqevdMp57x66A" name="addScore" specification="_hz2PEIobEeqevdMp57x66A">
          <language>java</language>
          <body>System.out.println(&quot;ADD SCORE&quot;);
		score += ADD_SCORE;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_hzC90IobEeqevdMp57x66A" name="Etat" method="_iFR9U4obEeqevdMp57x66A">
          <eAnnotations xmi:id="_hzC90YobEeqevdMp57x66A" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_hzDk4IobEeqevdMp57x66A" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_iF3zMYobEeqevdMp57x66A">
            <body>Constructor</body>
          </ownedComment>
          <ownedParameter xmi:id="_hzDk4YobEeqevdMp57x66A" type="_hytmoIobEeqevdMp57x66A" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_hzEL8IobEeqevdMp57x66A" name="projection" visibility="package" method="_iFR9VYobEeqevdMp57x66A">
          <ownedComment xmi:id="_iF3zMoobEeqevdMp57x66A">
            <body>Cette méthode calcule la projection sur l'écran (plan xOy) d'un point définir par ses coordonnées x,y,z.</body>
          </ownedComment>
          <ownedParameter xmi:id="_hzEL8YobEeqevdMp57x66A" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_hzEL8oobEeqevdMp57x66A" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_hzEL84obEeqevdMp57x66A" name="z">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iAqjEIobEeqevdMp57x66A" type="_h-XdAIobEeqevdMp57x66A" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_hzEzAIobEeqevdMp57x66A" name="testCheckpoint" method="_iFSkYIobEeqevdMp57x66A">
          <ownedComment xmi:id="_iF3zM4obEeqevdMp57x66A">
            <body>on ajoute du temps quand la moto atteint un checkpoint</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_hzFaEIobEeqevdMp57x66A" name="gameOver" method="_iFSkYYobEeqevdMp57x66A">
          <ownedComment xmi:id="_iF3zNIobEeqevdMp57x66A">
            <body>lance le game over, vitesse et accel à 0
	 * et stoppe tout les threads</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_hzLgsIobEeqevdMp57x66A" name="updateVitesse" method="_iFSkYoobEeqevdMp57x66A">
          <ownedComment xmi:id="_iF4aQIobEeqevdMp57x66A">
            <body>Met à jour la vitesse par rapport à l'accélération
	 * appelé par {@link control.Vitesse Vitesse}</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_hzMHwIobEeqevdMp57x66A" name="updateAccel" visibility="private" method="_iFSkY4obEeqevdMp57x66A">
          <ownedComment xmi:id="_iF4aQYobEeqevdMp57x66A">
            <body>on réduit {@link #accel} si on s'écarte du centre de la fenetre
	 * et on l'augmente sinon</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_hzMu0IobEeqevdMp57x66A" name="avance" method="_iFTLcIobEeqevdMp57x66A">
          <ownedComment xmi:id="_iF4aQoobEeqevdMp57x66A">
            <body>Avance {@link Piste#posY} en fonction de {@link #vitesse}</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_hzNV4IobEeqevdMp57x66A" name="pressLeft" method="_iFTLcYobEeqevdMp57x66A">
          <ownedComment xmi:id="_iF4aQ4obEeqevdMp57x66A">
            <body>On change la valeur de {@link leftPressed} par b
	 * @param b</body>
          </ownedComment>
          <ownedParameter xmi:id="_hzNV4YobEeqevdMp57x66A" name="b">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_hzN88IobEeqevdMp57x66A" name="pressRight" method="_iFTLc4obEeqevdMp57x66A">
          <ownedComment xmi:id="_iF4aRIobEeqevdMp57x66A">
            <body>On change la valeur de {@link rightPressed} par b
	 * @param b</body>
          </ownedComment>
          <ownedParameter xmi:id="_hzN88YobEeqevdMp57x66A" name="b">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_hzOkAIobEeqevdMp57x66A" name="pressUp" method="_iFTygIobEeqevdMp57x66A">
          <ownedComment xmi:id="_iF4aRYobEeqevdMp57x66A">
            <body>On change la valeur de {@link upPressed} par b
	 * @param b</body>
          </ownedComment>
          <ownedParameter xmi:id="_hzPLEIobEeqevdMp57x66A" name="b">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_hzPyIIobEeqevdMp57x66A" name="pressDown" method="_iFTygoobEeqevdMp57x66A">
          <ownedComment xmi:id="_iF4aRoobEeqevdMp57x66A">
            <body>On change la valeur de {@link downPressed} par b
	 * @param b</body>
          </ownedComment>
          <ownedParameter xmi:id="_hzPyIYobEeqevdMp57x66A" name="b">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_hzV4wIobEeqevdMp57x66A" name="goUp" method="_iFTyhIobEeqevdMp57x66A">
          <ownedComment xmi:id="_iF4aR4obEeqevdMp57x66A">
            <body>fait monter la moto</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_hzV4wYobEeqevdMp57x66A" name="goDown" method="_iFTyhYobEeqevdMp57x66A">
          <ownedComment xmi:id="_iF4aSIobEeqevdMp57x66A">
            <body>Fait descendre la moto si on est dans les airs</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_hzWf0IobEeqevdMp57x66A" name="goLeft" method="_iFUZkIobEeqevdMp57x66A">
          <ownedComment xmi:id="_iF4aSYobEeqevdMp57x66A">
            <body>Décale {@link #posX} vers la gauche (x négatif)
	 * et l'{@link #etatMoto} est mit à 0 pour l'image de moto qui tourne à gauche</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_hzWf0YobEeqevdMp57x66A" name="goRight" method="_iFUZkYobEeqevdMp57x66A">
          <ownedComment xmi:id="_iF4aSoobEeqevdMp57x66A">
            <body>Décale {@link #posX} vers la droite (x négatif)
	 * et l'{@link #etatMoto} est mit à 2 pour l'image de moto qui tourne à droite</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_hzXG4IobEeqevdMp57x66A" name="goStraight" method="_iFUZkoobEeqevdMp57x66A">
          <ownedComment xmi:id="_iF5BUIobEeqevdMp57x66A">
            <body>l'{@link #etatMoto} est mit à 1 pour l'image de la moto qui va tout droit</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_hzXt8IobEeqevdMp57x66A" name="majEtatMoto" visibility="private" method="_iFUZk4obEeqevdMp57x66A">
          <ownedComment xmi:id="_iF5BUYobEeqevdMp57x66A">
            <body>met à jour l'état de la moto et déplace la moto vers la gauche où la droite 
	 * en fonction des valeurs de {@link #leftPressed} et {@link #rightPressed}</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_hzXt8YobEeqevdMp57x66A" name="testCollision" method="_iFUZlIobEeqevdMp57x66A">
          <ownedComment xmi:id="_iF5BUoobEeqevdMp57x66A">
            <body>@param g
	 * @return l'indice d'un obstacle si la moto est en collision avec cet obstacle, -1 si il n'y a pas de collision</body>
          </ownedComment>
          <ownedParameter xmi:id="_hzYVAIobEeqevdMp57x66A" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_hzYVAYobEeqevdMp57x66A" name="CollisionEnnemi" method="_iFVAoIobEeqevdMp57x66A">
          <ownedComment xmi:id="_iF5BU4obEeqevdMp57x66A">
            <body>parcoure {@link #ennemis la liste des ennemis} et si le joueur est en collision avec un d'eux on fait 
	 * avancer l'ennemi si il est devant et le fait reculer sinon 
	 * @return</body>
          </ownedComment>
          <ownedParameter xmi:id="_hzYVAoobEeqevdMp57x66A" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_hzY8EIobEeqevdMp57x66A" name="updateDecors" method="_iFVAooobEeqevdMp57x66A">
          <ownedComment xmi:id="_iF5BVIobEeqevdMp57x66A">
            <body>met à jour {@link #decors la liste des décors}</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_hzZjIIobEeqevdMp57x66A" name="updateEnnemis" method="_iFVAo4obEeqevdMp57x66A">
          <ownedComment xmi:id="_iF5BVYobEeqevdMp57x66A">
            <body>met à jour {@link #ennemis la liste des ennemis}</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_hzZjIYobEeqevdMp57x66A" name="getFin" method="_iFVnsIobEeqevdMp57x66A">
          <ownedComment xmi:id="_iF5BVoobEeqevdMp57x66A">
            <body>@return true si on a perdu, false sinon</body>
          </ownedComment>
          <ownedParameter xmi:id="_hzb_YIobEeqevdMp57x66A" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_hzcmcIobEeqevdMp57x66A" name="getPosVert" method="_iFVnsoobEeqevdMp57x66A">
          <ownedComment xmi:id="_iF5BV4obEeqevdMp57x66A">
            <body>@return {@link #posVert}</body>
          </ownedComment>
          <ownedParameter xmi:id="_hzcmcYobEeqevdMp57x66A" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_hzdNgIobEeqevdMp57x66A" name="getEtatMoto" method="_iFVntIobEeqevdMp57x66A">
          <ownedComment xmi:id="_iF5BWIobEeqevdMp57x66A">
            <body>@return {@link #etatMoto}</body>
          </ownedComment>
          <ownedParameter xmi:id="_hzdNgYobEeqevdMp57x66A" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_hzd0kIobEeqevdMp57x66A" name="getMotoBounds" visibility="private" method="_iFWOwIobEeqevdMp57x66A">
          <ownedComment xmi:id="_iF5BWYobEeqevdMp57x66A">
            <body>@return un {@link Rectangle} correspondant à la position et la taille de la moto</body>
          </ownedComment>
          <ownedParameter xmi:id="_iArKIIobEeqevdMp57x66A" type="_h-agUYobEeqevdMp57x66A" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_hzeboIobEeqevdMp57x66A" name="getLargPiste" method="_iFWOwoobEeqevdMp57x66A">
          <ownedComment xmi:id="_iF5BWoobEeqevdMp57x66A">
            <body>@param i
	 * @return la largeur de la piste à son point i</body>
          </ownedComment>
          <ownedParameter xmi:id="_hzeboYobEeqevdMp57x66A" name="i">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_hzfCsIobEeqevdMp57x66A" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_hzfpwIobEeqevdMp57x66A" name="getPosY" method="_iFWOxYobEeqevdMp57x66A">
          <ownedComment xmi:id="_iF5BW4obEeqevdMp57x66A">
            <body>@return la position Y du joueur {@link Piste#posY}</body>
          </ownedComment>
          <ownedParameter xmi:id="_hzfpwYobEeqevdMp57x66A" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_hzj7MIobEeqevdMp57x66A" name="getMontagne" method="_iFW10IobEeqevdMp57x66A">
          <ownedComment xmi:id="_iF5oYIobEeqevdMp57x66A">
            <body>@return {@link Montagne#getPointsVisibles()}</body>
          </ownedComment>
          <ownedParameter xmi:id="_iArKIYobEeqevdMp57x66A" type="_h-1XEIobEeqevdMp57x66A" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_hzqo4IobEeqevdMp57x66A" name="getObstacles" method="_iFW10oobEeqevdMp57x66A">
          <ownedComment xmi:id="_iF5oYYobEeqevdMp57x66A">
            <body>@return la liste des obstacles</body>
          </ownedComment>
          <ownedParameter xmi:id="_iAsYQIobEeqevdMp57x66A" type="_h-1XEIobEeqevdMp57x66A" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_hzseEYobEeqevdMp57x66A" name="getRetry" method="_iFXc4IobEeqevdMp57x66A">
          <ownedComment xmi:id="_iF5oYoobEeqevdMp57x66A">
            <body>indique à l'affichage si on est en train de relancer une partie</body>
          </ownedComment>
          <ownedParameter xmi:id="_hztFIIobEeqevdMp57x66A" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_hztsMIobEeqevdMp57x66A" name="randint" visibility="private" method="_iFYD8IobEeqevdMp57x66A">
          <ownedComment xmi:id="_iF5oZIobEeqevdMp57x66A">
            <body>Génère un chiffre aléatoire entre min et max
	 * @param int min
	 * @param int max
	 * @return random int between min and max</body>
          </ownedComment>
          <ownedParameter xmi:id="_hztsMYobEeqevdMp57x66A" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_hzuTQIobEeqevdMp57x66A" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_hzuTQYobEeqevdMp57x66A" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_hzvhYIobEeqevdMp57x66A" name="retry" method="_iFYrAIobEeqevdMp57x66A">
          <ownedComment xmi:id="_iF5oZYobEeqevdMp57x66A">
            <body>relance une nouvelle partie</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_hz2PEIobEeqevdMp57x66A" name="addScore" visibility="private" method="_iFZSEIobEeqevdMp57x66A">
          <ownedComment xmi:id="_iF5oZoobEeqevdMp57x66A">
            <body>ajoute du score (appelé quand on dépasse un ennemi)</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_h-9S4IobEeqevdMp57x66A" name="setThreads" method="_iFXc4oobEeqevdMp57x66A">
          <ownedComment xmi:id="_iF5oY4obEeqevdMp57x66A">
            <body>@param threads récupérés depuis {@link main.Main Main}
	 * on récupère les {@link Threads} et on les lance</body>
          </ownedComment>
          <ownedParameter xmi:id="_h-9S4YobEeqevdMp57x66A" name="threads" type="_hwNFMIobEeqevdMp57x66A">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_h-958IobEeqevdMp57x66A" value="*"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_h0UJIIobEeqevdMp57x66A" name="Montagne">
        <ownedAttribute xmi:id="_iDPV8IobEeqevdMp57x66A" name="etat" visibility="private" type="_hytmoIobEeqevdMp57x66A" association="_iHAboYobEeqevdMp57x66A"/>
        <ownedAttribute xmi:id="_iDP9AYobEeqevdMp57x66A" name="points" visibility="private" type="_h-1XEIobEeqevdMp57x66A" association="_iHBpwYobEeqevdMp57x66A"/>
        <ownedAttribute xmi:id="_iDRyMIobEeqevdMp57x66A" name="ecartMin" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iDTAUIobEeqevdMp57x66A" name="ecartMax" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iDUOcIobEeqevdMp57x66A" name="yMin" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_iDUOcYobEeqevdMp57x66A" value="Affichage.posHorizon/4"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFagMIobEeqevdMp57x66A" name="Montagne" specification="_h_I5EIobEeqevdMp57x66A">
          <ownedParameter xmi:id="_iFagMYobEeqevdMp57x66A" name="etat" type="_hytmoIobEeqevdMp57x66A"/>
          <ownedParameter xmi:id="_iFagMoobEeqevdMp57x66A" type="_h0UJIIobEeqevdMp57x66A" direction="return"/>
          <language>java</language>
          <body>this.etat = etat;
		this.ecartMin = 50;
		this.ecartMax = 70;
		initPoints();	
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFagM4obEeqevdMp57x66A" name="initPoints" specification="_h0aPwIobEeqevdMp57x66A">
          <language>java</language>
          <body>this.points = new ArrayList&lt;Point>();
		for(int i=0; i&lt;Affichage.LARG; i+= randint(ecartMin,ecartMax)) {
			int y = randint(yMin,Affichage.posHorizon);
			this.points.add(new Point(i,y));
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFbHQIobEeqevdMp57x66A" name="updatePoints" specification="_h0ehMIobEeqevdMp57x66A">
          <language>java</language>
          <body>if(etat.getPosX() &lt; points.get(0).x){
			addPointGauche();
		}else {
			if( etat.getPosX() + Affichage.LARG> points.get(points.size()-1).x ){
				addPointDroite();
			}
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFbHQYobEeqevdMp57x66A" name="addPointGauche" specification="_h0fIQIobEeqevdMp57x66A">
          <language>java</language>
          <body>int x = points.get(0).x - randint(ecartMin, ecartMax);
		int y =  randint(yMin, Affichage.posHorizon);
		// ajout au début
		points.add(0, new Point(x,y));
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFbHQoobEeqevdMp57x66A" name="addPointDroite" specification="_h0fIQYobEeqevdMp57x66A">
          <language>java</language>
          <body>int x = points.get(points.size()-1).x + randint(ecartMin, ecartMax);
		int y =  randint(yMin, Affichage.posHorizon);
		// ajout à la fin
		points.add(new Point(x,y));
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFbHQ4obEeqevdMp57x66A" name="getPointsVisibles" specification="_h0fvUIobEeqevdMp57x66A">
          <ownedParameter xmi:id="_iFbHRIobEeqevdMp57x66A" type="_h-1XEIobEeqevdMp57x66A" direction="return"/>
          <language>java</language>
          <body>updatePoints();
		ArrayList&lt;Point> res = new ArrayList&lt;Point>();
		for(Point p : points) {
			//si point visible
			if(p.x >= etat.getPosX()-ecartMax &amp;&amp; p.x &lt;= etat.getPosX()+ecartMax+Affichage.LARG) {
				res.add(new Point(p.x-etat.getPosX(),p.y));
			}
		}
		return res;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFbuUIobEeqevdMp57x66A" name="randint" specification="_h0iLkIobEeqevdMp57x66A">
          <ownedParameter xmi:id="_iFbuUYobEeqevdMp57x66A" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iFbuUoobEeqevdMp57x66A" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iFbuU4obEeqevdMp57x66A" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return ThreadLocalRandom.current().nextInt(min, max + 1);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_h0aPwIobEeqevdMp57x66A" name="initPoints" visibility="private" method="_iFagM4obEeqevdMp57x66A">
          <ownedComment xmi:id="_iF6PcIobEeqevdMp57x66A">
            <body>Initialise les points de la montagne qui sont visible dès le début</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_h0ehMIobEeqevdMp57x66A" name="updatePoints" visibility="private" method="_iFbHQIobEeqevdMp57x66A">
          <ownedComment xmi:id="_iF6PcYobEeqevdMp57x66A">
            <body>Ajoute des points à droite où à gauche quand on découvre une nouvelle partie de la montagne.
	 * On garde tout les points pour que la montagne soit la même quand on revient à la même {@link Etat#posX}</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_h0fIQIobEeqevdMp57x66A" name="addPointGauche" visibility="private" method="_iFbHQYobEeqevdMp57x66A">
          <ownedComment xmi:id="_iF6PcoobEeqevdMp57x66A">
            <body>ajoute un point à gauche de la chaîne de montagne</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_h0fIQYobEeqevdMp57x66A" name="addPointDroite" visibility="private" method="_iFbHQoobEeqevdMp57x66A">
          <ownedComment xmi:id="_iF6Pc4obEeqevdMp57x66A">
            <body>ajoute un point à droite de la chaîne de montagne</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_h0fvUIobEeqevdMp57x66A" name="getPointsVisibles" method="_iFbHQ4obEeqevdMp57x66A">
          <ownedComment xmi:id="_iF62gIobEeqevdMp57x66A">
            <body>@return une liste des points de la montagne qui sont visibles par le joueur</body>
          </ownedComment>
          <ownedParameter xmi:id="_iAye4IobEeqevdMp57x66A" type="_h-1XEIobEeqevdMp57x66A" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_h0iLkIobEeqevdMp57x66A" name="randint" method="_iFbuUIobEeqevdMp57x66A">
          <ownedComment xmi:id="_iF62gYobEeqevdMp57x66A">
            <body>Génère un chiffre aléatoire entre min et max
	 * @param min
	 * @param max
	 * @return random int between min and max</body>
          </ownedComment>
          <ownedParameter xmi:id="_h0iLkYobEeqevdMp57x66A" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_h0iLkoobEeqevdMp57x66A" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_h0iyoIobEeqevdMp57x66A" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_h_I5EIobEeqevdMp57x66A" name="Montagne" method="_iFagMIobEeqevdMp57x66A">
          <eAnnotations xmi:id="_h_JgIYobEeqevdMp57x66A" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_h_JgIoobEeqevdMp57x66A" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_h_JgIIobEeqevdMp57x66A" name="etat" type="_hytmoIobEeqevdMp57x66A"/>
          <ownedParameter xmi:id="_h_JgI4obEeqevdMp57x66A" type="_h0UJIIobEeqevdMp57x66A" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_h0pgUIobEeqevdMp57x66A" name="Obstacle">
        <ownedAttribute xmi:id="_iDVckIobEeqevdMp57x66A" name="piste" visibility="private" type="_h070MIobEeqevdMp57x66A" association="_iHC34YobEeqevdMp57x66A"/>
        <ownedAttribute xmi:id="_iDWDoYobEeqevdMp57x66A" name="etat" visibility="private" type="_hytmoIobEeqevdMp57x66A" association="_iHIXcIobEeqevdMp57x66A"/>
        <ownedAttribute xmi:id="_iDXRwIobEeqevdMp57x66A" name="x" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iDX40IobEeqevdMp57x66A" name="y" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iDZG8IobEeqevdMp57x66A" name="width" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iDZuAIobEeqevdMp57x66A" name="height" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iDaVEIobEeqevdMp57x66A" name="isHole" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFcVYYobEeqevdMp57x66A" name="Obstacle" specification="_h_NKgIobEeqevdMp57x66A">
          <ownedParameter xmi:id="_iFcVYoobEeqevdMp57x66A" name="piste" type="_h070MIobEeqevdMp57x66A"/>
          <ownedParameter xmi:id="_iFcVY4obEeqevdMp57x66A" name="etat" type="_hytmoIobEeqevdMp57x66A"/>
          <ownedParameter xmi:id="_iFcVZIobEeqevdMp57x66A" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iFcVZYobEeqevdMp57x66A" type="_h0pgUIobEeqevdMp57x66A" direction="return"/>
          <language>java</language>
          <body>this.piste = piste;
		this.etat = etat;
		this.y =  y;
		
		if(randint(0,2) == 0) {
			//1 chance sur 3 que l'obstacle soit un trou
			this.width = 100;
			this.height = 50;
			
			switch (randint(0,2)) {
			case 0:
				this.x =  - Piste.largeurPiste/3 - height/2;
				break;
			case 1 :
				this.x =  - height/2;
				break;
			case 2:
				this.x =  Piste.largeurPiste/3 - height/2;
				break;
			default:
				break;
			}
			
			this.isHole = true;
		}else {
			this.x = randint(-Piste.largeurPiste/2,+Piste.largeurPiste/2);
			this.width = randint(50, 100);
			this.height = randint(50, 100);
			this.isHole = false;
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFcVZoobEeqevdMp57x66A" name="getBounds" specification="_h0xcIIobEeqevdMp57x66A">
          <ownedParameter xmi:id="_iFcVZ4obEeqevdMp57x66A" type="_h-agUYobEeqevdMp57x66A" direction="return"/>
          <language>java</language>
          <body>Point p1 = new Point(x+Affichage.LARG/2-etat.getPosX(), getY());	//p1 : point en bas à gauche
		Point p3 = etat.projection(p1.x,0,p1.y);							//p3 : projection de p1 sur le plan (hauteur = 0)
		Point p2 = etat.projection(p1.x+width, 0, p1.y);					//p2 : projection du point en bas à droite sur le plan (hauteur = 0)
		
		int haut =  etat.projection(p1.x, height, p1.y).y - p3.y;			//haut : y du point en haut à gauche (projeté sur le plan) - y de p3
		int larg = p2.x-p3.x;												//larg : x de p2 - x de p1
		
		return new Rectangle(p3.x, Affichage.HAUT - p3.y, larg, haut);		// on renvoie direct les coordonnées avec Y inversé
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFc8cIobEeqevdMp57x66A" name="isHole" specification="_h0xcIYobEeqevdMp57x66A">
          <ownedParameter xmi:id="_iFc8cYobEeqevdMp57x66A" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>return this.isHole;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFc8coobEeqevdMp57x66A" name="randint" specification="_h0yqQIobEeqevdMp57x66A">
          <ownedParameter xmi:id="_iFc8c4obEeqevdMp57x66A" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iFc8dIobEeqevdMp57x66A" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iFc8dYobEeqevdMp57x66A" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return ThreadLocalRandom.current().nextInt(min, max + 1);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_h0xcIIobEeqevdMp57x66A" name="getBounds" method="_iFcVZoobEeqevdMp57x66A">
          <ownedComment xmi:id="_iF62goobEeqevdMp57x66A">
            <body>@return un {@link Rectangle} correspondant aux coordonées et taille de l'obstacle à l'affichage</body>
          </ownedComment>
          <ownedParameter xmi:id="_iAztAIobEeqevdMp57x66A" type="_h-agUYobEeqevdMp57x66A" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_h0xcIYobEeqevdMp57x66A" name="isHole" method="_iFc8cIobEeqevdMp57x66A">
          <ownedComment xmi:id="_iF62g4obEeqevdMp57x66A">
            <body>@return true si l'obstacle est un trou, false sinon</body>
          </ownedComment>
          <ownedParameter xmi:id="_h0yDMIobEeqevdMp57x66A" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_h0yqQIobEeqevdMp57x66A" name="randint" visibility="private" method="_iFc8coobEeqevdMp57x66A">
          <ownedComment xmi:id="_iF62hIobEeqevdMp57x66A">
            <body>Génère un chiffre aléatoire entre min et max
	 * @param int min
	 * @param int max
	 * @return random int between min and max</body>
          </ownedComment>
          <ownedParameter xmi:id="_h0yqQYobEeqevdMp57x66A" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_h0yqQoobEeqevdMp57x66A" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_h0zRUIobEeqevdMp57x66A" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_h_NKgIobEeqevdMp57x66A" name="Obstacle" method="_iFcVYYobEeqevdMp57x66A">
          <eAnnotations xmi:id="_h_NxkYobEeqevdMp57x66A" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_h_NxkoobEeqevdMp57x66A" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_h_NKgYobEeqevdMp57x66A" name="piste" type="_h070MIobEeqevdMp57x66A"/>
          <ownedParameter xmi:id="_h_NKgoobEeqevdMp57x66A" name="etat" type="_hytmoIobEeqevdMp57x66A"/>
          <ownedParameter xmi:id="_h_NxkIobEeqevdMp57x66A" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_h_Nxk4obEeqevdMp57x66A" type="_h0pgUIobEeqevdMp57x66A" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_h070MIobEeqevdMp57x66A" name="Piste">
        <ownedAttribute xmi:id="_iDbjMIobEeqevdMp57x66A" name="factRetrecissement" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_iDbjMYobEeqevdMp57x66A" value="1/2.5"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iDcxUYobEeqevdMp57x66A" name="largeurPiste" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_iDdYYIobEeqevdMp57x66A" value="600"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iDemgIobEeqevdMp57x66A" name="ObstaclesMax" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_iDemgYobEeqevdMp57x66A" value="5"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iDfNkYobEeqevdMp57x66A" name="incr" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_iDf0oIobEeqevdMp57x66A" value="Affichage.HAUT/4"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iDf0ooobEeqevdMp57x66A" name="dec" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_iDgbsIobEeqevdMp57x66A" value="50"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iDhCwIobEeqevdMp57x66A" name="probaObstacle" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_iDhCwYobEeqevdMp57x66A" value="100"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iDhp0IobEeqevdMp57x66A" name="points" visibility="private" type="_h-1XEIobEeqevdMp57x66A" association="_iHKMoYobEeqevdMp57x66A"/>
        <ownedAttribute xmi:id="_iDi38YobEeqevdMp57x66A" name="posY" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iDjfAIobEeqevdMp57x66A" name="obstacles" type="_h-1XEIobEeqevdMp57x66A" isReadOnly="true" association="_iHMB0IobEeqevdMp57x66A"/>
        <ownedAttribute xmi:id="_iDqMsIobEeqevdMp57x66A" name="etat" visibility="private" type="_hytmoIobEeqevdMp57x66A" association="_iHMo4YobEeqevdMp57x66A"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFdjgoobEeqevdMp57x66A" name="Piste" specification="_h_Q04IobEeqevdMp57x66A">
          <ownedParameter xmi:id="_iFdjg4obEeqevdMp57x66A" name="etat" type="_hytmoIobEeqevdMp57x66A"/>
          <ownedParameter xmi:id="_iFdjhIobEeqevdMp57x66A" type="_h070MIobEeqevdMp57x66A" direction="return"/>
          <language>java</language>
          <body>this.etat = etat;
		this.points = new ArrayList&lt;Point>();
		this.posY = 0;
		this.obstacles = new ArrayList&lt;Obstacle>();
		initPoints();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFdjhYobEeqevdMp57x66A" name="initPoints" specification="_h1DI8IobEeqevdMp57x66A">
          <language>java</language>
          <body>for(int i=0; i&lt;Affichage.HAUT-Affichage.posHorizon; i+=incr) {
			int x = randint(-largeurPiste/2-dec,-largeurPiste/2+dec) + Affichage.LARG/2;
			this.points.add(new Point(x,i));
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFeKkIobEeqevdMp57x66A" name="addPoint" specification="_h1DwAIobEeqevdMp57x66A">
          <language>java</language>
          <body>int y = points.get(points.size()-1).y + incr;
		int x = randint(-largeurPiste/2-dec,-largeurPiste/2+dec) + Affichage.LARG/2;
		this.points.add(new Point(x,y));
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFeKkYobEeqevdMp57x66A" name="updatePoints" specification="_h1DwAYobEeqevdMp57x66A">
          <language>java</language>
          <body>//on ajoute un point si le dernier point entre dans le champ de vision 
		if(points.get(points.size()-1).y  &lt; posY + Affichage.max_prof) {
			addPoint();
		}
		//on retire le 1er point si le deuxième sort de la fenêtre (par le bas)
		if(points.get(1).y  &lt; posY) {
			points.remove(0);
		}
		
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFeKkoobEeqevdMp57x66A" name="getPiste" specification="_h1EXEIobEeqevdMp57x66A">
          <ownedParameter xmi:id="_iFeKk4obEeqevdMp57x66A" type="_h-XdAIobEeqevdMp57x66A" direction="return">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_iFeKlIobEeqevdMp57x66A" value="*"/>
          </ownedParameter>
          <language>java</language>
          <body>updatePoints();
		Point[][] res = new Point[points.size()][2]; 
		for(int i=0; i&lt;points.size(); i++) {
			Point p = points.get(i);
			
			res[i][0]= new Point(p.x , p.y - posY);
			res[i][1]= new Point(p.x+largeurPiste , p.y - posY);
		}
		
		return res;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFeKlYobEeqevdMp57x66A" name="getLargPiste" specification="_h1FlMIobEeqevdMp57x66A">
          <ownedParameter xmi:id="_iFeKloobEeqevdMp57x66A" name="i">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iFeKl4obEeqevdMp57x66A" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>// on récupère la piste avec perspective
		Point[][] piste = getPiste();
		Point[] p = piste[i];
		// pointDeDroite.x - pointDeGauche.x
		return (p[1].x - p[0].x);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFexoIobEeqevdMp57x66A" name="getLargPisteEnY" specification="_h1GMQYobEeqevdMp57x66A">
          <ownedParameter xmi:id="_iFexoYobEeqevdMp57x66A" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iFexooobEeqevdMp57x66A" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>int i = 0;
		for(Point p : this.points) {
			if(y == p.y ) {
				Point[][] piste = getPiste(); 
				if(i&lt;piste.length) {
					return piste[i][1].x - piste[i][0].x;
				}else {
					System.err.println(&quot;Erreur : getLargPisteEnY le i trouvé est invalide !!! &quot;+i);
					etat.gameOver();
				}
			}
			i++;
		}
		System.err.println(&quot;Erreur : appel de getLargPisteEnY avec un y invalide !!! &quot;+y);
		
		for(Point p : this.points) {
			System.err.println(p.y);
		}
		//on arrete le jeu si il y a une erreur 
		etat.gameOver();
		return -1;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFexo4obEeqevdMp57x66A" name="avance" specification="_h1JPkIobEeqevdMp57x66A">
          <ownedParameter xmi:id="_iFexpIobEeqevdMp57x66A" name="v">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>this.posY += v;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFfYsIobEeqevdMp57x66A" name="getMidX" specification="_h1J2oIobEeqevdMp57x66A">
          <ownedParameter xmi:id="_iFfYsYobEeqevdMp57x66A" name="i">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iFfYsoobEeqevdMp57x66A" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>if(i>=0 &amp;&amp; i&lt;points.size()) {
			return points.get(i).x + largeurPiste/2;
		}else {
			System.err.println(&quot;Erreur : paramètre 'i' invalide dans méthode Piste.getMidX()&quot;);
			return Affichage.LARG/2;
		}	
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFfYs4obEeqevdMp57x66A" name="updateObstacles" specification="_h1P9QIobEeqevdMp57x66A">
          <language>java</language>
          <body>//on retire le premier obstacle (le plus ancien) tant qu'il est en dehors du champ de vision
		while(obstacles.size() > 0 &amp;&amp; obstacles.get(0).getY() &lt; 0) {
			
			obstacles.remove(0);
			
		}
		if(obstacles.size() &lt; ObstaclesMax &amp;&amp; randint(0,probaObstacle)==0) {
			//la position y de l'obstacle est posY du dernier point de la piste (le point le plus en haut, au dessus de la fenetre)
			obstacles.add(new Obstacle(this, etat, points.get(points.size()-1).y));
			
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFfYtIobEeqevdMp57x66A" name="removeObstacle" specification="_h1P9QYobEeqevdMp57x66A">
          <ownedParameter xmi:id="_iFfYtYobEeqevdMp57x66A" name="i">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>if(i&lt;this.obstacles.size()){
			this.obstacles.remove(i);
		}else {
			System.err.println(&quot;Erreur : appel de removeObstacle avec un i invalide !!! &quot;+i);
			etat.gameOver();
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFf_wIobEeqevdMp57x66A" name="randint" specification="_h1QkUIobEeqevdMp57x66A">
          <ownedParameter xmi:id="_iFf_wYobEeqevdMp57x66A" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iFf_woobEeqevdMp57x66A" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iFf_w4obEeqevdMp57x66A" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return ThreadLocalRandom.current().nextInt(min, max + 1);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_h1DI8IobEeqevdMp57x66A" name="initPoints" visibility="private" method="_iFdjhYobEeqevdMp57x66A">
          <ownedComment xmi:id="_iF7dkIobEeqevdMp57x66A">
            <body>Initialise les points de la piste visibles dès le début</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_h1DwAIobEeqevdMp57x66A" name="addPoint" visibility="private" method="_iFeKkIobEeqevdMp57x66A">
          <ownedComment xmi:id="_iF7dkYobEeqevdMp57x66A">
            <body>ajoute un point à la {@link Piste#points}</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_h1DwAYobEeqevdMp57x66A" name="updatePoints" visibility="package" method="_iFeKkYobEeqevdMp57x66A">
          <ownedComment xmi:id="_iF7dkoobEeqevdMp57x66A">
            <body>on ajoute un point quand le dernier entre dans le champ de vision
	 * et on en supprime un si il sort du champ de vision</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_h1EXEIobEeqevdMp57x66A" name="getPiste" method="_iFeKkoobEeqevdMp57x66A">
          <ownedComment xmi:id="_iF7dk4obEeqevdMp57x66A">
            <body>@return la piste sous forme de double tableau contenant les 2 ligne brisées des bords de la piste (sans perspective)</body>
          </ownedComment>
          <ownedParameter xmi:id="_h1EXEYobEeqevdMp57x66A" type="_h-XdAIobEeqevdMp57x66A" direction="return">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_h1EXEoobEeqevdMp57x66A" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_h1FlMIobEeqevdMp57x66A" name="getLargPiste" method="_iFeKlYobEeqevdMp57x66A">
          <ownedComment xmi:id="_iF7dlIobEeqevdMp57x66A">
            <body>@param i l'indice du point de la piste
	 * @return la largeur de la piste à ce point de la piste</body>
          </ownedComment>
          <ownedParameter xmi:id="_h1FlMYobEeqevdMp57x66A" name="i">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_h1GMQIobEeqevdMp57x66A" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_h1GMQYobEeqevdMp57x66A" name="getLargPisteEnY" method="_iFexoIobEeqevdMp57x66A">
          <ownedComment xmi:id="_iF7dlYobEeqevdMp57x66A">
            <body>@param y la posY d'un point
	 * @return la largeur de la piste à ce point de la piste</body>
          </ownedComment>
          <ownedParameter xmi:id="_h1GMQoobEeqevdMp57x66A" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_h1GzUIobEeqevdMp57x66A" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_h1JPkIobEeqevdMp57x66A" name="avance" method="_iFexo4obEeqevdMp57x66A">
          <ownedComment xmi:id="_iF7dloobEeqevdMp57x66A">
            <body>on avance de la vitesse donnée lors de l'appel par {@link Etat}
	 * @param v vitesse du joueur</body>
          </ownedComment>
          <ownedParameter xmi:id="_h1JPkYobEeqevdMp57x66A" name="v">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_h1J2oIobEeqevdMp57x66A" name="getMidX" method="_iFfYsIobEeqevdMp57x66A">
          <ownedComment xmi:id="_iF7dl4obEeqevdMp57x66A">
            <body>@param i
	 * @return le X du milieu de la piste au point d'indice i</body>
          </ownedComment>
          <ownedParameter xmi:id="_h1PWMIobEeqevdMp57x66A" name="i">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_h1PWMYobEeqevdMp57x66A" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_h1P9QIobEeqevdMp57x66A" name="updateObstacles" visibility="private" method="_iFfYs4obEeqevdMp57x66A">
          <ownedComment xmi:id="_iF7dmIobEeqevdMp57x66A">
            <body>Supprime les obstacles qui ne sont plus visibles et en génère des nouveaux avec une
	 * probabilité de {@link #probaObstacle}</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_h1P9QYobEeqevdMp57x66A" name="removeObstacle" method="_iFfYtIobEeqevdMp57x66A">
          <ownedComment xmi:id="_iF7dmYobEeqevdMp57x66A">
            <body>Retire l'obstacle d'indice i de la liste, utilisé quand on percute un obstacle.
	 * Si le i est invalide on affiche une erreur et on stoppe le jeu
	 * @param i</body>
          </ownedComment>
          <ownedParameter xmi:id="_h1P9QoobEeqevdMp57x66A" name="i">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_h1QkUIobEeqevdMp57x66A" name="randint" visibility="private" method="_iFf_wIobEeqevdMp57x66A">
          <ownedComment xmi:id="_iF7dmoobEeqevdMp57x66A">
            <body>Génère un chiffre aléatoire entre min et max
	 * @param int min
	 * @param int max
	 * @return random int between min and max</body>
          </ownedComment>
          <ownedParameter xmi:id="_h1QkUYobEeqevdMp57x66A" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_h1RLYIobEeqevdMp57x66A" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_h1RLYYobEeqevdMp57x66A" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_h_Q04IobEeqevdMp57x66A" name="Piste" method="_iFdjgoobEeqevdMp57x66A">
          <eAnnotations xmi:id="_h_Rb8IobEeqevdMp57x66A" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_h_Rb8YobEeqevdMp57x66A" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_iF62hYobEeqevdMp57x66A">
            <body>Constructor
	 * @param etat</body>
          </ownedComment>
          <ownedParameter xmi:id="_h_Q04YobEeqevdMp57x66A" name="etat" type="_hytmoIobEeqevdMp57x66A"/>
          <ownedParameter xmi:id="_h_Rb8oobEeqevdMp57x66A" type="_h070MIobEeqevdMp57x66A" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_iF0v4IobEeqevdMp57x66A" name="" memberEnd="_iB-xsIobEeqevdMp57x66A _iF0v4YobEeqevdMp57x66A">
        <ownedEnd xmi:id="_iF0v4YobEeqevdMp57x66A" name="" type="_hxTRYIobEeqevdMp57x66A" association="_iF0v4IobEeqevdMp57x66A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_iGuHwIobEeqevdMp57x66A" name="" memberEnd="_iGuHwYobEeqevdMp57x66A _iB88gIobEeqevdMp57x66A">
        <ownedEnd xmi:id="_iGuHwYobEeqevdMp57x66A" name="" type="_hwyUAIobEeqevdMp57x66A" association="_iGuHwIobEeqevdMp57x66A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_iGuu0YobEeqevdMp57x66A" name="" memberEnd="_iGuu0oobEeqevdMp57x66A _iB-KoIobEeqevdMp57x66A">
        <ownedEnd xmi:id="_iGuu0oobEeqevdMp57x66A" name="" type="_hxTRYIobEeqevdMp57x66A" association="_iGuu0YobEeqevdMp57x66A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_iGvV4YobEeqevdMp57x66A" name="" memberEnd="_iGvV4oobEeqevdMp57x66A _iCK-8YobEeqevdMp57x66A">
        <ownedEnd xmi:id="_iGvV4oobEeqevdMp57x66A" name="" type="_hxxLcIobEeqevdMp57x66A" association="_iGvV4YobEeqevdMp57x66A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_iG01cYobEeqevdMp57x66A" name="" memberEnd="_iG01coobEeqevdMp57x66A _iCYaUYobEeqevdMp57x66A">
        <ownedEnd xmi:id="_iG01coobEeqevdMp57x66A" name="" type="_hyEGYIobEeqevdMp57x66A" association="_iG01cYobEeqevdMp57x66A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_iG2DkIobEeqevdMp57x66A" name="" memberEnd="_iG2DkYobEeqevdMp57x66A _iDDvwYobEeqevdMp57x66A">
        <ownedEnd xmi:id="_iG2DkYobEeqevdMp57x66A" name="" type="_hytmoIobEeqevdMp57x66A" association="_iG2DkIobEeqevdMp57x66A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_iG68EIobEeqevdMp57x66A" name="" memberEnd="_iG68EYobEeqevdMp57x66A _iDE94IobEeqevdMp57x66A">
        <ownedEnd xmi:id="_iG68EYobEeqevdMp57x66A" name="" type="_hytmoIobEeqevdMp57x66A" association="_iG68EIobEeqevdMp57x66A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_iG7jIYobEeqevdMp57x66A" name="" memberEnd="_iG7jIoobEeqevdMp57x66A _iDFk8YobEeqevdMp57x66A">
        <ownedEnd xmi:id="_iG7jIoobEeqevdMp57x66A" name="" type="_hytmoIobEeqevdMp57x66A" association="_iG7jIYobEeqevdMp57x66A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_iG8xQYobEeqevdMp57x66A" name="" memberEnd="_iG8xQoobEeqevdMp57x66A _iDGMAIobEeqevdMp57x66A">
        <ownedEnd xmi:id="_iG8xQoobEeqevdMp57x66A" name="" type="_hytmoIobEeqevdMp57x66A" association="_iG8xQYobEeqevdMp57x66A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_iG9_YYobEeqevdMp57x66A" name="" memberEnd="_iG9_YoobEeqevdMp57x66A _iDHaIIobEeqevdMp57x66A">
        <ownedEnd xmi:id="_iG9_YoobEeqevdMp57x66A" name="" type="_hytmoIobEeqevdMp57x66A" association="_iG9_YYobEeqevdMp57x66A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_iG_NgYobEeqevdMp57x66A" name="" memberEnd="_iG_NgoobEeqevdMp57x66A _iDLrkIobEeqevdMp57x66A">
        <ownedEnd xmi:id="_iG_NgoobEeqevdMp57x66A" name="" type="_hytmoIobEeqevdMp57x66A" association="_iG_NgYobEeqevdMp57x66A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_iHAboYobEeqevdMp57x66A" name="" memberEnd="_iHAbooobEeqevdMp57x66A _iDPV8IobEeqevdMp57x66A">
        <ownedEnd xmi:id="_iHAbooobEeqevdMp57x66A" name="" type="_h0UJIIobEeqevdMp57x66A" association="_iHAboYobEeqevdMp57x66A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_iHBpwYobEeqevdMp57x66A" name="" memberEnd="_iHBpwoobEeqevdMp57x66A _iDP9AYobEeqevdMp57x66A">
        <ownedEnd xmi:id="_iHBpwoobEeqevdMp57x66A" name="" type="_h0UJIIobEeqevdMp57x66A" association="_iHBpwYobEeqevdMp57x66A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_iHC34YobEeqevdMp57x66A" name="" memberEnd="_iHC34oobEeqevdMp57x66A _iDVckIobEeqevdMp57x66A">
        <ownedEnd xmi:id="_iHC34oobEeqevdMp57x66A" name="" type="_h0pgUIobEeqevdMp57x66A" association="_iHC34YobEeqevdMp57x66A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_iHIXcIobEeqevdMp57x66A" name="" memberEnd="_iHIXcYobEeqevdMp57x66A _iDWDoYobEeqevdMp57x66A">
        <ownedEnd xmi:id="_iHIXcYobEeqevdMp57x66A" name="" type="_h0pgUIobEeqevdMp57x66A" association="_iHIXcIobEeqevdMp57x66A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_iHKMoYobEeqevdMp57x66A" name="" memberEnd="_iHKzsIobEeqevdMp57x66A _iDhp0IobEeqevdMp57x66A">
        <ownedEnd xmi:id="_iHKzsIobEeqevdMp57x66A" name="" type="_h070MIobEeqevdMp57x66A" association="_iHKMoYobEeqevdMp57x66A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_iHMB0IobEeqevdMp57x66A" name="" memberEnd="_iHMB0YobEeqevdMp57x66A _iDjfAIobEeqevdMp57x66A">
        <ownedEnd xmi:id="_iHMB0YobEeqevdMp57x66A" name="" type="_h070MIobEeqevdMp57x66A" association="_iHMB0IobEeqevdMp57x66A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_iHMo4YobEeqevdMp57x66A" name="" memberEnd="_iHMo4oobEeqevdMp57x66A _iDqMsIobEeqevdMp57x66A">
        <ownedEnd xmi:id="_iHMo4oobEeqevdMp57x66A" name="" type="_h070MIobEeqevdMp57x66A" association="_iHMo4YobEeqevdMp57x66A"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_hnM6MIobEeqevdMp57x66A" name="control">
      <packagedElement xmi:type="uml:Class" xmi:id="_htvAAIobEeqevdMp57x66A" name="Avancer">
        <ownedComment xmi:id="_iFyToIobEeqevdMp57x66A">
          <body>Lance la fonction {@link Etat#avance()} toutes les {@link #time} 
 *</body>
        </ownedComment>
        <generalization xmi:id="_h9q5cIobEeqevdMp57x66A" general="_hwNFMIobEeqevdMp57x66A"/>
        <ownedAttribute xmi:id="_iBlJEIobEeqevdMp57x66A" name="time" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_iBlwIIobEeqevdMp57x66A" value="41"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iBm-QIobEeqevdMp57x66A" name="etat" visibility="private" type="_hytmoIobEeqevdMp57x66A" association="_iGoBIIobEeqevdMp57x66A"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iE_pcIobEeqevdMp57x66A" name="Avancer" specification="_h9pEQIobEeqevdMp57x66A">
          <ownedParameter xmi:id="_iE_pcYobEeqevdMp57x66A" name="etat" type="_hytmoIobEeqevdMp57x66A"/>
          <ownedParameter xmi:id="_iE_pcoobEeqevdMp57x66A" type="_htvAAIobEeqevdMp57x66A" direction="return"/>
          <language>java</language>
          <body>this.etat = etat;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFFwEIobEeqevdMp57x66A" name="run" specification="_ht270IobEeqevdMp57x66A">
          <language>java</language>
          <body>while(this.running) {
			try {
				Thread.sleep(time);
				this.etat.avance();
				
			}
			catch (Exception e) { e.printStackTrace(); this.terminate(); }
		}
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_ht270IobEeqevdMp57x66A" name="run" method="_iFFwEIobEeqevdMp57x66A"/>
        <ownedOperation xmi:id="_h9pEQIobEeqevdMp57x66A" name="Avancer" method="_iE_pcIobEeqevdMp57x66A">
          <eAnnotations xmi:id="_h9pEQoobEeqevdMp57x66A" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_h9prUIobEeqevdMp57x66A" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_h9pEQYobEeqevdMp57x66A" name="etat" type="_hytmoIobEeqevdMp57x66A"/>
          <ownedParameter xmi:id="_h9qSYIobEeqevdMp57x66A" type="_htvAAIobEeqevdMp57x66A" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_hvU7cIobEeqevdMp57x66A" name="Keys">
        <generalization xmi:id="_iAXoIIobEeqevdMp57x66A" general="_h9sHkIobEeqevdMp57x66A"/>
        <ownedAttribute xmi:id="_iBnlUYobEeqevdMp57x66A" name="etat" visibility="private" type="_hytmoIobEeqevdMp57x66A" association="_iGp2UIobEeqevdMp57x66A"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFFwEYobEeqevdMp57x66A" name="Keys" specification="_h9y1QIobEeqevdMp57x66A">
          <ownedParameter xmi:id="_iFFwEoobEeqevdMp57x66A" name="etat" type="_hytmoIobEeqevdMp57x66A"/>
          <ownedParameter xmi:id="_iFFwE4obEeqevdMp57x66A" type="_hvU7cIobEeqevdMp57x66A" direction="return"/>
          <language>java</language>
          <body>this.etat = etat;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFFwFIobEeqevdMp57x66A" name="keyPressed" specification="_iATWsYobEeqevdMp57x66A">
          <ownedParameter xmi:id="_iFFwFYobEeqevdMp57x66A" name="e" type="_h9t8wIobEeqevdMp57x66A"/>
          <language>java</language>
          <body>if (e.getKeyCode() == KeyEvent.VK_Q) {
			etat.pressLeft(true);
		}
		// déplacement droite : touche D
		if(e.getKeyCode() == KeyEvent.VK_D) {
			etat.pressRight(true);
		}
		// déplacement haut : touche Z
		if(e.getKeyCode() == KeyEvent.VK_Z) {
			etat.pressUp(true);
		}
		// déplacement bas : touche S
		if(e.getKeyCode() == KeyEvent.VK_S) {
			etat.pressDown(true);
		}
		// recommencer un partie : touche R
		if(etat.getFin()) {
			if(e.getKeyCode() == KeyEvent.VK_R) {
				etat.retry();
			}
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFGXIIobEeqevdMp57x66A" name="keyReleased" specification="_iAVL4IobEeqevdMp57x66A">
          <ownedParameter xmi:id="_iFGXIYobEeqevdMp57x66A" name="e" type="_h9t8wIobEeqevdMp57x66A"/>
          <language>java</language>
          <body>if (e.getKeyCode() == KeyEvent.VK_Q){
			etat.pressLeft(false);
		}
		if (e.getKeyCode() == KeyEvent.VK_D) {
			etat.pressRight(false);
		}
		if(e.getKeyCode() == KeyEvent.VK_Z) {
			etat.pressUp(false);
		}
		if(e.getKeyCode() == KeyEvent.VK_S) {
			etat.pressDown(false);
		}
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_h9y1QIobEeqevdMp57x66A" name="Keys" method="_iFFwEYobEeqevdMp57x66A">
          <eAnnotations xmi:id="_h9zcUIobEeqevdMp57x66A" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_h9zcUYobEeqevdMp57x66A" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_h9y1QYobEeqevdMp57x66A" name="etat" type="_hytmoIobEeqevdMp57x66A"/>
          <ownedParameter xmi:id="_h9zcUoobEeqevdMp57x66A" type="_hvU7cIobEeqevdMp57x66A" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_iAQTYIobEeqevdMp57x66A" name="keyTyped">
          <ownedParameter xmi:id="_iAQ6cIobEeqevdMp57x66A" name="e" type="_h9t8wIobEeqevdMp57x66A"/>
        </ownedOperation>
        <ownedOperation xmi:id="_iATWsYobEeqevdMp57x66A" name="keyPressed" method="_iFFwFIobEeqevdMp57x66A">
          <ownedParameter xmi:id="_iATWsoobEeqevdMp57x66A" name="e" type="_h9t8wIobEeqevdMp57x66A"/>
        </ownedOperation>
        <ownedOperation xmi:id="_iAVL4IobEeqevdMp57x66A" name="keyReleased" method="_iFGXIIobEeqevdMp57x66A">
          <ownedParameter xmi:id="_iAVL4YobEeqevdMp57x66A" name="e" type="_h9t8wIobEeqevdMp57x66A"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_hvkMAIobEeqevdMp57x66A" name="Nuage">
        <ownedComment xmi:id="_iFyToYobEeqevdMp57x66A">
          <body>Chaque nuage dans la vue est représenté par une instance de cette classe
tout les {@link #TIME} millisecondes de {@link #DEPL} pixels vers la gauche</body>
        </ownedComment>
        <generalization xmi:id="_iAarcIobEeqevdMp57x66A" general="_iAYPMYobEeqevdMp57x66A"/>
        <ownedAttribute xmi:id="_iBqBkIobEeqevdMp57x66A" name="DEPL" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_iBqBkYobEeqevdMp57x66A" value="3"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iBtE4IobEeqevdMp57x66A" name="TIME" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_iBtE4YobEeqevdMp57x66A" value="100"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iBuTAIobEeqevdMp57x66A" name="running" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iBu6EIobEeqevdMp57x66A" name="posX" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iBvhIIobEeqevdMp57x66A" name="posY" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iBvhIYobEeqevdMp57x66A" name="width" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iBwIMIobEeqevdMp57x66A" name="height" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFGXIoobEeqevdMp57x66A" name="Nuage" specification="_hvsH0IobEeqevdMp57x66A">
          <ownedParameter xmi:id="_iFGXI4obEeqevdMp57x66A" type="_hvkMAIobEeqevdMp57x66A" direction="return"/>
          <language>java</language>
          <body>this.running = true;
		this.width = randint(50,200);
		this.height = randint(50,Affichage.posHorizon);
		this.posX = Affichage.LARG;
		int maxY = Affichage.posHorizon - this.height;
		this.posY = randint(0,maxY);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFG-MIobEeqevdMp57x66A" name="run" specification="_hvtV8IobEeqevdMp57x66A">
          <language>java</language>
          <body>while(this.running) {
			try {
				Thread.sleep(TIME);
				this.posX -= DEPL;
			}catch (Exception e) {
				e.printStackTrace(); this.terminate(); 
			}
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFG-MYobEeqevdMp57x66A" name="terminate" specification="_hvukEoobEeqevdMp57x66A">
          <language>java</language>
          <body>this.running = false;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFG-MoobEeqevdMp57x66A" name="randint" specification="_hvyOcIobEeqevdMp57x66A">
          <ownedParameter xmi:id="_iFG-M4obEeqevdMp57x66A" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iFG-NIobEeqevdMp57x66A" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iFG-NYobEeqevdMp57x66A" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return ThreadLocalRandom.current().nextInt(min, max + 1);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_hvsH0IobEeqevdMp57x66A" name="Nuage" method="_iFGXIoobEeqevdMp57x66A">
          <eAnnotations xmi:id="_hvsH0YobEeqevdMp57x66A" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_hvsH0oobEeqevdMp57x66A" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_hvsu4IobEeqevdMp57x66A" type="_hvkMAIobEeqevdMp57x66A" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_hvtV8IobEeqevdMp57x66A" name="run" method="_iFG-MIobEeqevdMp57x66A"/>
        <ownedOperation xmi:id="_hvukEoobEeqevdMp57x66A" name="terminate" method="_iFG-MYobEeqevdMp57x66A"/>
        <ownedOperation xmi:id="_hvyOcIobEeqevdMp57x66A" name="randint" method="_iFG-MoobEeqevdMp57x66A">
          <ownedParameter xmi:id="_hv0qsIobEeqevdMp57x66A" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_hv1RwIobEeqevdMp57x66A" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_hv140IobEeqevdMp57x66A" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_hv_p0IobEeqevdMp57x66A" name="RepaintScreen">
        <ownedComment xmi:id="_iFyTooobEeqevdMp57x66A">
          <body>Rafraichit l'affichage toutes les {@link #time} millisecondes</body>
        </ownedComment>
        <generalization xmi:id="_h-Cs4IobEeqevdMp57x66A" general="_hwNFMIobEeqevdMp57x66A"/>
        <ownedAttribute xmi:id="_iBwvQIobEeqevdMp57x66A" name="time" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_iBxWUIobEeqevdMp57x66A" value="50"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iBx9YIobEeqevdMp57x66A" name="aff" visibility="private" type="_h1Vc0IobEeqevdMp57x66A" association="_iGrEcYobEeqevdMp57x66A"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFHlQIobEeqevdMp57x66A" name="RepaintScreen" specification="_h-BewIobEeqevdMp57x66A">
          <ownedParameter xmi:id="_iFHlQYobEeqevdMp57x66A" name="aff" type="_h1Vc0IobEeqevdMp57x66A"/>
          <ownedParameter xmi:id="_iFHlQoobEeqevdMp57x66A" type="_hv_p0IobEeqevdMp57x66A" direction="return"/>
          <language>java</language>
          <body>this.aff = aff;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFHlQ4obEeqevdMp57x66A" name="run" specification="_hwCtIIobEeqevdMp57x66A">
          <language>java</language>
          <body>while(this.running) {
			try { Thread.sleep(time); this.aff.revalidate(); this.aff.repaint();}
			catch (Exception e) { e.printStackTrace(); this.terminate(); }
		}
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_hwCtIIobEeqevdMp57x66A" name="run" method="_iFHlQ4obEeqevdMp57x66A"/>
        <ownedOperation xmi:id="_h-BewIobEeqevdMp57x66A" name="RepaintScreen" method="_iFHlQIobEeqevdMp57x66A">
          <eAnnotations xmi:id="_h-CF0YobEeqevdMp57x66A" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_h-CF0oobEeqevdMp57x66A" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_iFy6sIobEeqevdMp57x66A">
            <body>Constructeur
	 * @param aff</body>
          </ownedComment>
          <ownedParameter xmi:id="_h-CF0IobEeqevdMp57x66A" name="aff" type="_h1Vc0IobEeqevdMp57x66A"/>
          <ownedParameter xmi:id="_h-CF04obEeqevdMp57x66A" type="_hv_p0IobEeqevdMp57x66A" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_hwNFMIobEeqevdMp57x66A" name="StoppableThread">
        <generalization xmi:id="_iAduwIobEeqevdMp57x66A" general="_iAYPMYobEeqevdMp57x66A"/>
        <ownedAttribute xmi:id="_iBykcIobEeqevdMp57x66A" name="running" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_iBykcYobEeqevdMp57x66A" value="true"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFHlRIobEeqevdMp57x66A" name="terminate" specification="_hwSkwIobEeqevdMp57x66A">
          <language>java</language>
          <body>this.running = false;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFIMUIobEeqevdMp57x66A" name="restart" specification="_hwTL0IobEeqevdMp57x66A">
          <language>java</language>
          <body>this.running = true;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_hwSkwIobEeqevdMp57x66A" name="terminate" method="_iFHlRIobEeqevdMp57x66A"/>
        <ownedOperation xmi:id="_hwTL0IobEeqevdMp57x66A" name="restart" method="_iFIMUIobEeqevdMp57x66A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_hwWPIIobEeqevdMp57x66A" name="Vitesse">
        <ownedComment xmi:id="_iFy6sYobEeqevdMp57x66A">
          <body>Met à jour la {@link Etat#vitesse vitesse} de la moto toutes les {@link #time} millisecondes, en fonction de 
la {@link Etat#vitesse vitesse} et l'{@link Etat#accel accélération} actuelles.</body>
        </ownedComment>
        <generalization xmi:id="_h-G-UoobEeqevdMp57x66A" general="_hwNFMIobEeqevdMp57x66A"/>
        <ownedAttribute xmi:id="_iBzLgYobEeqevdMp57x66A" name="running" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_iBzykIobEeqevdMp57x66A" value="true"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iB0ZoYobEeqevdMp57x66A" name="time" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iB1AsYobEeqevdMp57x66A" name="etat" visibility="private" type="_hytmoIobEeqevdMp57x66A" association="_iGs5oIobEeqevdMp57x66A"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFIMUYobEeqevdMp57x66A" name="Vitesse" specification="_h-FwMIobEeqevdMp57x66A">
          <ownedParameter xmi:id="_iFIMUoobEeqevdMp57x66A" name="etat" type="_hytmoIobEeqevdMp57x66A"/>
          <ownedParameter xmi:id="_iFIMU4obEeqevdMp57x66A" type="_hwWPIIobEeqevdMp57x66A" direction="return"/>
          <language>java</language>
          <body>time = 1000;
		this.etat = etat;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFIMVIobEeqevdMp57x66A" name="run" specification="_hweK8IobEeqevdMp57x66A">
          <language>java</language>
          <body>while(this.running) {
			try { Thread.sleep(time);  this.etat.updateVitesse();}
			catch (Exception e) { e.printStackTrace(); this.terminate(); }
		}
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_hweK8IobEeqevdMp57x66A" name="run" method="_iFIMVIobEeqevdMp57x66A"/>
        <ownedOperation xmi:id="_h-FwMIobEeqevdMp57x66A" name="Vitesse" method="_iFIMUYobEeqevdMp57x66A">
          <eAnnotations xmi:id="_h-GXQIobEeqevdMp57x66A" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_h-G-UIobEeqevdMp57x66A" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_h-FwMYobEeqevdMp57x66A" name="etat" type="_hytmoIobEeqevdMp57x66A"/>
          <ownedParameter xmi:id="_h-G-UYobEeqevdMp57x66A" type="_hwWPIIobEeqevdMp57x66A" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_iGoBIIobEeqevdMp57x66A" name="" memberEnd="_iGoBIYobEeqevdMp57x66A _iBm-QIobEeqevdMp57x66A">
        <ownedEnd xmi:id="_iGoBIYobEeqevdMp57x66A" name="" type="_htvAAIobEeqevdMp57x66A" association="_iGoBIIobEeqevdMp57x66A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_iGp2UIobEeqevdMp57x66A" name="" memberEnd="_iGp2UYobEeqevdMp57x66A _iBnlUYobEeqevdMp57x66A">
        <ownedEnd xmi:id="_iGp2UYobEeqevdMp57x66A" name="" type="_hvU7cIobEeqevdMp57x66A" association="_iGp2UIobEeqevdMp57x66A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_iGrEcYobEeqevdMp57x66A" name="" memberEnd="_iGrEcoobEeqevdMp57x66A _iBx9YIobEeqevdMp57x66A">
        <ownedEnd xmi:id="_iGrEcoobEeqevdMp57x66A" name="" type="_hv_p0IobEeqevdMp57x66A" association="_iGrEcYobEeqevdMp57x66A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_iGs5oIobEeqevdMp57x66A" name="" memberEnd="_iGs5oYobEeqevdMp57x66A _iB1AsYobEeqevdMp57x66A">
        <ownedEnd xmi:id="_iGs5oYobEeqevdMp57x66A" name="" type="_hwWPIIobEeqevdMp57x66A" association="_iGs5oIobEeqevdMp57x66A"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_hnP9gIobEeqevdMp57x66A" name="java">
      <packagedElement xmi:type="uml:Package" xmi:id="_hnUO8IobEeqevdMp57x66A" name="awt">
        <packagedElement xmi:type="uml:Package" xmi:id="_hnUO8YobEeqevdMp57x66A" name="event">
          <packagedElement xmi:type="uml:Class" xmi:id="_h9sHkIobEeqevdMp57x66A" name="KeyAdapter"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_h9t8wIobEeqevdMp57x66A" name="KeyEvent"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_h-QIQIobEeqevdMp57x66A" name="ActionEvent"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_h-TyoIobEeqevdMp57x66A" name="ActionListener"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_h-XdAIobEeqevdMp57x66A" name="Point"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_h-agUYobEeqevdMp57x66A" name="Rectangle"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_h-fY0IobEeqevdMp57x66A" name="Image"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_h-0I8IobEeqevdMp57x66A" name="Graphics"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_h_W7gIobEeqevdMp57x66A" name="BasicStroke"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_h_YwsYobEeqevdMp57x66A" name="Color"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_h_Z-0YobEeqevdMp57x66A" name="Dimension"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_h_dpMYobEeqevdMp57x66A" name="Font"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_h_e3UIobEeqevdMp57x66A" name="FontMetrics"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_h_jIwIobEeqevdMp57x66A" name="Graphics2D"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_h_k98YobEeqevdMp57x66A" name="Stroke"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_hnvFsIobEeqevdMp57x66A" name="util">
        <packagedElement xmi:type="uml:Package" xmi:id="_hnwT0IobEeqevdMp57x66A" name="concurrent">
          <packagedElement xmi:type="uml:Class" xmi:id="_h91RgIobEeqevdMp57x66A" name="ThreadLocalRandom"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_h-1XEIobEeqevdMp57x66A" name="ArrayList"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_hpOTcIobEeqevdMp57x66A" name="io">
        <packagedElement xmi:type="uml:Class" xmi:id="_h-jDMIobEeqevdMp57x66A" name="File"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_h-lfcYobEeqevdMp57x66A" name="IOException"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_iAYPMIobEeqevdMp57x66A" name="lang">
        <packagedElement xmi:type="uml:Class" xmi:id="_iAYPMYobEeqevdMp57x66A" name="Thread"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_hnzXIIobEeqevdMp57x66A" name="view">
      <packagedElement xmi:type="uml:Class" xmi:id="_h1Vc0IobEeqevdMp57x66A" name="Affichage">
        <generalization xmi:id="_iBKSUoobEeqevdMp57x66A" general="_h_naMIobEeqevdMp57x66A"/>
        <ownedAttribute xmi:id="_iDqzwIobEeqevdMp57x66A" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_iDra0IobEeqevdMp57x66A" value="1L"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iDra0YobEeqevdMp57x66A" name="LARG" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_iDra0oobEeqevdMp57x66A" value="1400"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iDsB4YobEeqevdMp57x66A" name="HAUT" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_iDsB4oobEeqevdMp57x66A" value="800"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iDso8YobEeqevdMp57x66A" name="posHorizon" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_iDtQAIobEeqevdMp57x66A" value="200"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iDtQAoobEeqevdMp57x66A" name="PATH" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_iDueIIobEeqevdMp57x66A" value="&quot;imgs/red.png&quot;"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iDvFMYobEeqevdMp57x66A" name="RECUL_Z" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_iDvsQIobEeqevdMp57x66A" value="200"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iDvsQYobEeqevdMp57x66A" name="HAUTEUR_Y" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_iDvsQoobEeqevdMp57x66A" value="HAUT"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iDwTUIobEeqevdMp57x66A" name="max_prof" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_iDwTUYobEeqevdMp57x66A" value="((HAUT-posHorizon)*RECUL_Z)/(HAUTEUR_Y-HAUT+posHorizon)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iDw6YYobEeqevdMp57x66A" name="etat" visibility="private" type="_hytmoIobEeqevdMp57x66A" association="_iHN3AYobEeqevdMp57x66A"/>
        <ownedAttribute xmi:id="_iDyIgIobEeqevdMp57x66A" name="check" visibility="private" type="_hwyUAIobEeqevdMp57x66A" association="_iHPFIYobEeqevdMp57x66A"/>
        <ownedAttribute xmi:id="_iDz9sIobEeqevdMp57x66A" name="clock" visibility="private" type="_hxTRYIobEeqevdMp57x66A" association="_iHQ6UYobEeqevdMp57x66A"/>
        <ownedAttribute xmi:id="_iD0kwIobEeqevdMp57x66A" name="moto" visibility="private" type="_h2TtMIobEeqevdMp57x66A" association="_iHSIcYobEeqevdMp57x66A"/>
        <ownedAttribute xmi:id="_iD1L0IobEeqevdMp57x66A" name="nuages" visibility="private" type="_h2bpAIobEeqevdMp57x66A" association="_iHVLwYobEeqevdMp57x66A"/>
        <ownedAttribute xmi:id="_iEjkkYobEeqevdMp57x66A" name="decors" visibility="private" type="_h2FqwIobEeqevdMp57x66A" association="_iHVy0YobEeqevdMp57x66A"/>
        <ownedAttribute xmi:id="_iEkLoYobEeqevdMp57x66A" name="ennemis" visibility="private" type="_h2QC0IobEeqevdMp57x66A" association="_iHXA8YobEeqevdMp57x66A"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFgm0IobEeqevdMp57x66A" name="Affichage" specification="_h_p2cIobEeqevdMp57x66A">
          <ownedParameter xmi:id="_iFgm0YobEeqevdMp57x66A" name="etat" type="_hytmoIobEeqevdMp57x66A"/>
          <ownedParameter xmi:id="_iFgm0oobEeqevdMp57x66A" type="_h1Vc0IobEeqevdMp57x66A" direction="return"/>
          <language>java</language>
          <body>this.setPreferredSize(new Dimension(LARG, HAUT));
		this.etat = etat;
		this.moto = new VueMoto(etat);
		this.nuages = new VueNuages();
		this.check = etat.getCheck();
		this.clock = check.getClock();
		this.decors = new VueDecors(etat);
		this.ennemis = new VueEnnemis(etat);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFjqIIobEeqevdMp57x66A" name="drawEnd" specification="_iA3XYIobEeqevdMp57x66A">
          <ownedParameter xmi:id="_iFjqIYobEeqevdMp57x66A" name="g" type="_h-0I8IobEeqevdMp57x66A"/>
          <language>java</language>
          <body>//on change la police pour l'affichage de GAME OVER
		int prevFontSize = g.getFont().getSize();
		Font newFont = new Font(g.getFont().getFontName(), Font.PLAIN, 60);
		g.setFont(newFont);
		String str = &quot;GAME OVER&quot;;
		
		//calcul largeur string
		FontMetrics fm = getFontMetrics(newFont);
		int printedLength = fm.stringWidth(str);
		
		// Affiche GAME OVER
		g.drawString(str, LARG/2 - printedLength/2, HAUT/2-30);
		
		// Affiche PRESS R TO RETRY
		str = &quot;PRESS R TO RETRY&quot;;
		printedLength = fm.stringWidth(str);
		g.drawString(str, LARG/2 - printedLength/2, HAUT/2+30);
		
		//on revient à l'ancienne police pour la suite
		g.setFont(new Font(g.getFont().getFontName(), Font.PLAIN, prevFontSize));
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFkRMIobEeqevdMp57x66A" name="drawClock" specification="_iA3-cIobEeqevdMp57x66A">
          <ownedParameter xmi:id="_iFkRMYobEeqevdMp57x66A" name="g" type="_h-0I8IobEeqevdMp57x66A"/>
          <language>java</language>
          <body>//on change la police pour l'affichage de la Clock
		int prevFontSize = g.getFont().getSize();
		g.setFont(new Font(g.getFont().getFontName(), Font.PLAIN, 25)); 
		
		//affichage du timer en haut à gauche
		int tempsRestant = this.clock.getTempsRestant();
		if(tempsRestant > 9){
         g.drawString(&quot;&quot;+tempsRestant, 24, 42);
     }
     else{
         g.drawString(&quot;0&quot;+tempsRestant, 24, 42);
     }
		
		//quand on gagne du temps on affiche en vert le temps gagné
		int prevTime = this.clock.getPrevTime();
		if(tempsRestant >= prevTime) {
			g.setColor(Color.GREEN);
			g.drawString(&quot;+&quot;+this.check.getPrevTime(),LARG/2 - 10, HAUT/2);
			g.setColor(Color.BLACK);
		}
		//on revient à l'ancienne police
		g.setFont(new Font(g.getFont().getFontName(), Font.PLAIN, prevFontSize));
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFkRMoobEeqevdMp57x66A" name="drawHorizon" specification="_iA4lgIobEeqevdMp57x66A">
          <ownedParameter xmi:id="_iFkRM4obEeqevdMp57x66A" name="g" type="_h-0I8IobEeqevdMp57x66A"/>
          <language>java</language>
          <body>g.drawLine(0, posHorizon, LARG, posHorizon);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFkRNIobEeqevdMp57x66A" name="tracer" specification="_iA5MkIobEeqevdMp57x66A">
          <ownedParameter xmi:id="_iFkRNYobEeqevdMp57x66A" name="p1" type="_h-XdAIobEeqevdMp57x66A"/>
          <ownedParameter xmi:id="_iFkRNoobEeqevdMp57x66A" name="p2" type="_h-XdAIobEeqevdMp57x66A"/>
          <ownedParameter xmi:id="_iFkRN4obEeqevdMp57x66A" name="g" type="_h-0I8IobEeqevdMp57x66A"/>
          <language>java</language>
          <body>g.drawLine(p1.x, HAUT - p1.y, p2.x,  HAUT - p2.y);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFk4QIobEeqevdMp57x66A" name="projection" specification="_h1f04IobEeqevdMp57x66A">
          <ownedParameter xmi:id="_iFk4QYobEeqevdMp57x66A" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iFk4QoobEeqevdMp57x66A" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iFk4Q4obEeqevdMp57x66A" name="z">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iFk4RIobEeqevdMp57x66A" type="_h-XdAIobEeqevdMp57x66A" direction="return"/>
          <language>java</language>
          <body>int posAffX = LARG/2 - etat.getPosX(); //position d'affichage posX depuis le milieu de l'écran
		//projection sur l'axe y (de la fenetre)
		int y_resultat = (z * (HAUTEUR_Y - y)) / (z + RECUL_Z) + y;
		//projection sur l'axe x (de la fenetre)
		int x_resultat = (z * (posAffX - x)) / (z + RECUL_Z) + x;
		return new Point(x_resultat,y_resultat);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFk4RYobEeqevdMp57x66A" name="drawPiste" specification="_iA6asYobEeqevdMp57x66A">
          <ownedParameter xmi:id="_iFk4RoobEeqevdMp57x66A" name="g" type="_h_jIwIobEeqevdMp57x66A"/>
          <language>java</language>
          <body>int posX = etat.getPosX();
		Point[][] piste = etat.getPiste();
		
		
		for(int i=1; i&lt;piste.length-2; i++) {
			
			Point[] t1 = piste[i];		//tableau 1 de points (droite et gauche)
			Point[] t2 = piste[i+1];	//tableau 1 de points (droite et gauche)
			
			Point p1g = projection(t1[0].x-posX, 0, t1[0].y); 	//point 1 de gauche projeté
			Point p2g = projection(t2[0].x-posX, 0, t2[0].y); 	//point 2 de gauche projeté
			Point p1d = projection(t1[1].x-posX, 0, t1[1].y); 	//point 1 de droite projeté
			Point p2d = projection(t2[1].x-posX, 0, t2[1].y); 	//point 2 de droite projeté
			
			//affiche bord piste gauche
			tracer(p1g,p2g, g);
			//affiche bord piste droite
			tracer(p1d,p2d, g);
			
			int largPiste1 = p1d.x - p1g.x;
			int largPiste2 = p2d.x - p2g.x;
			
			
			g.setColor(Color.GRAY);
			//affiche separation voie gauche
			g.drawLine(
					p1g.x+(largPiste1 / 3),
					HAUT-p1g.y,
					p2g.x+(largPiste2 / 3),
					HAUT-p2g.y
			);
			//affiche separation voie droite
			g.drawLine(
					p1d.x-(largPiste1 / 3),
					HAUT-p1d.y,
					p2d.x-(largPiste2 / 3),
					HAUT-p2d.y
			);
			g.setColor(Color.BLACK);
			
			//calcul indice checkpoint sur la piste
			int indice = (check.getPosY()-etat.getPosY())/Piste.incr+1;
			//si t1 est sur l'indice du checkpoint, on le dessine (on dessine pas si l'indice est 1 car on le dessine juste après)
			if(indice > 1 &amp;&amp; indice==i) {
				//on récupère le décalage des positions x1 x2 du checkpoint pour l'afficher sur la bonne voie
				int[] decCheck = new int[2]; 
				decCheck[0] = (int) (check.getPosX()[0] * largPiste1);
				decCheck[1] = (int) (check.getPosX()[1] * largPiste1);
				
				g.setColor(Color.BLUE);
				// on utilise pas la méthode tracer donc il faut inverser les y
				g.drawLine(
						p1g.x+decCheck[0],
						HAUT-p1g.y,
						p1d.x+decCheck[1],
						HAUT-p1d.y
				);
				g.setColor(Color.BLACK);
			}
		}
		
		/* il faut maintenant gérer le cas du ou des premiers points, qui sont situés &quot;derrière l'écran&quot;, donc avec un z
		 * négatif : on calculer le moment où la route coupe le plan de la vue et c'est ce point qui sera notre premier
		 * point de dessin */
		Point p0g = piste[0][0];		//point 0 de gauche
		Point p1g = piste[1][0];		//point 1 de gauche
		Point p0d = piste[0][1];		//point 0 de droite
		Point p1d = piste[1][1];		//point 1 de droite
		
		Point premierG = new Point(calculXdepuisYdansSegment(p0g, p1g, 0) - posX, 0);	//premier point à gauche
		Point premierD = new Point(calculXdepuisYdansSegment(p0d, p1d, 0) - posX, 0);	//premier point à droite
		Point deuxiemeG = projection(p1g.x - posX, 0, p1g.y);
		Point deuxiemeD = projection(p1d.x - posX, 0, p1d.y);
		
		tracer(new Point(premierG.x, premierG.y), deuxiemeG, g);
		tracer(new Point(premierD.x, premierD.y), deuxiemeD, g);
		
		
		g.setColor(Color.GRAY);
		//affiche separation voie gauche
		int largPiste1 = premierD.x - premierG.x;
		int largPiste2 = deuxiemeD.x - deuxiemeG.x;
		g.drawLine(
				premierG.x+(largPiste1 / 3),
				HAUT-premierG.y,
				deuxiemeG.x+(largPiste2 / 3),
				HAUT-deuxiemeG.y
		);
		//affiche separation voie droite
		g.drawLine(
				premierD.x-(largPiste1 / 3),
				HAUT-premierD.y,
				deuxiemeD.x-(largPiste2 / 3),
				HAUT-deuxiemeD.y
		);
		g.setColor(Color.BLACK);
		
		
		
		
		// si il y a un checkpoint au premier point (donc en bas), on le dessine
		int indice = (check.getPosY()-etat.getPosY())/Piste.incr+1;
		if(indice == 1) {
			int largPremier = deuxiemeD.x - deuxiemeG.x;
			int[] decCheck = new int[2]; 
			decCheck[0] = (int) (check.getPosX()[0] * largPremier);
			decCheck[1] = (int) (check.getPosX()[1] * largPremier);
			g.setColor(Color.BLUE);
			
			// on utilise pas la méthode tracer donc il faut inverser les y
			g.drawLine(
					deuxiemeG.x+decCheck[0],
					HAUT-deuxiemeG.y,
					deuxiemeD.x+decCheck[1],
					HAUT-deuxiemeD.y
			);
			
			g.setColor(Color.BLACK);
		}
		
		/* et enfin, on gère le cas du dernier point, &quot;coupé&quot; par l'horizon */
		Point d0g = piste[piste.length-2][0];	//avant dernier point de gauche
		Point d1g = piste[piste.length-1][0];	//dernier point de gauche
		
		Point d0d = piste[piste.length-2][1];	//avant dernier point de droite
		Point d1d = piste[piste.length-1][1];	//dernier point de droite 
		
		Point projDernierG = projection(calculXdepuisYdansSegment(d0g, d1g, HAUT-posHorizon) - posX, 0, HAUT-posHorizon);
		Point projDernierD = projection(calculXdepuisYdansSegment(d0d, d1d, HAUT-posHorizon) - posX, 0, HAUT-posHorizon);
		
		Point projAvDernierG = projection(d0g.x - posX, 0, d0g.y);
		Point projAvDernierD = projection(d0d.x - posX, 0, d0d.y);
		
		tracer(projAvDernierG, projDernierG, g);
		tracer(projAvDernierD, projDernierD, g);
		
		
		//affiche separation voie gauche
		g.setColor(Color.GRAY);
		largPiste1 = projAvDernierD.x - projAvDernierG.x;
		largPiste2 = projDernierD.x - projDernierG.x;
		g.drawLine(
				projAvDernierG.x+(largPiste1 / 3),
				HAUT-projAvDernierG.y,
				projDernierG.x+(largPiste2 / 3),
				HAUT-projDernierG.y
		);
		//affiche separation voie droite
		g.drawLine(
				projAvDernierD.x-(largPiste1 / 3),
				HAUT-projAvDernierD.y,
				projDernierD.x-(largPiste2 / 3),
				HAUT-projDernierD.y
		);
		g.setColor(Color.BLACK);
		
		
		// si il y a un checkpoint au dernier point (donc en haut), on le dessine
		if(indice == piste.length-2) {
			
			int largDernier = projAvDernierD.x - projAvDernierG.x;
			int[] decCheck = new int[2]; 
			decCheck[0] = (int) (check.getPosX()[0] * largDernier);
			decCheck[1] = (int) (check.getPosX()[1] * largDernier);
			g.setColor(Color.BLUE);
			// on utilise pas la méthode tracer donc il faut inverser les y
			g.drawLine(
					projAvDernierG.x+decCheck[0],
					HAUT-projAvDernierG.y,
					projAvDernierD.x+decCheck[1],
					HAUT-projAvDernierD.y
			);
			g.setColor(Color.BLACK);
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFk4R4obEeqevdMp57x66A" name="calculXdepuisYdansSegment" specification="_iA8P4IobEeqevdMp57x66A">
          <ownedParameter xmi:id="_iFk4SIobEeqevdMp57x66A" name="p1" type="_h-XdAIobEeqevdMp57x66A"/>
          <ownedParameter xmi:id="_iFk4SYobEeqevdMp57x66A" name="p2" type="_h-XdAIobEeqevdMp57x66A"/>
          <ownedParameter xmi:id="_iFk4SoobEeqevdMp57x66A" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iFk4S4obEeqevdMp57x66A" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>/* cas des segments horizontaux */
		if (p1.y==p2.y) // cela n'arrive pas avec l'horizon mais on ne sait jamais
			return -1;
		/* note: dans le cas particulier de l'intersection avec l'horizon, nous somme certains que ce
		 * cas ne se produira pas car les points p1 et p2 du modèle ont des y strictement croissants.
		 */
		return p1.x + ((y-p1.y)*(p2.x-p1.x))/(p2.y-p1.y);
		/* note : le parenthésage ci-dessus force la multiplication en premier */
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFlfUIobEeqevdMp57x66A" name="drawMontagne" specification="_iA-sIIobEeqevdMp57x66A">
          <ownedParameter xmi:id="_iFlfUYobEeqevdMp57x66A" name="g" type="_h-0I8IobEeqevdMp57x66A"/>
          <language>java</language>
          <body>ArrayList&lt;Point> points = etat.getMontagne();
		for(int i=0; i+1&lt;points.size(); i++) {
			Point p1 = points.get(i);
			Point p2 = points.get(i+1);
			g.drawLine(p1.x , p1.y, p2.x, p2.y);
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFlfUoobEeqevdMp57x66A" name="drawCaisse" specification="_iA_6QIobEeqevdMp57x66A">
          <ownedParameter xmi:id="_iFlfU4obEeqevdMp57x66A" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iFlfVIobEeqevdMp57x66A" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iFlfVYobEeqevdMp57x66A" name="width">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iFlfVoobEeqevdMp57x66A" name="height">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iFlfV4obEeqevdMp57x66A" name="g" type="_h_jIwIobEeqevdMp57x66A"/>
          <language>java</language>
          <body>g.setColor(new Color(140, 105, 4));
		g.fillRect(x,y,width,height);
		g.setColor(Color.BLACK);
		Stroke oldStroke = g.getStroke();
		g.setStroke(new BasicStroke(height/20, BasicStroke.CAP_BUTT, BasicStroke.JOIN_MITER));
		for(int i=y; i&lt;y+height; i+=height/5) {
			g.drawLine(x, i, x+width-1, i);
		}
		g.setStroke(oldStroke);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFlfWIobEeqevdMp57x66A" name="drawHole" specification="_iBBvcIobEeqevdMp57x66A">
          <ownedParameter xmi:id="_iFlfWYobEeqevdMp57x66A" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iFlfWoobEeqevdMp57x66A" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iFlfW4obEeqevdMp57x66A" name="width">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iFmGYIobEeqevdMp57x66A" name="height">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iFmGYYobEeqevdMp57x66A" name="g" type="_h-0I8IobEeqevdMp57x66A"/>
          <language>java</language>
          <body>g.setColor(Color.BLACK);
		g.fillOval(x,y,width,height/2);
		g.setColor(new Color(178,178,178));
		g.drawOval(x,y,width,height/2);
		g.setColor(Color.BLACK);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFmGYoobEeqevdMp57x66A" name="drawObstacles" specification="_iBDkoIobEeqevdMp57x66A">
          <ownedParameter xmi:id="_iFmGY4obEeqevdMp57x66A" name="g" type="_h_jIwIobEeqevdMp57x66A"/>
          <language>java</language>
          <body>ArrayList&lt;Obstacle> obstacles = etat.getObstacles();
		// on parcourt la liste des obstacles à l'envers pour afficher d'abord les obstacles le plus en haut de la fenetre
		for(int i=obstacles.size()-1; i>=0; i--) {
			Obstacle o = obstacles.get(i);
			Rectangle bounds = o.getBounds();
			
			if(o.isHole()) {
				if(bounds.y > posHorizon) {	
					drawHole(bounds.x, bounds.y, bounds.width, bounds.height, g);
				}
			}else {
				if(bounds.y +bounds.height > posHorizon) {
					drawCaisse(bounds.x, bounds.y, bounds.width, bounds.height, g);
				}
			}
			
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFmtcIobEeqevdMp57x66A" name="drawScore" specification="_iBELsIobEeqevdMp57x66A">
          <ownedParameter xmi:id="_iFmtcYobEeqevdMp57x66A" name="g" type="_h-0I8IobEeqevdMp57x66A"/>
          <language>java</language>
          <body>String strScore =&quot;Score : &quot;+ etat.getScore();
		   
		FontMetrics fm = getFontMetrics(g.getFont());
		int printedLength = fm.stringWidth(strScore) +10; // on ajoute 10 pour pas etre collé au bord
		g.drawString(strScore, LARG-printedLength, 20);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFpwwIobEeqevdMp57x66A" name="drawVitesse" specification="_iBFZ0IobEeqevdMp57x66A">
          <ownedParameter xmi:id="_iFpwwYobEeqevdMp57x66A" name="g" type="_h-0I8IobEeqevdMp57x66A"/>
          <language>java</language>
          <body>// on arrondit la vitesse à 2 chiffres après la virgule pour l'affichage
		float vitesse = (float)((int)(etat.getVitesse()*100))/100;
		String str = &quot;Vitesse : &quot;+vitesse;
		g.drawString(str, 10, 475);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFpwwoobEeqevdMp57x66A" name="drawAltitude" specification="_iBGn8IobEeqevdMp57x66A">
          <ownedParameter xmi:id="_iFpww4obEeqevdMp57x66A" name="g" type="_h-0I8IobEeqevdMp57x66A"/>
          <language>java</language>
          <body>String str = &quot;Altitude : &quot;+ etat.getPosVert()/10;
		g.drawString(str, 10, 520);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFpwxIobEeqevdMp57x66A" name="drawAccel" specification="_iBHPAIobEeqevdMp57x66A">
          <ownedParameter xmi:id="_iFpwxYobEeqevdMp57x66A" name="g" type="_h-0I8IobEeqevdMp57x66A"/>
          <language>java</language>
          <body>// on arrondit la vitesse à 2 chiffres après la virgule pour l'affichage
		float accel = (float)((int)(etat.getAccel()*100))/100;
		String str = &quot;Accélération : &quot;+accel+&quot; %&quot;;
		g.drawString(str, 10, 540);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFqX0IobEeqevdMp57x66A" name="retry" specification="_h1nwsIobEeqevdMp57x66A">
          <language>java</language>
          <body>this.moto = new VueMoto(etat);
		this.nuages = new VueNuages();
		this.check = etat.getCheck();
		this.clock = check.getClock();
		this.decors = new VueDecors(etat);
		this.ennemis = new VueEnnemis(etat);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFqX0YobEeqevdMp57x66A" name="paint" specification="_iBH2EIobEeqevdMp57x66A">
          <ownedParameter xmi:id="_iFqX0oobEeqevdMp57x66A" name="g" type="_h-0I8IobEeqevdMp57x66A"/>
          <language>java</language>
          <body>Graphics2D g2d = (Graphics2D) g;
		//nettoyage ecran
		super.paint(g);
		
		//dessine horizon
		drawHorizon(g);
		//affiche la vitesse
		drawVitesse(g);
		//affiche la piste
		drawPiste(g2d);
		//affiche le décor de montagne au dessus de l'horizon
		drawMontagne(g);
		//dessine obstacles
		drawObstacles(g2d);
		//dessine décors
		this.decors.drawDecors(g);
		//dessine ennemis
		ennemis.drawMotos(g);
		//dessine nuages
		this.nuages.dessiner(etat.getPosX(),g);
		//dessine moto
		this.moto.drawMoto(g);
		// affiche le timeout avant de perdre
		drawClock(g);
		//affichage score
		drawScore(g);
		// si on a perdu on affiche game over
		if(etat.getFin()) {
			drawEnd(g);
		}
		//affichage altitude
		drawAltitude(g);
		//affiche accélération
		drawAccel(g);
		
		//si on est en train de relancer une partie on réinitialise les nuages
		if(etat.getRetry()) {
			this.nuages.retry();
		}
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_h1f04IobEeqevdMp57x66A" name="projection" visibility="private" method="_iFk4QIobEeqevdMp57x66A">
          <ownedComment xmi:id="_iF8EpYobEeqevdMp57x66A">
            <body>Cette méthode calcule la projection sur l'écran (plan xOy) d'un point définir par ses coordonnées x,y,z.</body>
          </ownedComment>
          <ownedParameter xmi:id="_h1gb8IobEeqevdMp57x66A" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_h1gb8YobEeqevdMp57x66A" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_h1gb8oobEeqevdMp57x66A" name="z">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iA6asIobEeqevdMp57x66A" type="_h-XdAIobEeqevdMp57x66A" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_h1nwsIobEeqevdMp57x66A" name="retry" method="_iFqX0IobEeqevdMp57x66A"/>
        <ownedOperation xmi:id="_h_p2cIobEeqevdMp57x66A" name="Affichage" method="_iFgm0IobEeqevdMp57x66A">
          <eAnnotations xmi:id="_h_s5wYobEeqevdMp57x66A" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_h_s5woobEeqevdMp57x66A" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_iF8EoIobEeqevdMp57x66A">
            <body>Constructor
	 * @param etat</body>
          </ownedComment>
          <ownedParameter xmi:id="_h_s5wIobEeqevdMp57x66A" name="etat" type="_hytmoIobEeqevdMp57x66A"/>
          <ownedParameter xmi:id="_h_s5w4obEeqevdMp57x66A" type="_h1Vc0IobEeqevdMp57x66A" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_iA3XYIobEeqevdMp57x66A" name="drawEnd" method="_iFjqIIobEeqevdMp57x66A">
          <ownedComment xmi:id="_iF8EoYobEeqevdMp57x66A">
            <body>Affiche le message de fin de partie
	 * @param g</body>
          </ownedComment>
          <ownedParameter xmi:id="_iA3XYYobEeqevdMp57x66A" name="g" type="_h-0I8IobEeqevdMp57x66A"/>
        </ownedOperation>
        <ownedOperation xmi:id="_iA3-cIobEeqevdMp57x66A" name="drawClock" method="_iFkRMIobEeqevdMp57x66A">
          <ownedComment xmi:id="_iF8EooobEeqevdMp57x66A">
            <body>affiche le temps restant avant le game over
	 * @param g</body>
          </ownedComment>
          <ownedParameter xmi:id="_iA3-cYobEeqevdMp57x66A" name="g" type="_h-0I8IobEeqevdMp57x66A"/>
        </ownedOperation>
        <ownedOperation xmi:id="_iA4lgIobEeqevdMp57x66A" name="drawHorizon" visibility="private" method="_iFkRMoobEeqevdMp57x66A">
          <ownedComment xmi:id="_iF8Eo4obEeqevdMp57x66A">
            <body>affiche la ligne de l'horizon en haut de la fenetre
	 * @param g</body>
          </ownedComment>
          <ownedParameter xmi:id="_iA4lgYobEeqevdMp57x66A" name="g" type="_h-0I8IobEeqevdMp57x66A"/>
        </ownedOperation>
        <ownedOperation xmi:id="_iA5MkIobEeqevdMp57x66A" name="tracer" visibility="private" method="_iFkRNIobEeqevdMp57x66A">
          <ownedComment xmi:id="_iF8EpIobEeqevdMp57x66A">
            <body>trace le segment qui relie deux points</body>
          </ownedComment>
          <ownedParameter xmi:id="_iA5MkYobEeqevdMp57x66A" name="p1" type="_h-XdAIobEeqevdMp57x66A"/>
          <ownedParameter xmi:id="_iA5zoIobEeqevdMp57x66A" name="p2" type="_h-XdAIobEeqevdMp57x66A"/>
          <ownedParameter xmi:id="_iA5zoYobEeqevdMp57x66A" name="g" type="_h-0I8IobEeqevdMp57x66A"/>
        </ownedOperation>
        <ownedOperation xmi:id="_iA6asYobEeqevdMp57x66A" name="drawPiste" visibility="private" method="_iFk4RYobEeqevdMp57x66A">
          <ownedComment xmi:id="_iF8EpoobEeqevdMp57x66A">
            <body>Affiche la piste et les checkpoints
	 * @param g</body>
          </ownedComment>
          <ownedParameter xmi:id="_iA7BwIobEeqevdMp57x66A" name="g" type="_h_jIwIobEeqevdMp57x66A"/>
        </ownedOperation>
        <ownedOperation xmi:id="_iA8P4IobEeqevdMp57x66A" name="calculXdepuisYdansSegment" method="_iFk4R4obEeqevdMp57x66A">
          <ownedComment xmi:id="_iF8Ep4obEeqevdMp57x66A">
            <body>Une fonction pour calculer la position en x d'un point sur un segment [P1 P2] à partir de sa coordonnée en y.
	 * Ici, on ne s'en sert qu'une fois (pour &quot;couper&quot; le dernier segment à l'horizon) mais comme
	 * cela va être très utile dans les autres vues, autant l'écrire tout de suite !
	 * Dans le cas d'un segment horizontal, retourne -1.</body>
          </ownedComment>
          <ownedParameter xmi:id="_iA8P4YobEeqevdMp57x66A" name="p1" type="_h-XdAIobEeqevdMp57x66A"/>
          <ownedParameter xmi:id="_iA8P4oobEeqevdMp57x66A" name="p2" type="_h-XdAIobEeqevdMp57x66A"/>
          <ownedParameter xmi:id="_iA9eAIobEeqevdMp57x66A" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iA-FEIobEeqevdMp57x66A" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_iA-sIIobEeqevdMp57x66A" name="drawMontagne" visibility="private" method="_iFlfUIobEeqevdMp57x66A">
          <ownedComment xmi:id="_iF8EqIobEeqevdMp57x66A">
            <body>Affiche la Montagne au dessus de l'horizon
	 * @param g</body>
          </ownedComment>
          <ownedParameter xmi:id="_iA-sIYobEeqevdMp57x66A" name="g" type="_h-0I8IobEeqevdMp57x66A"/>
        </ownedOperation>
        <ownedOperation xmi:id="_iA_6QIobEeqevdMp57x66A" name="drawCaisse" visibility="private" method="_iFlfUoobEeqevdMp57x66A">
          <ownedParameter xmi:id="_iA_6QYobEeqevdMp57x66A" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iA_6QoobEeqevdMp57x66A" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iA_6Q4obEeqevdMp57x66A" name="width">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iA_6RIobEeqevdMp57x66A" name="height">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iBAhUIobEeqevdMp57x66A" name="g" type="_h_jIwIobEeqevdMp57x66A"/>
        </ownedOperation>
        <ownedOperation xmi:id="_iBBvcIobEeqevdMp57x66A" name="drawHole" visibility="private" method="_iFlfWIobEeqevdMp57x66A">
          <ownedParameter xmi:id="_iBBvcYobEeqevdMp57x66A" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iBCWgIobEeqevdMp57x66A" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iBC9kIobEeqevdMp57x66A" name="width">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iBC9kYobEeqevdMp57x66A" name="height">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iBC9koobEeqevdMp57x66A" name="g" type="_h-0I8IobEeqevdMp57x66A"/>
        </ownedOperation>
        <ownedOperation xmi:id="_iBDkoIobEeqevdMp57x66A" name="drawObstacles" visibility="private" method="_iFmGYoobEeqevdMp57x66A">
          <ownedComment xmi:id="_iF8rsIobEeqevdMp57x66A">
            <body>Affiche les obstacles sur la piste
	 * @param g</body>
          </ownedComment>
          <ownedParameter xmi:id="_iBDkoYobEeqevdMp57x66A" name="g" type="_h_jIwIobEeqevdMp57x66A"/>
        </ownedOperation>
        <ownedOperation xmi:id="_iBELsIobEeqevdMp57x66A" name="drawScore" visibility="private" method="_iFmtcIobEeqevdMp57x66A">
          <ownedComment xmi:id="_iF8rsYobEeqevdMp57x66A">
            <body>Affiche le score en haut à droite
	 * @param g</body>
          </ownedComment>
          <ownedParameter xmi:id="_iBELsYobEeqevdMp57x66A" name="g" type="_h-0I8IobEeqevdMp57x66A"/>
        </ownedOperation>
        <ownedOperation xmi:id="_iBFZ0IobEeqevdMp57x66A" name="drawVitesse" visibility="private" method="_iFpwwIobEeqevdMp57x66A">
          <ownedComment xmi:id="_iF8rsoobEeqevdMp57x66A">
            <body>affiche la vitesse du vehicule en fonction de sa position
	 * @param g</body>
          </ownedComment>
          <ownedParameter xmi:id="_iBFZ0YobEeqevdMp57x66A" name="g" type="_h-0I8IobEeqevdMp57x66A"/>
        </ownedOperation>
        <ownedOperation xmi:id="_iBGn8IobEeqevdMp57x66A" name="drawAltitude" visibility="private" method="_iFpwwoobEeqevdMp57x66A">
          <ownedComment xmi:id="_iF8rs4obEeqevdMp57x66A">
            <body>Affiche l'altitude de la moto sur la partie gauche de la fenêtre
	 * @param g</body>
          </ownedComment>
          <ownedParameter xmi:id="_iBGn8YobEeqevdMp57x66A" name="g" type="_h-0I8IobEeqevdMp57x66A"/>
        </ownedOperation>
        <ownedOperation xmi:id="_iBHPAIobEeqevdMp57x66A" name="drawAccel" visibility="private" method="_iFpwxIobEeqevdMp57x66A">
          <ownedComment xmi:id="_iF8rtIobEeqevdMp57x66A">
            <body>Affiche l'accélération
	 * @param g</body>
          </ownedComment>
          <ownedParameter xmi:id="_iBHPAYobEeqevdMp57x66A" name="g" type="_h-0I8IobEeqevdMp57x66A"/>
        </ownedOperation>
        <ownedOperation xmi:id="_iBH2EIobEeqevdMp57x66A" name="paint" method="_iFqX0YobEeqevdMp57x66A">
          <ownedParameter xmi:id="_iBIdIIobEeqevdMp57x66A" name="g" type="_h-0I8IobEeqevdMp57x66A"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_h2FqwIobEeqevdMp57x66A" name="VueDecors">
        <ownedAttribute xmi:id="_iEpEIIobEeqevdMp57x66A" name="probaDecor" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_iEqSQIobEeqevdMp57x66A" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iEq5UYobEeqevdMp57x66A" name="maxDecors" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_iEq5UoobEeqevdMp57x66A" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iErgYYobEeqevdMp57x66A" name="etat" visibility="private" type="_hytmoIobEeqevdMp57x66A" association="_iHYPEYobEeqevdMp57x66A"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFq-4IobEeqevdMp57x66A" name="VueDecors" specification="_h_2DsIobEeqevdMp57x66A">
          <ownedParameter xmi:id="_iFq-4YobEeqevdMp57x66A" name="etat" type="_hytmoIobEeqevdMp57x66A"/>
          <ownedParameter xmi:id="_iFq-4oobEeqevdMp57x66A" type="_h2FqwIobEeqevdMp57x66A" direction="return"/>
          <language>java</language>
          <body>this.etat = etat;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFrl8IobEeqevdMp57x66A" name="drawDecors" specification="_iBPx4IobEeqevdMp57x66A">
          <ownedParameter xmi:id="_iFrl8YobEeqevdMp57x66A" name="g" type="_h-0I8IobEeqevdMp57x66A"/>
          <language>java</language>
          <body>etat.updateDecors();
		for (Decor decor : etat.getDecors()) {
			Rectangle r = decor.getBounds();
			if(r.y + r.height > Affichage.posHorizon) {
				switch (decor.getType()) {
				case 0:
					drawArbre(r.x, r.y, r.width, r.height, g);
					break;
				case 1:
					drawRock(r.x, r.y, r.width, r.height, g);
					break;
				case 2:
					drawHouse(r.x, r.y, r.width, r.height, g);
					break;
				default:
					break;
				}
			}
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFsNAIobEeqevdMp57x66A" name="drawArbre" specification="_iBRAAIobEeqevdMp57x66A">
          <ownedParameter xmi:id="_iFsNAYobEeqevdMp57x66A" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iFsNAoobEeqevdMp57x66A" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iFsNA4obEeqevdMp57x66A" name="width">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iFsNBIobEeqevdMp57x66A" name="height">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iFsNBYobEeqevdMp57x66A" name="g" type="_h-0I8IobEeqevdMp57x66A"/>
          <language>java</language>
          <body>g.setColor(new Color(84, 64, 6));
		int largTronc = width/6; 
		g.fillRect(
				x+width/2-largTronc/2,
				y+height/2,
				largTronc,
				height/2
		);
		
		g.setColor(new Color(98, 172, 19));
		g.fillOval(x,y,width,height/2);
		g.setColor(Color.BLACK);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFs0EIobEeqevdMp57x66A" name="drawRock" specification="_iBSOIIobEeqevdMp57x66A">
          <ownedParameter xmi:id="_iFs0EYobEeqevdMp57x66A" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iFs0EoobEeqevdMp57x66A" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iFs0E4obEeqevdMp57x66A" name="width">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iFs0FIobEeqevdMp57x66A" name="height">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iFs0FYobEeqevdMp57x66A" name="g" type="_h-0I8IobEeqevdMp57x66A"/>
          <language>java</language>
          <body>g.setColor(new Color(175, 174, 174));
		g.fillOval(x,y,width,height);
		g.setColor(Color.BLACK);
		g.drawOval(x,y,width,height);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFtbIIobEeqevdMp57x66A" name="drawHouse" specification="_iBUDUIobEeqevdMp57x66A">
          <ownedParameter xmi:id="_iFtbIYobEeqevdMp57x66A" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iFtbIoobEeqevdMp57x66A" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iFtbI4obEeqevdMp57x66A" name="width">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iFtbJIobEeqevdMp57x66A" name="height">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iFtbJYobEeqevdMp57x66A" name="g" type="_h-0I8IobEeqevdMp57x66A"/>
          <language>java</language>
          <body>g.setColor(Color.BLACK);
		
		int hToit = height * 2/5; 
		int hMurs = height - hToit;
		
		g.setColor(Color.BLUE);
		g.fillPolygon(new int[] {x, x+width/2, x+width}, new int[] {y+hToit,y,y+hToit}, 3);
		
		g.setColor(Color.RED);
		g.fillRect(x,y+hToit,width,hMurs);
		
		int xPorte = width * 4/7;
		int hPorte = hMurs * 3/5; 
		int yPorte = hToit+(hMurs - hPorte);
		g.setColor(Color.YELLOW);
		g.fillRect(x+xPorte,y+yPorte,width/3,hPorte);
		g.setColor(Color.BLACK);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_h_2DsIobEeqevdMp57x66A" name="VueDecors" method="_iFq-4IobEeqevdMp57x66A">
          <eAnnotations xmi:id="_h_2qwIobEeqevdMp57x66A" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_h_2qwYobEeqevdMp57x66A" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_h_2DsYobEeqevdMp57x66A" name="etat" type="_hytmoIobEeqevdMp57x66A"/>
          <ownedParameter xmi:id="_h_2qwoobEeqevdMp57x66A" type="_h2FqwIobEeqevdMp57x66A" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_iBPx4IobEeqevdMp57x66A" name="drawDecors" method="_iFrl8IobEeqevdMp57x66A">
          <ownedParameter xmi:id="_iBPx4YobEeqevdMp57x66A" name="g" type="_h-0I8IobEeqevdMp57x66A"/>
        </ownedOperation>
        <ownedOperation xmi:id="_iBRAAIobEeqevdMp57x66A" name="drawArbre" visibility="private" method="_iFsNAIobEeqevdMp57x66A">
          <ownedParameter xmi:id="_iBRAAYobEeqevdMp57x66A" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iBRAAoobEeqevdMp57x66A" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iBRnEIobEeqevdMp57x66A" name="width">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iBRnEYobEeqevdMp57x66A" name="height">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iBRnEoobEeqevdMp57x66A" name="g" type="_h-0I8IobEeqevdMp57x66A"/>
        </ownedOperation>
        <ownedOperation xmi:id="_iBSOIIobEeqevdMp57x66A" name="drawRock" visibility="private" method="_iFs0EIobEeqevdMp57x66A">
          <ownedParameter xmi:id="_iBS1MIobEeqevdMp57x66A" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iBS1MYobEeqevdMp57x66A" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iBS1MoobEeqevdMp57x66A" name="width">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iBS1M4obEeqevdMp57x66A" name="height">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iBS1NIobEeqevdMp57x66A" name="g" type="_h-0I8IobEeqevdMp57x66A"/>
        </ownedOperation>
        <ownedOperation xmi:id="_iBUDUIobEeqevdMp57x66A" name="drawHouse" visibility="private" method="_iFtbIIobEeqevdMp57x66A">
          <ownedParameter xmi:id="_iBUDUYobEeqevdMp57x66A" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iBUDUoobEeqevdMp57x66A" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iBUDU4obEeqevdMp57x66A" name="width">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iBUDVIobEeqevdMp57x66A" name="height">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iBUqYIobEeqevdMp57x66A" name="g" type="_h-0I8IobEeqevdMp57x66A"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_h2QC0IobEeqevdMp57x66A" name="VueEnnemis">
        <ownedAttribute xmi:id="_iEsugIobEeqevdMp57x66A" name="PATH" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_iEsugYobEeqevdMp57x66A" value="&quot;imgs/ennemi&quot;"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iEtVkIobEeqevdMp57x66A" name="etat" visibility="private" type="_hytmoIobEeqevdMp57x66A" association="_iHY2IYobEeqevdMp57x66A"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFuCMIobEeqevdMp57x66A" name="VueEnnemis" specification="_h_4f8IobEeqevdMp57x66A">
          <ownedParameter xmi:id="_iFuCMYobEeqevdMp57x66A" name="etat" type="_hytmoIobEeqevdMp57x66A"/>
          <ownedParameter xmi:id="_iFuCMoobEeqevdMp57x66A" type="_h2QC0IobEeqevdMp57x66A" direction="return"/>
          <language>java</language>
          <body>this.etat = etat;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFuCM4obEeqevdMp57x66A" name="drawMotos" specification="_iBV4gIobEeqevdMp57x66A">
          <ownedParameter xmi:id="_iFuCNIobEeqevdMp57x66A" name="g" type="_h-0I8IobEeqevdMp57x66A"/>
          <language>java</language>
          <body>for (Ennemi ennemi : etat.getEnnemis()) {
			
			Rectangle bounds = ennemi.getBounds();
			//si la moto est en dessous de posHorizon
			if(bounds.y + bounds.height > Affichage.posHorizon) {
				// on affiche la moto selon si elle va tout droit, vers la droite ou la gauche
				String str = PATH+ennemi.getEtatMoto()+&quot;.png&quot;;
				try {
					Image image = ImageIO.read(VueEnnemis.class.getResource(str)); 
					image = image.getScaledInstance(bounds.width, bounds.height, Image.SCALE_SMOOTH);
					g.drawImage(image,bounds.x, bounds.y, null);
				}catch (IOException e) {
					e.printStackTrace();
				}
			}
		}
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_h_4f8IobEeqevdMp57x66A" name="VueEnnemis" method="_iFuCMIobEeqevdMp57x66A">
          <eAnnotations xmi:id="_h_5HAIobEeqevdMp57x66A" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_h_5HAYobEeqevdMp57x66A" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_h_4f8YobEeqevdMp57x66A" name="etat" type="_hytmoIobEeqevdMp57x66A"/>
          <ownedParameter xmi:id="_h_5HAoobEeqevdMp57x66A" type="_h2QC0IobEeqevdMp57x66A" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_iBV4gIobEeqevdMp57x66A" name="drawMotos" method="_iFuCM4obEeqevdMp57x66A">
          <ownedParameter xmi:id="_iBWfkIobEeqevdMp57x66A" name="g" type="_h-0I8IobEeqevdMp57x66A"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_h2TtMIobEeqevdMp57x66A" name="VueMoto">
        <ownedAttribute xmi:id="_iEtVkoobEeqevdMp57x66A" name="PATH" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_iEt8oIobEeqevdMp57x66A" value="&quot;imgs/&quot;"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iEujsIobEeqevdMp57x66A" name="decBord" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_iEvKwIobEeqevdMp57x66A" value="20"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iEvx0YobEeqevdMp57x66A" name="etat" visibility="private" type="_hytmoIobEeqevdMp57x66A" association="_iHZdMYobEeqevdMp57x66A"/>
        <ownedAttribute xmi:id="_iEw_8IobEeqevdMp57x66A" name="image" visibility="package" type="_h-fY0IobEeqevdMp57x66A" association="_iHarUYobEeqevdMp57x66A"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFupQIobEeqevdMp57x66A" name="VueMoto" specification="_h_6VIIobEeqevdMp57x66A">
          <ownedParameter xmi:id="_iFupQYobEeqevdMp57x66A" name="etat" type="_hytmoIobEeqevdMp57x66A"/>
          <ownedParameter xmi:id="_iFupQoobEeqevdMp57x66A" type="_h2TtMIobEeqevdMp57x66A" direction="return"/>
          <language>java</language>
          <body>this.etat = etat;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFupQ4obEeqevdMp57x66A" name="drawMoto" specification="_iBXtsIobEeqevdMp57x66A">
          <ownedParameter xmi:id="_iFupRIobEeqevdMp57x66A" name="g" type="_h-0I8IobEeqevdMp57x66A"/>
          <language>java</language>
          <body>// si on vole 
		if(etat.getPosVert()>0){
			
			// affiche ombre de la moto selon l'état de la moto (gauche, tout droit, droite)
			String str = PATH+&quot;ombre&quot;+etat.getEtatMoto()+&quot;.png&quot;;
			try {
				//image = ImageIO.read(new File(str));
				image = ImageIO.read(VueMoto.class.getResource(str));
				g.drawImage(image, Affichage.LARG/2, Affichage.HAUT-image.getHeight(null)-decBord , null);
			}catch (IOException e) {
				e.printStackTrace();
			}
			
			// affiche les ailes
			try {	 
				//image = ImageIO.read(new File(PATH+&quot;ailes.png&quot;));
				image = ImageIO.read(VueMoto.class.getResource(PATH+&quot;ailes.png&quot;));
				g.drawImage(image, Affichage.LARG/2, Affichage.HAUT-image.getHeight(null)-decBord - etat.getPosVert(), null);
			} catch (IOException e) {
				e.printStackTrace();
			}
			
			// et les flammes si on est en train de gagner de l'altitude
			if(!etat.getGoDown()) {
				try {	 
					//image = ImageIO.read(new File(PATH+&quot;flammes.png&quot;));
					image = ImageIO.read(VueMoto.class.getResource(PATH+&quot;flammes.png&quot;));
					g.drawImage(image, Affichage.LARG/2, Affichage.HAUT-image.getHeight(null)-decBord - etat.getPosVert(), null);
				} catch (IOException e) {
					e.printStackTrace();
				}
			}
		}
		
		// dans tout les cas, on affiche la moto selon si elle va tout droit, vers la droite ou la gauche
		String str = PATH+etat.getEtatMoto()+&quot;.png&quot;;
		try { 
			//image = ImageIO.read(new File(str)); 
			image = ImageIO.read(VueMoto.class.getResource(str));
			g.drawImage(image, Affichage.LARG/2, Affichage.HAUT-image.getHeight(null)-decBord - etat.getPosVert(), null);
		}catch (IOException e) {
			e.printStackTrace();
		}
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_h_6VIIobEeqevdMp57x66A" name="VueMoto" method="_iFupQIobEeqevdMp57x66A">
          <eAnnotations xmi:id="_h_7jQIobEeqevdMp57x66A" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_h_7jQYobEeqevdMp57x66A" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_h_68MIobEeqevdMp57x66A" name="etat" type="_hytmoIobEeqevdMp57x66A"/>
          <ownedParameter xmi:id="_h_7jQoobEeqevdMp57x66A" type="_h2TtMIobEeqevdMp57x66A" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_iBXtsIobEeqevdMp57x66A" name="drawMoto" method="_iFupQ4obEeqevdMp57x66A">
          <ownedComment xmi:id="_iF8rtYobEeqevdMp57x66A">
            <body>Affiche la moto à sa ({@link Etat#posX position})
	 * et suivant son {@link Etat#etatMoto état}
	 * @param g</body>
          </ownedComment>
          <ownedParameter xmi:id="_iBXtsYobEeqevdMp57x66A" name="g" type="_h-0I8IobEeqevdMp57x66A"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_h2bpAIobEeqevdMp57x66A" name="VueNuages">
        <ownedAttribute xmi:id="_iExnAIobEeqevdMp57x66A" name="PATH" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_iExnAYobEeqevdMp57x66A" value="&quot;imgs/cloud.png&quot;"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iEyOEYobEeqevdMp57x66A" name="MaxNuages" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_iEyOEoobEeqevdMp57x66A" value="3"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iEy1IYobEeqevdMp57x66A" name="probaNuage" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_iEy1IoobEeqevdMp57x66A" value="10"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_iEzcMYobEeqevdMp57x66A" name="list" visibility="private" type="_h-1XEIobEeqevdMp57x66A" association="_iHb5cYobEeqevdMp57x66A"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFv3YIobEeqevdMp57x66A" name="VueNuages" specification="_h2i9wIobEeqevdMp57x66A">
          <ownedParameter xmi:id="_iFv3YYobEeqevdMp57x66A" type="_h2bpAIobEeqevdMp57x66A" direction="return"/>
          <language>java</language>
          <body>this.list = new ArrayList&lt;Nuage>();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFv3YoobEeqevdMp57x66A" name="dessiner" specification="_iBY70IobEeqevdMp57x66A">
          <ownedParameter xmi:id="_iFv3Y4obEeqevdMp57x66A" name="posX">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iFv3ZIobEeqevdMp57x66A" name="g" type="_h-0I8IobEeqevdMp57x66A"/>
          <language>java</language>
          <body>//générer nuages 
		this.genererNuages();
		
		for(int i = 0; i &lt; this.list.size(); i++){
			Nuage nuage = this.list.get(i);
			
			// suppression nuages qui sortent de la vue
			if(nuage.getPosX() &lt; posX-nuage.getWidth())nuage.terminate();
			
			//si le nuage s'est arreté, on le retire de la liste  
			if(!nuage.isRunning()) {
				this.list.remove(nuage);
			}
			
			try {
				
				Image image = ImageIO.read(VueMoto.class.getResource(PATH)).getScaledInstance(nuage.getWidth(), nuage.getHeight(), 100);
				g.drawImage(image,  nuage.getPosX() - posX, nuage.getPosY(), null);	
			}
				catch (IOException e) {
				e.printStackTrace();	 
			}

		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFwecIobEeqevdMp57x66A" name="genererNuages" specification="_h2kL4IobEeqevdMp57x66A">
          <language>java</language>
          <body>//on génére des nuages seulement si on a pas dépassé la taille max
		//et que le dernier nuage généré est entièrement visible à l'écran (pour éviter les attroupements de nuages)
		if(this.list.size() &lt; MaxNuages &amp;&amp; (list.size() == 0 || list.get(list.size()-1).getPosX() + list.get(list.size()-1).getWidth() &lt; Affichage.LARG)){
			//on génère un oiseau si on tombe sur 1 
			if(randint(1,probaNuage) == 1 ) {
				//System.out.println(&quot;gen cloud &quot;+list.size());
				Nuage nuage = new Nuage();
				(new Thread(nuage)).start();
				this.list.add(nuage);
			}
		}	
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFwecYobEeqevdMp57x66A" name="retry" specification="_h2ky8IobEeqevdMp57x66A">
          <language>java</language>
          <body>for(Nuage nuage : this.list) {
			nuage.terminate();
		}
		this.list = new ArrayList&lt;Nuage>();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFwecoobEeqevdMp57x66A" name="randint" specification="_h2ky8YobEeqevdMp57x66A">
          <ownedParameter xmi:id="_iFwec4obEeqevdMp57x66A" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iFwedIobEeqevdMp57x66A" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iFwedYobEeqevdMp57x66A" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return ThreadLocalRandom.current().nextInt(min, max + 1);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_h2i9wIobEeqevdMp57x66A" name="VueNuages" method="_iFv3YIobEeqevdMp57x66A">
          <eAnnotations xmi:id="_h2jk0IobEeqevdMp57x66A" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_h2jk0YobEeqevdMp57x66A" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_iF8rtoobEeqevdMp57x66A">
            <body>initialise la {@link #list liste d'oiseaux}</body>
          </ownedComment>
          <ownedParameter xmi:id="_h2jk0oobEeqevdMp57x66A" type="_h2bpAIobEeqevdMp57x66A" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_h2kL4IobEeqevdMp57x66A" name="genererNuages" visibility="package" method="_iFwecIobEeqevdMp57x66A">
          <ownedComment xmi:id="_iF9SwIobEeqevdMp57x66A">
            <body>à chaque rafraichissement de l'affichage on génère un oiseau avec 1 chance sur 10 000 si on a pas dépassé le {@link #MaxOiseaux maximum d'oiseaux}</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_h2ky8IobEeqevdMp57x66A" name="retry" method="_iFwecYobEeqevdMp57x66A">
          <ownedComment xmi:id="_iF9SwYobEeqevdMp57x66A">
            <body>réinitialise tout les nuages (appelé quand on recommance une partie)</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_h2ky8YobEeqevdMp57x66A" name="randint" method="_iFwecoobEeqevdMp57x66A">
          <ownedComment xmi:id="_iF9SwoobEeqevdMp57x66A">
            <body>Génère un chiffre aléatoire entre min et max
	 * @param min
	 * @param max
	 * @return random int between min and max</body>
          </ownedComment>
          <ownedParameter xmi:id="_h2laAIobEeqevdMp57x66A" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_h2laAYobEeqevdMp57x66A" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_h2mBEIobEeqevdMp57x66A" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_iBY70IobEeqevdMp57x66A" name="dessiner" visibility="package" method="_iFv3YoobEeqevdMp57x66A">
          <ownedComment xmi:id="_iF8rt4obEeqevdMp57x66A">
            <body>dessine les oiseaux qui sont dans la fenetre, supprime ceux qui sont terminés
	 * @param g</body>
          </ownedComment>
          <ownedParameter xmi:id="_iBaJ8IobEeqevdMp57x66A" name="posX">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_iBaJ8YobEeqevdMp57x66A" name="g" type="_h-0I8IobEeqevdMp57x66A"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_iHN3AYobEeqevdMp57x66A" name="" memberEnd="_iHN3AoobEeqevdMp57x66A _iDw6YYobEeqevdMp57x66A">
        <ownedEnd xmi:id="_iHN3AoobEeqevdMp57x66A" name="" type="_h1Vc0IobEeqevdMp57x66A" association="_iHN3AYobEeqevdMp57x66A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_iHPFIYobEeqevdMp57x66A" name="" memberEnd="_iHPFIoobEeqevdMp57x66A _iDyIgIobEeqevdMp57x66A">
        <ownedEnd xmi:id="_iHPFIoobEeqevdMp57x66A" name="" type="_h1Vc0IobEeqevdMp57x66A" association="_iHPFIYobEeqevdMp57x66A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_iHQ6UYobEeqevdMp57x66A" name="" memberEnd="_iHQ6UoobEeqevdMp57x66A _iDz9sIobEeqevdMp57x66A">
        <ownedEnd xmi:id="_iHQ6UoobEeqevdMp57x66A" name="" type="_h1Vc0IobEeqevdMp57x66A" association="_iHQ6UYobEeqevdMp57x66A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_iHSIcYobEeqevdMp57x66A" name="" memberEnd="_iHSIcoobEeqevdMp57x66A _iD0kwIobEeqevdMp57x66A">
        <ownedEnd xmi:id="_iHSIcoobEeqevdMp57x66A" name="" type="_h1Vc0IobEeqevdMp57x66A" association="_iHSIcYobEeqevdMp57x66A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_iHVLwYobEeqevdMp57x66A" name="" memberEnd="_iHVLwoobEeqevdMp57x66A _iD1L0IobEeqevdMp57x66A">
        <ownedEnd xmi:id="_iHVLwoobEeqevdMp57x66A" name="" type="_h1Vc0IobEeqevdMp57x66A" association="_iHVLwYobEeqevdMp57x66A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_iHVy0YobEeqevdMp57x66A" name="" memberEnd="_iHVy0oobEeqevdMp57x66A _iEjkkYobEeqevdMp57x66A">
        <ownedEnd xmi:id="_iHVy0oobEeqevdMp57x66A" name="" type="_h1Vc0IobEeqevdMp57x66A" association="_iHVy0YobEeqevdMp57x66A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_iHXA8YobEeqevdMp57x66A" name="" memberEnd="_iHXA8oobEeqevdMp57x66A _iEkLoYobEeqevdMp57x66A">
        <ownedEnd xmi:id="_iHXA8oobEeqevdMp57x66A" name="" type="_h1Vc0IobEeqevdMp57x66A" association="_iHXA8YobEeqevdMp57x66A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_iHYPEYobEeqevdMp57x66A" name="" memberEnd="_iHYPEoobEeqevdMp57x66A _iErgYYobEeqevdMp57x66A">
        <ownedEnd xmi:id="_iHYPEoobEeqevdMp57x66A" name="" type="_h2FqwIobEeqevdMp57x66A" association="_iHYPEYobEeqevdMp57x66A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_iHY2IYobEeqevdMp57x66A" name="" memberEnd="_iHY2IoobEeqevdMp57x66A _iEtVkIobEeqevdMp57x66A">
        <ownedEnd xmi:id="_iHY2IoobEeqevdMp57x66A" name="" type="_h2QC0IobEeqevdMp57x66A" association="_iHY2IYobEeqevdMp57x66A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_iHZdMYobEeqevdMp57x66A" name="" memberEnd="_iHZdMoobEeqevdMp57x66A _iEvx0YobEeqevdMp57x66A">
        <ownedEnd xmi:id="_iHZdMoobEeqevdMp57x66A" name="" type="_h2TtMIobEeqevdMp57x66A" association="_iHZdMYobEeqevdMp57x66A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_iHarUYobEeqevdMp57x66A" name="" memberEnd="_iHarUoobEeqevdMp57x66A _iEw_8IobEeqevdMp57x66A">
        <ownedEnd xmi:id="_iHarUoobEeqevdMp57x66A" name="" type="_h2TtMIobEeqevdMp57x66A" association="_iHarUYobEeqevdMp57x66A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_iHb5cYobEeqevdMp57x66A" name="" memberEnd="_iHb5coobEeqevdMp57x66A _iEzcMYobEeqevdMp57x66A">
        <ownedEnd xmi:id="_iHb5coobEeqevdMp57x66A" name="" type="_h2bpAIobEeqevdMp57x66A" association="_iHb5cYobEeqevdMp57x66A"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_hohv4IobEeqevdMp57x66A" name="javax">
      <packagedElement xmi:type="uml:Package" xmi:id="_hokMIIobEeqevdMp57x66A" name="swing">
        <packagedElement xmi:type="uml:Class" xmi:id="_h-HlYIobEeqevdMp57x66A" name="JFrame"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_h_naMIobEeqevdMp57x66A" name="JPanel"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_iAe84IobEeqevdMp57x66A" name="Timer"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_hpUaEIobEeqevdMp57x66A" name="imageio">
        <packagedElement xmi:type="uml:Class" xmi:id="_h-pJ0IobEeqevdMp57x66A" name="ImageIO"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_hon2gIobEeqevdMp57x66A" name="main">
      <packagedElement xmi:type="uml:Class" xmi:id="_hwnU4IobEeqevdMp57x66A" name="Main">
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_iFIzYIobEeqevdMp57x66A" name="main" specification="_hwvQsIobEeqevdMp57x66A">
          <ownedParameter xmi:id="_iFIzYYobEeqevdMp57x66A" name="args">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_iFIzYoobEeqevdMp57x66A" value="*"/>
          </ownedParameter>
          <language>java</language>
          <body>//Initialisation modèle et Vue
			Etat mod = new Etat();
			Affichage aff = new Affichage(mod);
			//Initialisation Listener pour les touches clavier
			Keys kl = new Keys(mod);
			
			//on passe les threads à Etat dans un tableau (pour que Etat puisse les stopper) 
			StoppableThread[] threads = { 
				new RepaintScreen(aff),
				new Avancer(mod),
				new Vitesse(mod)
			};
			mod.setThreads(threads);
			
			
			/* Création JFrame*/
			JFrame fenetre = new JFrame(&quot;&quot;);
			/* ajout de l'Affichage(JPanel) à la fenêtre (JFrame)*/
			fenetre.add(aff);
			fenetre.pack();
			fenetre.setVisible(true);
			// on ajoute le keyListener qui attend les appuis clavier du joueur
			fenetre.addKeyListener(kl);
			fenetre.setFocusable(true);
			fenetre.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_hwvQsIobEeqevdMp57x66A" name="main" isStatic="true" method="_iFIzYIobEeqevdMp57x66A">
          <ownedParameter xmi:id="_hwv3wIobEeqevdMp57x66A" name="args">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_hwwe0IobEeqevdMp57x66A" value="*"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
    </packagedElement>
    <profileApplication xmi:id="_fukkoIobEeqevdMp57x66A">
      <eAnnotations xmi:id="_fukkoYobEeqevdMp57x66A" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile"/>
    </profileApplication>
  </uml:Model>
  <UMLLabProfile:TargetLanguage xmi:id="_fulLsIobEeqevdMp57x66A" base_Package="_er18UIobEeqevdMp57x66A">
    <languageName>java</languageName>
  </UMLLabProfile:TargetLanguage>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ht5YEIobEeqevdMp57x66A" base_Element="_ht270IobEeqevdMp57x66A"/>
  <UMLLabProfile:Annotations xmi:id="_hvFq4IobEeqevdMp57x66A" base_Element="_ht270IobEeqevdMp57x66A">
    <annotations xmi:id="_hvFq4YobEeqevdMp57x66A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hvt9AIobEeqevdMp57x66A" base_Element="_hvtV8IobEeqevdMp57x66A"/>
  <UMLLabProfile:Annotations xmi:id="_hvukEIobEeqevdMp57x66A" base_Element="_hvtV8IobEeqevdMp57x66A">
    <annotations xmi:id="_hvukEYobEeqevdMp57x66A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hwDUMIobEeqevdMp57x66A" base_Element="_hwCtIIobEeqevdMp57x66A"/>
  <UMLLabProfile:Annotations xmi:id="_hwHloIobEeqevdMp57x66A" base_Element="_hwCtIIobEeqevdMp57x66A">
    <annotations xmi:id="_hwIMsIobEeqevdMp57x66A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hweyAIobEeqevdMp57x66A" base_Element="_hweK8IobEeqevdMp57x66A"/>
  <UMLLabProfile:Annotations xmi:id="_hwfZEIobEeqevdMp57x66A" base_Element="_hweK8IobEeqevdMp57x66A">
    <annotations xmi:id="_hwfZEYobEeqevdMp57x66A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_hxEA0YobEeqevdMp57x66A" base_Element="_hxDZwIobEeqevdMp57x66A"/>
  <UMLLabProfile:Generics xmi:id="_hzqB0IobEeqevdMp57x66A" genericsValue="Point" base_Element="_hzj7MIobEeqevdMp57x66A"/>
  <UMLLabProfile:Generics xmi:id="_hzseEIobEeqevdMp57x66A" genericsValue="Obstacle" base_Element="_hzqo4IobEeqevdMp57x66A"/>
  <UMLLabProfile:Generics xmi:id="_h0g9cIobEeqevdMp57x66A" genericsValue="Point" base_Element="_h0fvUIobEeqevdMp57x66A"/>
  <UMLLabProfile:Array xmi:id="_h1E-IIobEeqevdMp57x66A" dimensions="2" base_Element="_h1EXEIobEeqevdMp57x66A"/>
  <UMLLabProfile:Reference xmi:id="_h9tVsIobEeqevdMp57x66A" base_Element="_h9sHkIobEeqevdMp57x66A"/>
  <UMLLabProfile:Reference xmi:id="_h9xnIIobEeqevdMp57x66A" base_Element="_h9t8wIobEeqevdMp57x66A"/>
  <UMLLabProfile:Reference xmi:id="_h96KAIobEeqevdMp57x66A" base_Element="_h91RgIobEeqevdMp57x66A"/>
  <UMLLabProfile:Reference xmi:id="_h-KosIobEeqevdMp57x66A" base_Element="_h-HlYIobEeqevdMp57x66A"/>
  <UMLLabProfile:Reference xmi:id="_h-TLkIobEeqevdMp57x66A" base_Element="_h-QIQIobEeqevdMp57x66A"/>
  <UMLLabProfile:Reference xmi:id="_h-VAwIobEeqevdMp57x66A" base_Element="_h-TyoIobEeqevdMp57x66A"/>
  <UMLLabProfile:Reference xmi:id="_h-agUIobEeqevdMp57x66A" base_Element="_h-XdAIobEeqevdMp57x66A"/>
  <UMLLabProfile:Reference xmi:id="_h-bucIobEeqevdMp57x66A" base_Element="_h-agUYobEeqevdMp57x66A"/>
  <UMLLabProfile:Reference xmi:id="_h-icIIobEeqevdMp57x66A" base_Element="_h-fY0IobEeqevdMp57x66A"/>
  <UMLLabProfile:Reference xmi:id="_h-lfcIobEeqevdMp57x66A" base_Element="_h-jDMIobEeqevdMp57x66A"/>
  <UMLLabProfile:Reference xmi:id="_h-n7sIobEeqevdMp57x66A" base_Element="_h-lfcYobEeqevdMp57x66A"/>
  <UMLLabProfile:Reference xmi:id="_h-s0MIobEeqevdMp57x66A" base_Element="_h-pJ0IobEeqevdMp57x66A"/>
  <UMLLabProfile:Reference xmi:id="_h-0wAIobEeqevdMp57x66A" base_Element="_h-0I8IobEeqevdMp57x66A"/>
  <UMLLabProfile:Reference xmi:id="_h-1-IIobEeqevdMp57x66A" base_Element="_h-1XEIobEeqevdMp57x66A"/>
  <UMLLabProfile:Array xmi:id="_h-958YobEeqevdMp57x66A" dimensions="1" base_Element="_h-9S4YobEeqevdMp57x66A"/>
  <UMLLabProfile:Reference xmi:id="_h_YwsIobEeqevdMp57x66A" base_Element="_h_W7gIobEeqevdMp57x66A"/>
  <UMLLabProfile:Reference xmi:id="_h_Z-0IobEeqevdMp57x66A" base_Element="_h_YwsYobEeqevdMp57x66A"/>
  <UMLLabProfile:Reference xmi:id="_h_dpMIobEeqevdMp57x66A" base_Element="_h_Z-0YobEeqevdMp57x66A"/>
  <UMLLabProfile:Reference xmi:id="_h_eQQIobEeqevdMp57x66A" base_Element="_h_dpMYobEeqevdMp57x66A"/>
  <UMLLabProfile:Reference xmi:id="_h_ihsIobEeqevdMp57x66A" base_Element="_h_e3UIobEeqevdMp57x66A"/>
  <UMLLabProfile:Reference xmi:id="_h_k98IobEeqevdMp57x66A" base_Element="_h_jIwIobEeqevdMp57x66A"/>
  <UMLLabProfile:Reference xmi:id="_h_mzIIobEeqevdMp57x66A" base_Element="_h_k98YobEeqevdMp57x66A"/>
  <UMLLabProfile:Reference xmi:id="_h_ooUIobEeqevdMp57x66A" base_Element="_h_naMIobEeqevdMp57x66A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iASIkIobEeqevdMp57x66A" base_Element="_iAQTYIobEeqevdMp57x66A"/>
  <UMLLabProfile:Annotations xmi:id="_iASvoIobEeqevdMp57x66A" base_Element="_iAQTYIobEeqevdMp57x66A">
    <annotations xmi:id="_iATWsIobEeqevdMp57x66A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iAT9wIobEeqevdMp57x66A" base_Element="_iATWsYobEeqevdMp57x66A"/>
  <UMLLabProfile:Annotations xmi:id="_iAUk0IobEeqevdMp57x66A" base_Element="_iATWsYobEeqevdMp57x66A">
    <annotations xmi:id="_iAUk0YobEeqevdMp57x66A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iAVy8IobEeqevdMp57x66A" base_Element="_iAVL4IobEeqevdMp57x66A"/>
  <UMLLabProfile:Annotations xmi:id="_iAWaAIobEeqevdMp57x66A" base_Element="_iAVL4IobEeqevdMp57x66A">
    <annotations xmi:id="_iAXBEIobEeqevdMp57x66A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_iAZdUIobEeqevdMp57x66A" base_Element="_iAYPMYobEeqevdMp57x66A"/>
  <UMLLabProfile:Reference xmi:id="_iAgyEIobEeqevdMp57x66A" base_Element="_iAe84IobEeqevdMp57x66A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iBJEMIobEeqevdMp57x66A" base_Element="_iBH2EIobEeqevdMp57x66A"/>
  <UMLLabProfile:Annotations xmi:id="_iBKSUIobEeqevdMp57x66A" base_Element="_iBH2EIobEeqevdMp57x66A">
    <annotations xmi:id="_iBKSUYobEeqevdMp57x66A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iBmXMIobEeqevdMp57x66A" base_Element="_iBlJEIobEeqevdMp57x66A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iBnlUIobEeqevdMp57x66A" base_Element="_iBm-QIobEeqevdMp57x66A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iBoMYIobEeqevdMp57x66A" base_Element="_iBnlUYobEeqevdMp57x66A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iBsd0IobEeqevdMp57x66A" base_Element="_iBqBkIobEeqevdMp57x66A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iBtr8IobEeqevdMp57x66A" base_Element="_iBtE4IobEeqevdMp57x66A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iBxWUYobEeqevdMp57x66A" base_Element="_iBwvQIobEeqevdMp57x66A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iBx9YYobEeqevdMp57x66A" base_Element="_iBx9YIobEeqevdMp57x66A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iBzLgIobEeqevdMp57x66A" base_Element="_iBykcIobEeqevdMp57x66A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iB0ZoIobEeqevdMp57x66A" base_Element="_iBzLgYobEeqevdMp57x66A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iB1AsIobEeqevdMp57x66A" base_Element="_iB0ZoYobEeqevdMp57x66A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iB1nwIobEeqevdMp57x66A" base_Element="_iB1AsYobEeqevdMp57x66A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iB214IobEeqevdMp57x66A" base_Element="_iB1nwYobEeqevdMp57x66A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iB4EAIobEeqevdMp57x66A" base_Element="_iB214YobEeqevdMp57x66A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iB5SIYobEeqevdMp57x66A" base_Element="_iB4rEIobEeqevdMp57x66A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iB8VcIobEeqevdMp57x66A" base_Element="_iB7HUIobEeqevdMp57x66A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iB-KoYobEeqevdMp57x66A" base_Element="_iB-KoIobEeqevdMp57x66A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iB__0IobEeqevdMp57x66A" base_Element="_iB_YwIobEeqevdMp57x66A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iCCcEIobEeqevdMp57x66A" base_Element="_iCAm4IobEeqevdMp57x66A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iCDqMIobEeqevdMp57x66A" base_Element="_iCCcEYobEeqevdMp57x66A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iCERQIobEeqevdMp57x66A" base_Element="_iCDqMYobEeqevdMp57x66A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iCE4UIobEeqevdMp57x66A" base_Element="_iCERQYobEeqevdMp57x66A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iCGtgIobEeqevdMp57x66A" base_Element="_iCFfYIobEeqevdMp57x66A">
    <associatedElement xmi:type="uml:Operation" xmi:id="_iCIisIobEeqevdMp57x66A" name="getY" visibility="private" method="_iFMdwIobEeqevdMp57x66A">
      <ownedParameter xmi:id="_iCIisYobEeqevdMp57x66A" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iCJw0IobEeqevdMp57x66A" base_Element="_iCJJwIobEeqevdMp57x66A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iCK-8IobEeqevdMp57x66A" base_Element="_iCJw0YobEeqevdMp57x66A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iCLmAIobEeqevdMp57x66A" base_Element="_iCK-8YobEeqevdMp57x66A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iCOCQIobEeqevdMp57x66A" base_Element="_iCNbMIobEeqevdMp57x66A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iCPQYIobEeqevdMp57x66A" base_Element="_iCOpUIobEeqevdMp57x66A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iCTh0YobEeqevdMp57x66A" base_Element="_iCS6wIobEeqevdMp57x66A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iCVXAIobEeqevdMp57x66A" base_Element="_iCUI4IobEeqevdMp57x66A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iCV-EIobEeqevdMp57x66A" base_Element="_iCVXAYobEeqevdMp57x66A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iCXMMIobEeqevdMp57x66A" base_Element="_iCV-EYobEeqevdMp57x66A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iCYaUIobEeqevdMp57x66A" base_Element="_iCXMMYobEeqevdMp57x66A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iCZBYIobEeqevdMp57x66A" base_Element="_iCYaUYobEeqevdMp57x66A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iCZocIobEeqevdMp57x66A" base_Element="_iCZBYYobEeqevdMp57x66A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iCbdoYobEeqevdMp57x66A" base_Element="_iCa2kIobEeqevdMp57x66A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iCcrwIobEeqevdMp57x66A" base_Element="_iCcEsIobEeqevdMp57x66A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iCd54YobEeqevdMp57x66A" base_Element="_iCcrwYobEeqevdMp57x66A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iChkQIobEeqevdMp57x66A" base_Element="_iCeg8IobEeqevdMp57x66A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iCjZcIobEeqevdMp57x66A" base_Element="_iCiLUIobEeqevdMp57x66A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iCkAgIobEeqevdMp57x66A" base_Element="_iCjZcYobEeqevdMp57x66A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iCnD0IobEeqevdMp57x66A" base_Element="_iCknkIobEeqevdMp57x66A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iCoR8IobEeqevdMp57x66A" base_Element="_iCnq4IobEeqevdMp57x66A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iCpgEIobEeqevdMp57x66A" base_Element="_iCo5AIobEeqevdMp57x66A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iCrVQIobEeqevdMp57x66A" base_Element="_iCpgEYobEeqevdMp57x66A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iCtKcIobEeqevdMp57x66A" base_Element="_iCr8UIobEeqevdMp57x66A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iCuYkIobEeqevdMp57x66A" base_Element="_iCtxgIobEeqevdMp57x66A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iCvmsIobEeqevdMp57x66A" base_Element="_iCuYkYobEeqevdMp57x66A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iCw00IobEeqevdMp57x66A" base_Element="_iCwNwIobEeqevdMp57x66A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iCyC8IobEeqevdMp57x66A" base_Element="_iCw00YobEeqevdMp57x66A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iCyqAYobEeqevdMp57x66A" base_Element="_iCyC8YobEeqevdMp57x66A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iC1tUIobEeqevdMp57x66A" base_Element="_iC0fMIobEeqevdMp57x66A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iC27cIobEeqevdMp57x66A" base_Element="_iC2UYIobEeqevdMp57x66A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iC3igIobEeqevdMp57x66A" base_Element="_iC27cYobEeqevdMp57x66A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iC4JkIobEeqevdMp57x66A" base_Element="_iC3igYobEeqevdMp57x66A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iC4woYobEeqevdMp57x66A" base_Element="_iC4woIobEeqevdMp57x66A">
    <associatedElement xmi:type="uml:Operation" xmi:id="_iC7M4IobEeqevdMp57x66A" name="getGoDown" method="_iFQvMIobEeqevdMp57x66A">
      <ownedParameter xmi:id="_iC7M4YobEeqevdMp57x66A" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iC7z8YobEeqevdMp57x66A" base_Element="_iC7z8IobEeqevdMp57x66A">
    <associatedElement xmi:type="uml:Operation" xmi:id="_iC8bAIobEeqevdMp57x66A" name="getAccel" method="_iFRWQIobEeqevdMp57x66A">
      <ownedParameter xmi:id="_iC9CEIobEeqevdMp57x66A" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iC-QMIobEeqevdMp57x66A" base_Element="_iC9pIIobEeqevdMp57x66A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iC-3QIobEeqevdMp57x66A" base_Element="_iC-QMYobEeqevdMp57x66A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iDBTgIobEeqevdMp57x66A" base_Element="_iC_eUIobEeqevdMp57x66A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iDB6kYobEeqevdMp57x66A" base_Element="_iDB6kIobEeqevdMp57x66A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iDChoYobEeqevdMp57x66A" base_Element="_iDChoIobEeqevdMp57x66A">
    <associatedElement xmi:type="uml:Operation" xmi:id="_iDDIsIobEeqevdMp57x66A" name="getScore" method="_iFRWQoobEeqevdMp57x66A">
      <ownedParameter xmi:id="_iDDvwIobEeqevdMp57x66A" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:Array xmi:id="_iDEW0IobEeqevdMp57x66A" base_Element="_iDDvwYobEeqevdMp57x66A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iDEW0YobEeqevdMp57x66A" base_Element="_iDDvwYobEeqevdMp57x66A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iDFk8IobEeqevdMp57x66A" base_Element="_iDE94IobEeqevdMp57x66A"/>
  <UMLLabProfile:Generics xmi:id="_iDGzEIobEeqevdMp57x66A" genericsValue="Decor" base_Element="_iDGMAIobEeqevdMp57x66A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iDIBMIobEeqevdMp57x66A" base_Element="_iDHaIIobEeqevdMp57x66A">
    <associatedElement xmi:type="uml:Operation" xmi:id="_iDIoQYobEeqevdMp57x66A" name="getEnnemis" method="_iFRWRIobEeqevdMp57x66A">
      <ownedParameter xmi:id="_iDLEgYobEeqevdMp57x66A" type="_h-1XEIobEeqevdMp57x66A" direction="return"/>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:Generics xmi:id="_iDIoQIobEeqevdMp57x66A" genericsValue="Ennemi" base_Element="_iDHaIIobEeqevdMp57x66A"/>
  <UMLLabProfile:Generics xmi:id="_iDLEgIobEeqevdMp57x66A" genericsValue="Ennemi" base_Element="_iDIoQYobEeqevdMp57x66A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iDMSoIobEeqevdMp57x66A" base_Element="_iDLrkIobEeqevdMp57x66A">
    <associatedElement xmi:type="uml:Operation" xmi:id="_iDMSoYobEeqevdMp57x66A" name="getPiste" method="_iFR9UIobEeqevdMp57x66A">
      <ownedParameter xmi:id="_iDM5sIobEeqevdMp57x66A" type="_h-XdAIobEeqevdMp57x66A" direction="return">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_iDM5sYobEeqevdMp57x66A" value="*"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:Array xmi:id="_iDM5soobEeqevdMp57x66A" dimensions="2" base_Element="_iDMSoYobEeqevdMp57x66A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iDP9AIobEeqevdMp57x66A" base_Element="_iDPV8IobEeqevdMp57x66A"/>
  <UMLLabProfile:Generics xmi:id="_iDRLIIobEeqevdMp57x66A" genericsValue="Point" base_Element="_iDP9AYobEeqevdMp57x66A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iDRLIYobEeqevdMp57x66A" base_Element="_iDP9AYobEeqevdMp57x66A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iDSZQIobEeqevdMp57x66A" base_Element="_iDRyMIobEeqevdMp57x66A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iDTnYIobEeqevdMp57x66A" base_Element="_iDTAUIobEeqevdMp57x66A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iDU1gIobEeqevdMp57x66A" base_Element="_iDUOcIobEeqevdMp57x66A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iDWDoIobEeqevdMp57x66A" base_Element="_iDVckIobEeqevdMp57x66A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iDWqsIobEeqevdMp57x66A" base_Element="_iDWDoYobEeqevdMp57x66A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iDXRwYobEeqevdMp57x66A" base_Element="_iDXRwIobEeqevdMp57x66A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iDX40YobEeqevdMp57x66A" base_Element="_iDX40IobEeqevdMp57x66A">
    <associatedElement xmi:type="uml:Operation" xmi:id="_iDYf4IobEeqevdMp57x66A" name="getY" method="_iFbuVIobEeqevdMp57x66A">
      <ownedParameter xmi:id="_iDYf4YobEeqevdMp57x66A" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iDZG8YobEeqevdMp57x66A" base_Element="_iDZG8IobEeqevdMp57x66A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iDZuAYobEeqevdMp57x66A" base_Element="_iDZuAIobEeqevdMp57x66A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iDa8IIobEeqevdMp57x66A" base_Element="_iDaVEIobEeqevdMp57x66A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iDcxUIobEeqevdMp57x66A" base_Element="_iDbjMIobEeqevdMp57x66A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iDd_cIobEeqevdMp57x66A" base_Element="_iDcxUYobEeqevdMp57x66A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iDfNkIobEeqevdMp57x66A" base_Element="_iDemgIobEeqevdMp57x66A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iDf0oYobEeqevdMp57x66A" base_Element="_iDfNkYobEeqevdMp57x66A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iDgbsYobEeqevdMp57x66A" base_Element="_iDf0ooobEeqevdMp57x66A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iDhCwoobEeqevdMp57x66A" base_Element="_iDhCwIobEeqevdMp57x66A"/>
  <UMLLabProfile:Generics xmi:id="_iDiQ4IobEeqevdMp57x66A" genericsValue="Point" base_Element="_iDhp0IobEeqevdMp57x66A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iDi38IobEeqevdMp57x66A" base_Element="_iDhp0IobEeqevdMp57x66A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iDjfAYobEeqevdMp57x66A" base_Element="_iDjfAIobEeqevdMp57x66A">
    <associatedElement xmi:type="uml:Operation" xmi:id="_iDnwcIobEeqevdMp57x66A" name="getObstacles" method="_iFdjgIobEeqevdMp57x66A">
      <ownedParameter xmi:id="_iDploYobEeqevdMp57x66A" type="_h-1XEIobEeqevdMp57x66A" direction="return"/>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:Generics xmi:id="_iDktIIobEeqevdMp57x66A" genericsValue="Obstacle" base_Element="_iDjfAIobEeqevdMp57x66A"/>
  <UMLLabProfile:Generics xmi:id="_iDploIobEeqevdMp57x66A" genericsValue="Obstacle" base_Element="_iDnwcIobEeqevdMp57x66A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iDqMsYobEeqevdMp57x66A" base_Element="_iDqMsIobEeqevdMp57x66A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iDsB4IobEeqevdMp57x66A" base_Element="_iDra0YobEeqevdMp57x66A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iDso8IobEeqevdMp57x66A" base_Element="_iDsB4YobEeqevdMp57x66A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iDtQAYobEeqevdMp57x66A" base_Element="_iDso8YobEeqevdMp57x66A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iDvFMIobEeqevdMp57x66A" base_Element="_iDtQAoobEeqevdMp57x66A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iDw6YIobEeqevdMp57x66A" base_Element="_iDwTUIobEeqevdMp57x66A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iDxhcIobEeqevdMp57x66A" base_Element="_iDw6YYobEeqevdMp57x66A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iDzWoIobEeqevdMp57x66A" base_Element="_iDyIgIobEeqevdMp57x66A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iDz9sYobEeqevdMp57x66A" base_Element="_iDz9sIobEeqevdMp57x66A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iD0kwYobEeqevdMp57x66A" base_Element="_iD0kwIobEeqevdMp57x66A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iEjkkIobEeqevdMp57x66A" base_Element="_iD1L0IobEeqevdMp57x66A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iEkLoIobEeqevdMp57x66A" base_Element="_iEjkkYobEeqevdMp57x66A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iEkysIobEeqevdMp57x66A" base_Element="_iEkLoYobEeqevdMp57x66A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iEq5UIobEeqevdMp57x66A" base_Element="_iEpEIIobEeqevdMp57x66A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iErgYIobEeqevdMp57x66A" base_Element="_iEq5UYobEeqevdMp57x66A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iEsHcIobEeqevdMp57x66A" base_Element="_iErgYYobEeqevdMp57x66A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iEsugoobEeqevdMp57x66A" base_Element="_iEsugIobEeqevdMp57x66A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iEtVkYobEeqevdMp57x66A" base_Element="_iEtVkIobEeqevdMp57x66A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iEt8oYobEeqevdMp57x66A" base_Element="_iEtVkoobEeqevdMp57x66A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iEvx0IobEeqevdMp57x66A" base_Element="_iEujsIobEeqevdMp57x66A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iEwY4IobEeqevdMp57x66A" base_Element="_iEvx0YobEeqevdMp57x66A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iEw_8YobEeqevdMp57x66A" base_Element="_iEw_8IobEeqevdMp57x66A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iEyOEIobEeqevdMp57x66A" base_Element="_iExnAIobEeqevdMp57x66A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iEy1IIobEeqevdMp57x66A" base_Element="_iEyOEYobEeqevdMp57x66A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iEzcMIobEeqevdMp57x66A" base_Element="_iEy1IYobEeqevdMp57x66A"/>
  <UMLLabProfile:Generics xmi:id="_iE0DQIobEeqevdMp57x66A" genericsValue="Nuage" base_Element="_iEzcMYobEeqevdMp57x66A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_iE14cIobEeqevdMp57x66A" base_Element="_iEzcMYobEeqevdMp57x66A"/>
  <uml:OpaqueBehavior xmi:id="_iFMdwIobEeqevdMp57x66A" name="getY" specification="_iCIisIobEeqevdMp57x66A">
    <ownedParameter xmi:id="_iFMdwYobEeqevdMp57x66A" direction="return">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </ownedParameter>
    <language>java</language>
    <body>return this.y - this.etat.getPosY();
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_iFQvMIobEeqevdMp57x66A" name="getGoDown" specification="_iC7M4IobEeqevdMp57x66A">
    <ownedParameter xmi:id="_iFQvMYobEeqevdMp57x66A" direction="return">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
    </ownedParameter>
    <language>java</language>
    <body>return this.goDown;
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_iFRWQIobEeqevdMp57x66A" name="getAccel" specification="_iC8bAIobEeqevdMp57x66A">
    <ownedParameter xmi:id="_iFRWQYobEeqevdMp57x66A" direction="return">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
    </ownedParameter>
    <language>java</language>
    <body>updateAccel();
		return this.accel;
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_iFRWQoobEeqevdMp57x66A" name="getScore" specification="_iDDIsIobEeqevdMp57x66A">
    <ownedParameter xmi:id="_iFRWQ4obEeqevdMp57x66A" direction="return">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </ownedParameter>
    <language>java</language>
    <body>return this.score + getPosY()/100;
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_iFRWRIobEeqevdMp57x66A" name="getEnnemis" specification="_iDIoQYobEeqevdMp57x66A">
    <ownedParameter xmi:id="_iFRWRYobEeqevdMp57x66A" type="_h-1XEIobEeqevdMp57x66A" direction="return"/>
    <language>java</language>
    <body>if(!this.fin)updateEnnemis();
		return this.ennemis;
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_iFR9UIobEeqevdMp57x66A" name="getPiste" specification="_iDMSoYobEeqevdMp57x66A">
    <ownedParameter xmi:id="_iFR9UYobEeqevdMp57x66A" type="_h-XdAIobEeqevdMp57x66A" direction="return">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_iFR9UoobEeqevdMp57x66A" value="*"/>
    </ownedParameter>
    <language>java</language>
    <body>return this.piste.getPiste();
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_iFbuVIobEeqevdMp57x66A" name="getY" specification="_iDYf4IobEeqevdMp57x66A">
    <ownedParameter xmi:id="_iFcVYIobEeqevdMp57x66A" direction="return">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </ownedParameter>
    <language>java</language>
    <body>return this.y - piste.getPosY();
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_iFdjgIobEeqevdMp57x66A" name="getObstacles" specification="_iDnwcIobEeqevdMp57x66A">
    <ownedParameter xmi:id="_iFdjgYobEeqevdMp57x66A" type="_h-1XEIobEeqevdMp57x66A" direction="return"/>
    <language>java</language>
    <body>updateObstacles();
		return this.obstacles;
	</body>
  </uml:OpaqueBehavior>
  <UMLLabProfile:Reference xmi:id="_iGpPQIobEeqevdMp57x66A" base_Element="_iGoBIIobEeqevdMp57x66A"/>
  <UMLLabProfile:Reference xmi:id="_iGrEcIobEeqevdMp57x66A" base_Element="_iGp2UIobEeqevdMp57x66A"/>
  <UMLLabProfile:Reference xmi:id="_iGrrgIobEeqevdMp57x66A" base_Element="_iGrEcYobEeqevdMp57x66A"/>
  <UMLLabProfile:Reference xmi:id="_iGtgsIobEeqevdMp57x66A" base_Element="_iGs5oIobEeqevdMp57x66A"/>
  <UMLLabProfile:Reference xmi:id="_iGuu0IobEeqevdMp57x66A" base_Element="_iGuHwIobEeqevdMp57x66A"/>
  <UMLLabProfile:Reference xmi:id="_iGvV4IobEeqevdMp57x66A" base_Element="_iGuu0YobEeqevdMp57x66A"/>
  <UMLLabProfile:Reference xmi:id="_iG01cIobEeqevdMp57x66A" base_Element="_iGvV4YobEeqevdMp57x66A"/>
  <UMLLabProfile:Reference xmi:id="_iG1cgIobEeqevdMp57x66A" base_Element="_iG01cYobEeqevdMp57x66A"/>
  <UMLLabProfile:Reference xmi:id="_iG2qoIobEeqevdMp57x66A" base_Element="_iG2DkIobEeqevdMp57x66A"/>
  <UMLLabProfile:Reference xmi:id="_iG7jIIobEeqevdMp57x66A" base_Element="_iG68EIobEeqevdMp57x66A"/>
  <UMLLabProfile:Reference xmi:id="_iG8xQIobEeqevdMp57x66A" base_Element="_iG7jIYobEeqevdMp57x66A"/>
  <UMLLabProfile:Reference xmi:id="_iG9_YIobEeqevdMp57x66A" base_Element="_iG8xQYobEeqevdMp57x66A"/>
  <UMLLabProfile:Reference xmi:id="_iG_NgIobEeqevdMp57x66A" base_Element="_iG9_YYobEeqevdMp57x66A"/>
  <UMLLabProfile:Reference xmi:id="_iHAboIobEeqevdMp57x66A" base_Element="_iG_NgYobEeqevdMp57x66A"/>
  <UMLLabProfile:Reference xmi:id="_iHBpwIobEeqevdMp57x66A" base_Element="_iHAboYobEeqevdMp57x66A"/>
  <UMLLabProfile:Reference xmi:id="_iHC34IobEeqevdMp57x66A" base_Element="_iHBpwYobEeqevdMp57x66A"/>
  <UMLLabProfile:Reference xmi:id="_iHEGAIobEeqevdMp57x66A" base_Element="_iHC34YobEeqevdMp57x66A"/>
  <UMLLabProfile:Reference xmi:id="_iHKMoIobEeqevdMp57x66A" base_Element="_iHIXcIobEeqevdMp57x66A"/>
  <UMLLabProfile:Reference xmi:id="_iHLawIobEeqevdMp57x66A" base_Element="_iHKMoYobEeqevdMp57x66A"/>
  <UMLLabProfile:Reference xmi:id="_iHMo4IobEeqevdMp57x66A" base_Element="_iHMB0IobEeqevdMp57x66A"/>
  <UMLLabProfile:Reference xmi:id="_iHN3AIobEeqevdMp57x66A" base_Element="_iHMo4YobEeqevdMp57x66A"/>
  <UMLLabProfile:Reference xmi:id="_iHPFIIobEeqevdMp57x66A" base_Element="_iHN3AYobEeqevdMp57x66A"/>
  <UMLLabProfile:Reference xmi:id="_iHQ6UIobEeqevdMp57x66A" base_Element="_iHPFIYobEeqevdMp57x66A"/>
  <UMLLabProfile:Reference xmi:id="_iHSIcIobEeqevdMp57x66A" base_Element="_iHQ6UYobEeqevdMp57x66A"/>
  <UMLLabProfile:Reference xmi:id="_iHVLwIobEeqevdMp57x66A" base_Element="_iHSIcYobEeqevdMp57x66A"/>
  <UMLLabProfile:Reference xmi:id="_iHVy0IobEeqevdMp57x66A" base_Element="_iHVLwYobEeqevdMp57x66A"/>
  <UMLLabProfile:Reference xmi:id="_iHXA8IobEeqevdMp57x66A" base_Element="_iHVy0YobEeqevdMp57x66A"/>
  <UMLLabProfile:Reference xmi:id="_iHYPEIobEeqevdMp57x66A" base_Element="_iHXA8YobEeqevdMp57x66A"/>
  <UMLLabProfile:Reference xmi:id="_iHY2IIobEeqevdMp57x66A" base_Element="_iHYPEYobEeqevdMp57x66A"/>
  <UMLLabProfile:Reference xmi:id="_iHZdMIobEeqevdMp57x66A" base_Element="_iHY2IYobEeqevdMp57x66A"/>
  <UMLLabProfile:Reference xmi:id="_iHarUIobEeqevdMp57x66A" base_Element="_iHZdMYobEeqevdMp57x66A"/>
  <UMLLabProfile:Reference xmi:id="_iHb5cIobEeqevdMp57x66A" base_Element="_iHarUYobEeqevdMp57x66A"/>
  <UMLLabProfile:Reference xmi:id="_iHdHkIobEeqevdMp57x66A" base_Element="_iHb5cYobEeqevdMp57x66A"/>
</xmi:XMI>
