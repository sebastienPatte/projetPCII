<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:UMLLabProfile="http:///schemas/UMLLabProfile/NS/0" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http:///schemas/UMLLabProfile/NS/0 pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile">
  <uml:Model xmi:id="_t7rKAIq_EeqIWs6fLn5Ghw" name="projetPCII4">
    <eAnnotations xmi:id="_uspT8Iq_EeqIWs6fLn5Ghw" source="http://ns.yatta.de/umllab">
      <contents xmi:type="ecore:EAnnotation" xmi:id="_uspT8Yq_EeqIWs6fLn5Ghw" source="codegen">
        <details xmi:id="_uspT8oq_EeqIWs6fLn5Ghw" key="codegenDirectory" value="/projetPCII/src"/>
        <details xmi:id="_wNHoMIq_EeqIWs6fLn5Ghw" key="AssociatedSourceCode" value="/projetPCII/src/control/Avancer.java;661048470/1;/projetPCII/src/control/Clock.java;3665169467/1;/projetPCII/src/control/Keys.java;1207296785/1;/projetPCII/src/control/Nuage.java;2316705388/1;/projetPCII/src/control/RepaintScreen.java;3534191472/1;/projetPCII/src/control/StoppableThread.java;1580792668/1;/projetPCII/src/control/Vitesse.java;3189475445/1;/projetPCII/src/main/Main.java;2167819080/1;/projetPCII/src/model/Checkpoint.java;1275848687/1;/projetPCII/src/model/Decor.java;2587451362/1;/projetPCII/src/model/Ennemi.java;3641734717/1;/projetPCII/src/model/Etat.java;3428369921/1;/projetPCII/src/model/Montagne.java;2164723914/1;/projetPCII/src/model/Obstacle.java;2045965333/1;/projetPCII/src/model/Piste.java;1206899388/1;/projetPCII/src/view/Affichage.java;1366002048/1;/projetPCII/src/view/VueDecors.java;2476756672/1;/projetPCII/src/view/VueEnnemis.java;238290926/1;/projetPCII/src/view/VueMoto.java;2402487575/1;/projetPCII/src/view/VueNuages.java;468023658/1;"/>
      </contents>
    </eAnnotations>
    <elementImport xmi:id="_v0ZmMIq_EeqIWs6fLn5Ghw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
    </elementImport>
    <elementImport xmi:id="_v0ZmMYq_EeqIWs6fLn5Ghw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
    </elementImport>
    <elementImport xmi:id="_v0ZmMoq_EeqIWs6fLn5Ghw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
    </elementImport>
    <elementImport xmi:id="_v0ZmM4q_EeqIWs6fLn5Ghw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
    </elementImport>
    <elementImport xmi:id="_v0ZmNIq_EeqIWs6fLn5Ghw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
    </elementImport>
    <elementImport xmi:id="_v0ZmNYq_EeqIWs6fLn5Ghw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </elementImport>
    <elementImport xmi:id="_v0ZmNoq_EeqIWs6fLn5Ghw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
    </elementImport>
    <elementImport xmi:id="_v0aNQIq_EeqIWs6fLn5Ghw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
    </elementImport>
    <elementImport xmi:id="_v0aNQYq_EeqIWs6fLn5Ghw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </elementImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_v0a0UIq_EeqIWs6fLn5Ghw" name="model">
      <packagedElement xmi:type="uml:Class" xmi:id="_v3G78Yq_EeqIWs6fLn5Ghw" name="Checkpoint">
        <ownedAttribute xmi:id="_wBuQgIq_EeqIWs6fLn5Ghw" name="VOIE_MAX" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_wBuQgYq_EeqIWs6fLn5Ghw" value="2"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_wBu3kIq_EeqIWs6fLn5Ghw" name="INCR" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_wBu3kYq_EeqIWs6fLn5Ghw" value="5"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_wBveoIq_EeqIWs6fLn5Ghw" name="DEFAULT_TIME" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_wBveoYq_EeqIWs6fLn5Ghw" value="20"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_wBwFsYq_EeqIWs6fLn5Ghw" name="voie" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_wBwFsoq_EeqIWs6fLn5Ghw" name="posY" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_wBwswIq_EeqIWs6fLn5Ghw" name="time" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_wBwswoq_EeqIWs6fLn5Ghw" name="clock" type="_v2tTUIq_EeqIWs6fLn5Ghw" isReadOnly="true" association="_wEOK4Yq_EeqIWs6fLn5Ghw"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDWoMIq_EeqIWs6fLn5Ghw" name="Checkpoint" specification="_v-8pUIq_EeqIWs6fLn5Ghw">
          <ownedParameter xmi:id="_wDWoMYq_EeqIWs6fLn5Ghw" name="etat" type="_v3YowIq_EeqIWs6fLn5Ghw"/>
          <ownedParameter xmi:id="_wDWoMoq_EeqIWs6fLn5Ghw" type="_v3G78Yq_EeqIWs6fLn5Ghw" direction="return"/>
          <language>java</language>
          <body>this.time = DEFAULT_TIME;
		this.posY = INCR*Piste.incr;
		this.clock = new Clock(etat);
		this.clock.start();
		this.voie = 0;
		
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDWoM4q_EeqIWs6fLn5Ghw" name="nextCheckpoint" specification="_v3IKEIq_EeqIWs6fLn5Ghw">
          <language>java</language>
          <body>this.voie = randint(0, VOIE_MAX);
		this.posY += INCR*Piste.incr;
		System.out.println(&quot;next CHECK | y = &quot;+posY);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDWoNIq_EeqIWs6fLn5Ghw" name="addTime" specification="_v3IKEYq_EeqIWs6fLn5Ghw">
          <language>java</language>
          <body>clock.incrTempsRestant(this.time);
		if(time > 5) {
			this.time--;
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDX2UIq_EeqIWs6fLn5Ghw" name="getTime" specification="_v3IKEoq_EeqIWs6fLn5Ghw">
          <ownedParameter xmi:id="_wDX2UYq_EeqIWs6fLn5Ghw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return this.time;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDZEcIq_EeqIWs6fLn5Ghw" name="getPosX" specification="_v3IxIIq_EeqIWs6fLn5Ghw">
          <ownedParameter xmi:id="_wDZEcYq_EeqIWs6fLn5Ghw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wDZEcoq_EeqIWs6fLn5Ghw" value="*"/>
          </ownedParameter>
          <language>java</language>
          <body>double[] res = new double[2];
	
		if(voie==0) {
			res[0] = 0;
			res[1] = -2./3;
		}else {
			if(voie==1) {
				res[0] = 1./3;
				res[1] = -1./3;
			}else {
				res[0] = 2./3;
				res[1] = 0;
			}
		}
		
		
		return res;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDZrgIq_EeqIWs6fLn5Ghw" name="randint" specification="_v3JYMIq_EeqIWs6fLn5Ghw">
          <ownedParameter xmi:id="_wDZrgYq_EeqIWs6fLn5Ghw" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_wDZrgoq_EeqIWs6fLn5Ghw" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_wDZrg4q_EeqIWs6fLn5Ghw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return ThreadLocalRandom.current().nextInt(min, max + 1);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDZrhIq_EeqIWs6fLn5Ghw" name="restart" specification="_v3J_QIq_EeqIWs6fLn5Ghw">
          <language>java</language>
          <body>this.time = DEFAULT_TIME;
		this.posY = INCR*Piste.incr;
		this.clock.restart();
		this.voie = 0;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_v3IKEIq_EeqIWs6fLn5Ghw" name="nextCheckpoint" method="_wDWoM4q_EeqIWs6fLn5Ghw">
          <ownedComment xmi:id="_wD4MpIq_EeqIWs6fLn5Ghw">
            <body>On génére au checkpoint suivant</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_v3IKEYq_EeqIWs6fLn5Ghw" name="addTime" method="_wDWoNIq_EeqIWs6fLn5Ghw">
          <ownedComment xmi:id="_wD4zsIq_EeqIWs6fLn5Ghw">
            <body>ajoute {@link #time} au temps restant et le décrémente si {@link #time} n'est pas passé en dessous de 5 secondes</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_v3IKEoq_EeqIWs6fLn5Ghw" name="getTime" method="_wDX2UIq_EeqIWs6fLn5Ghw">
          <ownedComment xmi:id="_wD4zsYq_EeqIWs6fLn5Ghw">
            <body>
	 * @return le temps d'ajout actuel pour un franchissement de checkpoint {@link #time}</body>
          </ownedComment>
          <ownedParameter xmi:id="_v3IKE4q_EeqIWs6fLn5Ghw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_v3IxIIq_EeqIWs6fLn5Ghw" name="getPosX" method="_wDZEcIq_EeqIWs6fLn5Ghw">
          <ownedComment xmi:id="_wD4zsoq_EeqIWs6fLn5Ghw">
            <body>@return les décalages pour l'affichage et les tests de franchissement du checkpoint courant en fonction de sa {@link #voie}</body>
          </ownedComment>
          <ownedParameter xmi:id="_v3IxIYq_EeqIWs6fLn5Ghw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v3IxIoq_EeqIWs6fLn5Ghw" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_v3JYMIq_EeqIWs6fLn5Ghw" name="randint" method="_wDZrgIq_EeqIWs6fLn5Ghw">
          <ownedComment xmi:id="_wD4zs4q_EeqIWs6fLn5Ghw">
            <body>Génère un chiffre aléatoire entre min et max
	 * @param min
	 * @param max
	 * @return random int between min and max</body>
          </ownedComment>
          <ownedParameter xmi:id="_v3JYMYq_EeqIWs6fLn5Ghw" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_v3JYMoq_EeqIWs6fLn5Ghw" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_v3JYM4q_EeqIWs6fLn5Ghw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_v3J_QIq_EeqIWs6fLn5Ghw" name="restart" visibility="package" method="_wDZrhIq_EeqIWs6fLn5Ghw">
          <ownedComment xmi:id="_wD4ztIq_EeqIWs6fLn5Ghw">
            <body>réinitialise le temps restant et le checkpoint courant quand le joueur relance une partie</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_v-8pUIq_EeqIWs6fLn5Ghw" name="Checkpoint" method="_wDWoMIq_EeqIWs6fLn5Ghw">
          <eAnnotations xmi:id="_v-8pUoq_EeqIWs6fLn5Ghw" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_v-8pU4q_EeqIWs6fLn5Ghw" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_wD4Mo4q_EeqIWs6fLn5Ghw">
            <body>Constructor
	 * @param etat</body>
          </ownedComment>
          <ownedParameter xmi:id="_v-8pUYq_EeqIWs6fLn5Ghw" name="etat" type="_v3YowIq_EeqIWs6fLn5Ghw"/>
          <ownedParameter xmi:id="_v-8pVIq_EeqIWs6fLn5Ghw" type="_v3G78Yq_EeqIWs6fLn5Ghw" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_v3LNYIq_EeqIWs6fLn5Ghw" name="Decor">
        <ownedAttribute xmi:id="_wBx64Iq_EeqIWs6fLn5Ghw" name="probaArbre" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_wBx64Yq_EeqIWs6fLn5Ghw" value="40"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_wByh8Iq_EeqIWs6fLn5Ghw" name="probaRock" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_wByh8Yq_EeqIWs6fLn5Ghw" value="40"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_wBzJAIq_EeqIWs6fLn5Ghw" name="probaHouse" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_wBzJAYq_EeqIWs6fLn5Ghw" value="20"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_wBzJA4q_EeqIWs6fLn5Ghw" name="x" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_wBzwEYq_EeqIWs6fLn5Ghw" name="y" visibility="private" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_wB0-MYq_EeqIWs6fLn5Ghw" name="width" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_wB1lQYq_EeqIWs6fLn5Ghw" name="height" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_wB2zYYq_EeqIWs6fLn5Ghw" name="etat" visibility="private" type="_v3YowIq_EeqIWs6fLn5Ghw" association="_wEOx8Yq_EeqIWs6fLn5Ghw"/>
        <ownedAttribute xmi:id="_wB3acYq_EeqIWs6fLn5Ghw" name="type" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDaSkoq_EeqIWs6fLn5Ghw" name="Decor" specification="_v_DXAIq_EeqIWs6fLn5Ghw">
          <ownedParameter xmi:id="_wDaSk4q_EeqIWs6fLn5Ghw" name="etat" type="_v3YowIq_EeqIWs6fLn5Ghw"/>
          <ownedParameter xmi:id="_wDaSlIq_EeqIWs6fLn5Ghw" type="_v3LNYIq_EeqIWs6fLn5Ghw" direction="return"/>
          <language>java</language>
          <body>this.y = etat.getPosY() + Affichage.HAUT;
		int rdm = randint(0, 100);
		if(rdm &lt; probaArbre) {
			//arbre
			this.type = 0;
			this.width = 50;
			this.height = 100;
			
		}else {
			if(rdm &lt; probaArbre + probaRock) {
				//rocher
				this.type = 1;
				this.width = 50;
				this.height = 40;
			}else {
				// Maison
				this.type = 2;
				this.width = 100;
				this.height = 100;
			}
		}
		if(randint(0,1)==0) {
			//décor à gauche
			this.x = randint(-Affichage.LARG,Affichage.LARG/2-Piste.largeurPiste/2-Piste.dec-this.width);
		}else {
			//décor à droite
			this.x = randint(Affichage.LARG/2+Piste.largeurPiste/2+Piste.dec, Affichage.LARG*2);
		}
		
		this.etat = etat;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDaSlYq_EeqIWs6fLn5Ghw" name="getBounds" specification="_v3MbgIq_EeqIWs6fLn5Ghw">
          <ownedParameter xmi:id="_wDaSloq_EeqIWs6fLn5Ghw" type="_v_ATsYq_EeqIWs6fLn5Ghw" direction="return"/>
          <language>java</language>
          <body>Point p1 = new Point(x-etat.getPosX(), getY());						//p1 : point en bas à gauche
		Point p3 = etat.projection(p1.x,0,p1.y);							//p3 : projection de p1 sur le plan (hauteur = 0)
		Point p2 = etat.projection(p1.x+width, 0, p1.y);					//p2 : projection du point en bas à droite sur le plan (hauteur = 0)
		
		int haut =  etat.projection(p1.x, height, p1.y).y - p3.y;			//haut : y du point en haut à gauche (projeté sur le plan) - y de p3
		int larg = p2.x-p3.x;												//larg : x de p2 - x de p1
		return new Rectangle(p3.x, Affichage.HAUT - p3.y, larg, haut);		// on renvoie direct les coordonnées avec Y inversé
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDa5oIq_EeqIWs6fLn5Ghw" name="randint" specification="_v3NCkIq_EeqIWs6fLn5Ghw">
          <ownedParameter xmi:id="_wDa5oYq_EeqIWs6fLn5Ghw" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_wDa5ooq_EeqIWs6fLn5Ghw" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_wDa5o4q_EeqIWs6fLn5Ghw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return ThreadLocalRandom.current().nextInt(min, max + 1);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_v3MbgIq_EeqIWs6fLn5Ghw" name="getBounds" method="_wDaSlYq_EeqIWs6fLn5Ghw">
          <ownedParameter xmi:id="_wAloEIq_EeqIWs6fLn5Ghw" type="_v_ATsYq_EeqIWs6fLn5Ghw" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_v3NCkIq_EeqIWs6fLn5Ghw" name="randint" visibility="private" method="_wDa5oIq_EeqIWs6fLn5Ghw">
          <ownedComment xmi:id="_wD4ztYq_EeqIWs6fLn5Ghw">
            <body>Génère un chiffre aléatoire entre min et max
	 * @param int min
	 * @param int max
	 * @return random int between min and max</body>
          </ownedComment>
          <ownedParameter xmi:id="_v3NCkYq_EeqIWs6fLn5Ghw" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_v3NCkoq_EeqIWs6fLn5Ghw" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_v3R7EIq_EeqIWs6fLn5Ghw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_v_DXAIq_EeqIWs6fLn5Ghw" name="Decor" method="_wDaSkoq_EeqIWs6fLn5Ghw">
          <eAnnotations xmi:id="_v_DXAoq_EeqIWs6fLn5Ghw" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_v_DXA4q_EeqIWs6fLn5Ghw" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_v_DXAYq_EeqIWs6fLn5Ghw" name="etat" type="_v3YowIq_EeqIWs6fLn5Ghw"/>
          <ownedParameter xmi:id="_v_DXBIq_EeqIWs6fLn5Ghw" type="_v3LNYIq_EeqIWs6fLn5Ghw" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_v3TwQIq_EeqIWs6fLn5Ghw" name="Ennemi">
        <ownedAttribute xmi:id="_wB4okIq_EeqIWs6fLn5Ghw" name="MAX_TIME" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_wB4okYq_EeqIWs6fLn5Ghw" value="80"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_wB5PoIq_EeqIWs6fLn5Ghw" name="MIN_TIME" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_wB5PoYq_EeqIWs6fLn5Ghw" value="30"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_wB52sIq_EeqIWs6fLn5Ghw" name="V_MAX" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_wB52sYq_EeqIWs6fLn5Ghw" value="(int) Etat.vitesseMax"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_wB6dwYq_EeqIWs6fLn5Ghw" name="FACT_V" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_wB6dwoq_EeqIWs6fLn5Ghw" value="90"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_wB7E0Yq_EeqIWs6fLn5Ghw" name="x" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_wB7r4Iq_EeqIWs6fLn5Ghw" name="y" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_wB86AIq_EeqIWs6fLn5Ghw" name="etatMoto" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_wB9hEYq_EeqIWs6fLn5Ghw" name="etat" visibility="private" type="_v3YowIq_EeqIWs6fLn5Ghw" association="_wEPZAYq_EeqIWs6fLn5Ghw">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_7J7aYIrHEeqIWs6fLn5Ghw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_7J8BcIrHEeqIWs6fLn5Ghw" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_wB-IIYq_EeqIWs6fLn5Ghw" name="timeVirage" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDbgsIq_EeqIWs6fLn5Ghw" name="Ennemi" specification="_v_LS0Iq_EeqIWs6fLn5Ghw">
          <ownedParameter xmi:id="_wDbgsYq_EeqIWs6fLn5Ghw" name="etat" type="_v3YowIq_EeqIWs6fLn5Ghw"/>
          <ownedParameter xmi:id="_wDbgsoq_EeqIWs6fLn5Ghw" type="_v3TwQIq_EeqIWs6fLn5Ghw" direction="return"/>
          <language>java</language>
          <body>this.y = etat.getPosY() + Affichage.HAUT;
		this.x = randint((Affichage.LARG/2)-Piste.largeurPiste/2, (Affichage.LARG/2)+Piste.largeurPiste/2);
		
		this.etatMoto = 1;
		this.etat = etat;
		this.timeVirage = 0;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDbgs4q_EeqIWs6fLn5Ghw" name="getEtatMoto" specification="_v3U-YIq_EeqIWs6fLn5Ghw">
          <ownedParameter xmi:id="_wDbgtIq_EeqIWs6fLn5Ghw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return this.etatMoto;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDbgtYq_EeqIWs6fLn5Ghw" name="updateEtatMoto" specification="_v3U-Yoq_EeqIWs6fLn5Ghw">
          <language>java</language>
          <body>int rdm = randint(0, 1000);
		
		if(timeVirage &lt;= 0) {
			//si le temps est écoulé alors la moto va tout droit
			this.etatMoto = 1;
		}
		
		if(this.etatMoto == 1) {
			if(rdm &lt;= 5) {
				if(this.x  &lt;= Affichage.LARG/2 + Piste.largeurPiste/2) {
					//etat virage droite si on a pas déjà dépassé le bord droit de la piste
					this.etatMoto = 2;
					this.timeVirage = randint(MIN_TIME, MAX_TIME);
				}
				
			}else {
				if(rdm &lt;= 10) {
					if(this.x  >= Affichage.LARG/2 - Piste.largeurPiste/2) {
						//etat virage gauche si on a pas déjà dépassé le bord gauche de la piste
						this.etatMoto = 0;
						this.timeVirage = randint(MIN_TIME, MAX_TIME);
					}
				}
			}
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDbgtoq_EeqIWs6fLn5Ghw" name="getVitesse" specification="_v3VlcIq_EeqIWs6fLn5Ghw">
          <ownedParameter xmi:id="_wDbgt4q_EeqIWs6fLn5Ghw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>int away = Math.abs((int) ((double)(this.x - Affichage.LARG/2) / FACT_V));
		
		return V_MAX - away ;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDbguIq_EeqIWs6fLn5Ghw" name="avance" specification="_v3Vlcoq_EeqIWs6fLn5Ghw">
          <language>java</language>
          <body>//dans tout les cas on avance en y
		this.y += getVitesse();
		updateEtatMoto();
		if(etatMoto == 0) {
			// on va a gauche 
			
			this.x -= Etat.deplacement;
			this.timeVirage--;
			
			// on arrete le virage si on va trop loin du centre de la fenetre
			if(this.x &lt;= Affichage.LARG/2 - Piste.largeurPiste/2) {
				this.timeVirage = 0;
			}
			
		}else {
			if(etatMoto == 2) {
				//on va a droite 
				this.x += Etat.deplacement;
				this.timeVirage--;
				// on arrete le virage si on va trop loin du centre de la fenetre
				if(this.x >= Affichage.LARG/2 + Piste.largeurPiste/2) {
					this.timeVirage = 0;
				}
			}
		}		
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDcHwIq_EeqIWs6fLn5Ghw" name="recule" specification="_v3Vlc4q_EeqIWs6fLn5Ghw">
          <language>java</language>
          <body>this.y -= V_MAX;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDcHwYq_EeqIWs6fLn5Ghw" name="getMotoBounds" specification="_v3VldIq_EeqIWs6fLn5Ghw">
          <ownedParameter xmi:id="_wDcHwoq_EeqIWs6fLn5Ghw" type="_v_ATsYq_EeqIWs6fLn5Ghw" direction="return"/>
          <language>java</language>
          <body>String str = VueEnnemis.PATH+etatMoto+&quot;.png&quot;;
		try {
			Image image = ImageIO.read(VueEnnemis.class.getResource(str));
			// on multiplie par 1.2 pour que la taille soit environs la meme que la moto du joueur
			// (car la moto du joueur n'est pas soumise à la perspective vu qu'elle est toujours au meme y)
			int height = (int) (image.getHeight(null) * 1.2);
			int width = (int) (image.getWidth(null) * 1.2);
			
			return new Rectangle(x,y,width,height);
			
		}catch (IOException e) {
			e.printStackTrace();
			return new Rectangle(-1,-1,-1,-1);
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDcHw4q_EeqIWs6fLn5Ghw" name="getBounds" specification="_v3WMgIq_EeqIWs6fLn5Ghw">
          <ownedParameter xmi:id="_wDcHxIq_EeqIWs6fLn5Ghw" type="_v_ATsYq_EeqIWs6fLn5Ghw" direction="return"/>
          <language>java</language>
          <body>Rectangle b = getMotoBounds();
		
		Point p1 = new Point(x-etat.getPosX(), y - etat.getPosY());			//p1 : point en bas à gauche
		Point p3 = etat.projection(p1.x,0,p1.y);							//p3 : projection de p1 sur le plan (hauteur = 0)
		
		
		Point p2 = etat.projection(p1.x+b.width, 0, p1.y);					//p2 : projection du point en bas à droite sur le plan (hauteur = 0)
		
		int haut =  etat.projection(p1.x, b.height, p1.y).y - p3.y;			//haut : y du point en haut à gauche (projeté sur le plan) - y de p3
		int larg = p2.x-p3.x;												//larg : x de p2 - x de p1
		
		return new Rectangle(p3.x, Affichage.HAUT - p3.y, larg, haut);		// on renvoie direct les coordonnées avec Y inversé
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDcHxYq_EeqIWs6fLn5Ghw" name="randint" specification="_v3WMgYq_EeqIWs6fLn5Ghw">
          <ownedParameter xmi:id="_wDcHxoq_EeqIWs6fLn5Ghw" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_wDcHx4q_EeqIWs6fLn5Ghw" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_wDcHyIq_EeqIWs6fLn5Ghw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return ThreadLocalRandom.current().nextInt(min, max + 1);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_v3U-YIq_EeqIWs6fLn5Ghw" name="getEtatMoto" method="_wDbgs4q_EeqIWs6fLn5Ghw">
          <ownedParameter xmi:id="_v3U-YYq_EeqIWs6fLn5Ghw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_v3U-Yoq_EeqIWs6fLn5Ghw" name="updateEtatMoto" visibility="private" method="_wDbgtYq_EeqIWs6fLn5Ghw"/>
        <ownedOperation xmi:id="_v3VlcIq_EeqIWs6fLn5Ghw" name="getVitesse" visibility="private" method="_wDbgtoq_EeqIWs6fLn5Ghw">
          <ownedComment xmi:id="_wD5awIq_EeqIWs6fLn5Ghw">
            <body>On calcule away qui représente la distance entre le milieu de la piste et la moto
	 * Ici on calcule la différence entre le milieu de la fenetre et la position de la moto
	 * divisé par {@link #V_MAX}
	 * @return {@link #V_MAX} - away</body>
          </ownedComment>
          <ownedParameter xmi:id="_v3VlcYq_EeqIWs6fLn5Ghw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_v3Vlcoq_EeqIWs6fLn5Ghw" name="avance" method="_wDbguIq_EeqIWs6fLn5Ghw"/>
        <ownedOperation xmi:id="_v3Vlc4q_EeqIWs6fLn5Ghw" name="recule" method="_wDcHwIq_EeqIWs6fLn5Ghw">
          <ownedComment xmi:id="_wD5awYq_EeqIWs6fLn5Ghw">
            <body>fait reculer l'ennemi, appelé par {@link Etat#CollisionEnnemi()} quand le joueur fait une queue de poisson</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_v3VldIq_EeqIWs6fLn5Ghw" name="getMotoBounds" visibility="private" method="_wDcHwYq_EeqIWs6fLn5Ghw">
          <ownedParameter xmi:id="_wAoEUIq_EeqIWs6fLn5Ghw" type="_v_ATsYq_EeqIWs6fLn5Ghw" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_v3WMgIq_EeqIWs6fLn5Ghw" name="getBounds" method="_wDcHw4q_EeqIWs6fLn5Ghw">
          <ownedParameter xmi:id="_wAoEUYq_EeqIWs6fLn5Ghw" type="_v_ATsYq_EeqIWs6fLn5Ghw" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_v3WMgYq_EeqIWs6fLn5Ghw" name="randint" visibility="private" method="_wDcHxYq_EeqIWs6fLn5Ghw">
          <ownedComment xmi:id="_wD5awoq_EeqIWs6fLn5Ghw">
            <body>Génère un chiffre aléatoire entre min et max
	 * @param int min
	 * @param int max
	 * @return random int between min and max</body>
          </ownedComment>
          <ownedParameter xmi:id="_v3WzkIq_EeqIWs6fLn5Ghw" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_v3WzkYq_EeqIWs6fLn5Ghw" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_v3Wzkoq_EeqIWs6fLn5Ghw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_v_LS0Iq_EeqIWs6fLn5Ghw" name="Ennemi" method="_wDbgsIq_EeqIWs6fLn5Ghw">
          <eAnnotations xmi:id="_v_L54Iq_EeqIWs6fLn5Ghw" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_v_L54Yq_EeqIWs6fLn5Ghw" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_v_LS0Yq_EeqIWs6fLn5Ghw" name="etat" type="_v3YowIq_EeqIWs6fLn5Ghw"/>
          <ownedParameter xmi:id="_v_L54oq_EeqIWs6fLn5Ghw" type="_v3TwQIq_EeqIWs6fLn5Ghw" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_v3YowIq_EeqIWs6fLn5Ghw" name="Etat">
        <ownedAttribute xmi:id="_wB_9UIq_EeqIWs6fLn5Ghw" name="deplacement" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_wB_9UYq_EeqIWs6fLn5Ghw" value="6"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_wCAkYYq_EeqIWs6fLn5Ghw" name="FACT_ACCEL" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_wCAkYoq_EeqIWs6fLn5Ghw" value="Piste.largeurPiste/150"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_wCBLcYq_EeqIWs6fLn5Ghw" name="FACT_ACCEL_VERT" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_wCBygIq_EeqIWs6fLn5Ghw" value="1.5"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_wCBygoq_EeqIWs6fLn5Ghw" name="ACCEL_MAX" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_wCCZkIq_EeqIWs6fLn5Ghw" value="150"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_wCDAoIq_EeqIWs6fLn5Ghw" name="PosVert_MAX" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_wCDAoYq_EeqIWs6fLn5Ghw" value="50"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_wCDnsIq_EeqIWs6fLn5Ghw" name="probaDecor" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_wCDnsYq_EeqIWs6fLn5Ghw" value="5"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_wCEOwYq_EeqIWs6fLn5Ghw" name="maxDecors" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_wCEOwoq_EeqIWs6fLn5Ghw" value="10"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_wCE10Yq_EeqIWs6fLn5Ghw" name="probaEnnemi" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_wCE10oq_EeqIWs6fLn5Ghw" value="5"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_wCFc4Yq_EeqIWs6fLn5Ghw" name="maxEnnemis" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_wCGD8Iq_EeqIWs6fLn5Ghw" value="3"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_wCGD8oq_EeqIWs6fLn5Ghw" name="HAUT_OBS" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_wCGrAIq_EeqIWs6fLn5Ghw" value="10"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_wCHSEIq_EeqIWs6fLn5Ghw" name="HAUT_ENNEMIS" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_wCHSEYq_EeqIWs6fLn5Ghw" value="20"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_wCH5IIq_EeqIWs6fLn5Ghw" name="ImpactObstacle" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_wCH5IYq_EeqIWs6fLn5Ghw" value="4"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_wCIgMYq_EeqIWs6fLn5Ghw" name="ImpactHole" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_wCIgMoq_EeqIWs6fLn5Ghw" value="7"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_wCJHQYq_EeqIWs6fLn5Ghw" name="MinVitesseVol" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_wCJHQoq_EeqIWs6fLn5Ghw" value="2"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_wCJuUYq_EeqIWs6fLn5Ghw" name="vitesseMax" visibility="package" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_wCKVYIq_EeqIWs6fLn5Ghw" value="8.0"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_wCK8cIq_EeqIWs6fLn5Ghw" name="ADD_SCORE" visibility="package" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_wCK8cYq_EeqIWs6fLn5Ghw" value="10"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_wCLjgIq_EeqIWs6fLn5Ghw" name="posX" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_wCLjgYq_EeqIWs6fLn5Ghw" name="leftPressed" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_wCMKkYq_EeqIWs6fLn5Ghw" name="rightPressed" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_wCMxoYq_EeqIWs6fLn5Ghw" name="upPressed" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_wCNYsYq_EeqIWs6fLn5Ghw" name="downPressed" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_wCN_wYq_EeqIWs6fLn5Ghw" name="goDown" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_wCP08Iq_EeqIWs6fLn5Ghw" name="accel" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_wCSRMIq_EeqIWs6fLn5Ghw" name="vitesse" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_wCV7kIq_EeqIWs6fLn5Ghw" name="fin" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_wCWioYq_EeqIWs6fLn5Ghw" name="posVert">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_wCXJsYq_EeqIWs6fLn5Ghw" name="etatMoto" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_wCXwwYq_EeqIWs6fLn5Ghw" name="retry" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_wCY-4Iq_EeqIWs6fLn5Ghw" name="score" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_wCaNAIq_EeqIWs6fLn5Ghw" name="threads" visibility="private" type="_v3A1UIq_EeqIWs6fLn5Ghw" association="_wEQnIIq_EeqIWs6fLn5Ghw">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wCaNAYq_EeqIWs6fLn5Ghw" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_wCbbIIq_EeqIWs6fLn5Ghw" name="montagne" visibility="private" type="_v35mIIq_EeqIWs6fLn5Ghw" association="_wEROMIq_EeqIWs6fLn5Ghw"/>
        <ownedAttribute xmi:id="_wCcCMIq_EeqIWs6fLn5Ghw" name="check" type="_v3G78Yq_EeqIWs6fLn5Ghw" isReadOnly="true" association="_wER1QYq_EeqIWs6fLn5Ghw"/>
        <ownedAttribute xmi:id="_wCcCMYq_EeqIWs6fLn5Ghw" name="decors" type="_v_QLUIq_EeqIWs6fLn5Ghw" isReadOnly="true" association="_wEScUYq_EeqIWs6fLn5Ghw"/>
        <ownedAttribute xmi:id="_wCdQUIq_EeqIWs6fLn5Ghw" name="ennemis" type="_v_QLUIq_EeqIWs6fLn5Ghw" isReadOnly="true" association="_wETDYYq_EeqIWs6fLn5Ghw"/>
        <ownedAttribute xmi:id="_wCfskYq_EeqIWs6fLn5Ghw" name="piste" type="_v4YuUIq_EeqIWs6fLn5Ghw" isReadOnly="true" association="_wETqcYq_EeqIWs6fLn5Ghw"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDhARoq_EeqIWs6fLn5Ghw" name="Etat" specification="_v3bsEIq_EeqIWs6fLn5Ghw">
          <ownedParameter xmi:id="_wDhAR4q_EeqIWs6fLn5Ghw" type="_v3YowIq_EeqIWs6fLn5Ghw" direction="return"/>
          <language>java</language>
          <body>this.goDown = false;
		this.leftPressed = false;
		this.rightPressed = false;
		this.upPressed = false;
		this.downPressed = false;
		this.piste = new Piste(this);
		this.check = new Checkpoint(this);
		this.posX = 0;
		this.accel = 100.;
		this.vitesse =  vitesseMax;
		this.montagne = new Montagne(this);
		this.etatMoto = 1;
		this.posVert = 0;
		this.decors = new ArrayList&lt;Decor>();
		this.ennemis = new ArrayList&lt;Ennemi>();
		this.score = 0;
		this.fin = false;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDhnUIq_EeqIWs6fLn5Ghw" name="projection" specification="_v3cTIIq_EeqIWs6fLn5Ghw">
          <ownedParameter xmi:id="_wDhnUYq_EeqIWs6fLn5Ghw" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_wDhnUoq_EeqIWs6fLn5Ghw" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_wDhnU4q_EeqIWs6fLn5Ghw" name="z">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_wDhnVIq_EeqIWs6fLn5Ghw" type="_v--egIq_EeqIWs6fLn5Ghw" direction="return"/>
          <language>java</language>
          <body>int posAffX = Affichage.LARG/2 - getPosX(); //position d'affichage posX depuis le milieu de l'écran
		//projection sur l'axe y (de la fenetre)
		int y_resultat = (z * (Affichage.HAUTEUR_Y - y)) / (z + Affichage.RECUL_Z) + y;
		//projection sur l'axe x (de la fenetre)
		int x_resultat = (z * (posAffX - x)) / (z + Affichage.RECUL_Z) + x;
		return new Point(x_resultat,y_resultat);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDhnVYq_EeqIWs6fLn5Ghw" name="testCheckpoint" specification="_v3c6MIq_EeqIWs6fLn5Ghw">
          <language>java</language>
          <body>Rectangle mBounds = getMotoBounds();
		Point[][] piste = getPiste();
		//calcul indice checkpoint sur la piste
		int i = (check.getPosY()-this.getPosY())/Piste.incr+1;
		
		if(i&lt;piste.length) {
			// on projete un point au niveau Y du checkpoint pour obtenir l'Y d'affichage du checkpoint (qui prend déjà en compte posY de la moto)
			int yCheckProj =  projection(piste[i][0].x, 0, piste[i][0].y).y;

			//on ne peut franchir un checkpoint que si on est au sol
			if(this.posVert==0 &amp;&amp; yCheckProj &lt;= mBounds.height) {
			//si le checkpoint a atteint le niveau de la moto
				// calcul points au niveau du checkpoint
				Point pG = projection(piste[i][0].x, 0, piste[i][0].y);
				Point pD = projection(piste[i][1].x, 0, piste[i][1].y);	
				
				// on récupère x1 et x2 du checkpoint tels qu'ils sont affichés
				double[] Xcheck = check.getPosX();
				int largPiste = pD.x - pG.x; 
				int cX1 = pG.x + (int)(Xcheck[0] * largPiste);
				int cX2 = pD.x + (int)(Xcheck[1] * largPiste);
	
				// on récupère x1 et x2 de la Moto
				int mX1 = mBounds.x;                
				int mX2 = mBounds.x + mBounds.width;
				
				if((cX1 &lt;= mX2 &amp;&amp; mX2 &lt;= cX2) || (cX1 &lt;= mX1 &amp;&amp; mX1 &lt;= cX2)) {
					//si x1 ou x2 de la moto est entre les coordonnées X du checkpoint alors on ajoute du temps
					check.addTime();
					// et on génère le prochain checkpoint
					check.nextCheckpoint();
				}
			}
			
			if(yCheckProj &lt;= VueMoto.decBord) {
				//sinon si, le checkpoint est sorti de la fenètre alors on passe au suivant sans ajouter de temps
				System.out.println(&quot;checkpoint missed : checkPosY &quot;+check.getPosY()+&quot; | posY &quot;+getPosY());
				check.nextCheckpoint();
				System.out.println(&quot;checkpoint missed : checkPosY &quot;+check.getPosY()+&quot; | posY &quot;+getPosY());
			}
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDhnVoq_EeqIWs6fLn5Ghw" name="gameOver" specification="_v3c6MYq_EeqIWs6fLn5Ghw">
          <language>java</language>
          <body>System.out.println(&quot;GAME OVER&quot;);
		this.vitesse = 0;
		this.accel = 0;
		this.fin = true;
		
		for(StoppableThread t : this.threads) {
			
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDhnV4q_EeqIWs6fLn5Ghw" name="updateVitesse" specification="_v3c6Moq_EeqIWs6fLn5Ghw">
          <language>java</language>
          <body>//this.vitesse = getAccel()/100*vitesse;
		
		double newV = getAccel()/100*vitesse;
		
		if(newV&lt;vitesseMax) {
			this.vitesse=newV;
		}else {
			this.vitesse = vitesseMax;
		}
		
		
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDiOYIq_EeqIWs6fLn5Ghw" name="updateAccel" specification="_v3dhQIq_EeqIWs6fLn5Ghw">
          <language>java</language>
          <body>double away = (double)(Math.abs(Affichage.LARG/2 - piste.getMidX(0)) + Math.abs(posX)) / FACT_ACCEL;
		//on ajoute un dixième de la position verticale de la moto
		away += this.posVert / FACT_ACCEL_VERT ;
		
		if(accel>0) {
			accel = ACCEL_MAX - away;
		}
		if(accel>=ACCEL_MAX) {
			accel=ACCEL_MAX;
		}
		
		
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDiOYYq_EeqIWs6fLn5Ghw" name="avance" specification="_v3dhQYq_EeqIWs6fLn5Ghw">
          <language>java</language>
          <body>testCheckpoint();
		/* 0 &lt;= accel/100 &lt;= 1
		 * quand accel est Ã  100 on avance de vitesseMax
		 */
		if(this.vitesse &lt;= 0)gameOver();
		int iEnnemi = CollisionEnnemi();
		testCheckpoint();
		if(iEnnemi !=-1) {
			// on considère qu'une collision avec un ennemi ne fait pas baisser la vitesse en dessous de 1
			if(this.vitesse-1>1)this.vitesse -= 1;
			this.ennemis.get(iEnnemi).avance();
		}else {
			piste.avance(Math.round((float)getVitesse()));
		}
		// on fait avancer tout les ennemis
		for (Ennemi ennemi : ennemis) {
			ennemi.avance();
		}
		testCheckpoint();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDiOYoq_EeqIWs6fLn5Ghw" name="pressLeft" specification="_v3dhQoq_EeqIWs6fLn5Ghw">
          <ownedParameter xmi:id="_wDiOY4q_EeqIWs6fLn5Ghw" name="b">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>this.leftPressed = b;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDiOZIq_EeqIWs6fLn5Ghw" name="pressRight" specification="_v3eIUIq_EeqIWs6fLn5Ghw">
          <ownedParameter xmi:id="_wDiOZYq_EeqIWs6fLn5Ghw" name="b">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>this.rightPressed = b;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDiOZoq_EeqIWs6fLn5Ghw" name="pressUp" specification="_v3eIUoq_EeqIWs6fLn5Ghw">
          <ownedParameter xmi:id="_wDiOZ4q_EeqIWs6fLn5Ghw" name="b">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>this.upPressed = b;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDi1cIq_EeqIWs6fLn5Ghw" name="pressDown" specification="_v3evYIq_EeqIWs6fLn5Ghw">
          <ownedParameter xmi:id="_wDi1cYq_EeqIWs6fLn5Ghw" name="b">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>this.downPressed = b;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDi1coq_EeqIWs6fLn5Ghw" name="goUp" specification="_v3evYoq_EeqIWs6fLn5Ghw">
          <language>java</language>
          <body>if(posVert &lt; PosVert_MAX) {
			this.posVert++;
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDi1c4q_EeqIWs6fLn5Ghw" name="goDown" specification="_v3evY4q_EeqIWs6fLn5Ghw">
          <language>java</language>
          <body>if(posVert > 0) {
			this.posVert--;
			this.goDown = true;
		}else {
			this.goDown = false;
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDi1dIq_EeqIWs6fLn5Ghw" name="goLeft" specification="_v3fWcIq_EeqIWs6fLn5Ghw">
          <language>java</language>
          <body>this.posX = posX-deplacement;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDi1dYq_EeqIWs6fLn5Ghw" name="goRight" specification="_v3fWcYq_EeqIWs6fLn5Ghw">
          <language>java</language>
          <body>this.posX = posX+deplacement;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDi1doq_EeqIWs6fLn5Ghw" name="goStraight" specification="_v3fWcoq_EeqIWs6fLn5Ghw">
          <language>java</language>
          <body>this.etatMoto = 1;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDjcgIq_EeqIWs6fLn5Ghw" name="majEtatMoto" specification="_v3fWc4q_EeqIWs6fLn5Ghw">
          <language>java</language>
          <body>if(!this.fin){
			if(leftPressed) {
				if(rightPressed) {
					//si les 2 touche sont pressées en même temps alors on va tout droit 
					this.etatMoto = 1;		
				}else {
					//si seulement la touche pour aller à gauche est pressée alors on va à gauche
					this.etatMoto = 0;
					goLeft();
				}	
			}else {
				if(rightPressed) {
					//si seulement la touche pour aller à droite est pressée alors on va à droite
					this.etatMoto = 2;
					goRight();
				}else {
					//si aucune des 2 touches n'est pressée alors on va tout droit 
					this.etatMoto = 1;
				}
			}
			
			if(this.vitesse &lt; MinVitesseVol) {
				goDown();
			}else {
				if(this.upPressed &amp;&amp; !this.downPressed) {
					goUp();
				}else {
					if(this.downPressed) {
						goDown();
					}
				}
			}
		}	
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDjcgYq_EeqIWs6fLn5Ghw" name="testCollision" specification="_v3f9gIq_EeqIWs6fLn5Ghw">
          <ownedParameter xmi:id="_wDjcgoq_EeqIWs6fLn5Ghw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>// si la moto à une altitude inférieure à 1 (sinon on ingrore les obstacles) (altitude 1 telle qu'affichée à l'utilisateur mais 10 en réalité)
		
			int i=0;
			for(Obstacle o : piste.getObstacles()) {
				Rectangle oBounds = o.getBounds();
				Rectangle mBounds = getMotoBounds();
				
				int mX1 = Affichage.LARG/2;						//bord gauche de la moto
				int mX2 = mX1 + mBounds.width;					//bord droit de la moto
				int mY1 = Affichage.HAUT - mBounds.height;		//bord haut de la moto
				int mY2 = Affichage.HAUT - VueMoto.decBord;		//bord bas de la moto
				
				// si l'obstacle arrive à la position y de la moto
				// c-a-d si le bas de l'obstacle est en dessous du haut de la moto ET que le haut de l'obstacle est au dessus du bas de la moto
				if(oBounds.y + oBounds.height > mY1 &amp;&amp; oBounds.y &lt;= mY2) {
					// si bord gauche de OBS &lt; bord droit de moto ET bord droit de OBS > bord gauche de moto
					if(oBounds.x &lt;= mX2 &amp;&amp; oBounds.x + oBounds.width >= mX1) {
						if(o.isHole()) {
							//collision possible avec le trou seulement si on est sur le sol
							if(this.posVert == 0){
								this.vitesse -= ImpactHole;
								return i;
							}
						}else {
							//sinon obstacle normal collision possible quand on est en dessous de HAUT_OBS
							if(this.posVert &lt; HAUT_OBS) {
								this.vitesse -= ImpactObstacle;
								return i;
							}
							
						}
						
					}
				}
				i++;
			}
		
		return -1;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDjcg4q_EeqIWs6fLn5Ghw" name="CollisionEnnemi" specification="_v3f9goq_EeqIWs6fLn5Ghw">
          <ownedParameter xmi:id="_wDjchIq_EeqIWs6fLn5Ghw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>for (int i=0; i&lt; ennemis.size();i++) {
			Ennemi ennemi = ennemis.get(i);
			Rectangle eBounds = ennemi.getBounds();
			Rectangle mBounds = getMotoBounds();
			
			int mX1 = Affichage.LARG/2;						//bord gauche de la moto
			int mX2 = mX1 + mBounds.width;					//bord droit de la moto
			int mY1 = Affichage.HAUT - mBounds.height;		//bord haut de la moto
			int mY2 = Affichage.HAUT - VueMoto.decBord;		//bord bas de la moto
			
			
			// si la on est en dessous de 1 d'altitude et que l'ennemi arrive à la position y de la moto
			// c-a-d si le bas de l'ennemi est en dessous du haut de la moto ET que le haut de l'ennemi est au dessus du bas de la moto
			if(this.posVert &lt; HAUT_ENNEMIS &amp;&amp; eBounds.y + eBounds.height > mY1 &amp;&amp; eBounds.y &lt;= mY2) {
				
				
				//si bord gauche de ennemi &lt; bord droit de moto ET bord droit de ennemi > bord gauche de moto
				if(eBounds.x &lt;= mX2 &amp;&amp; eBounds.x + eBounds.width >= mX1) {
					//si le haut de la moto est > au haut de l'ennemi, c'est l'ennemi qui perd de la vitesse 
					if(mY1 &lt; eBounds.y ) {
						ennemi.recule();
						
					}else {
						//sinon on retourne l'indice de l'ennemi pour le faire avancer et faire perdre de la vitesse au joueur
						return i;
					}
					
				}
			}
		}
		return -1;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDjchYq_EeqIWs6fLn5Ghw" name="updateDecors" specification="_v3gkkIq_EeqIWs6fLn5Ghw">
          <language>java</language>
          <body>int rdm = randint(0, 100);
		
		for (int i=0; i&lt;decors.size();) {
			Rectangle b = decors.get(i).getBounds();
			//on retire l'obstacle si il sort de la vue
			if(b.y >= Affichage.LARG || b.x+b.width &lt;= 0 || b.x > Affichage.LARG) {
				decors.remove(i);
			}else {
				i++;
			}
		}
		
		//on génére un décor si on a pas atteint le max et avec une certaine probabilité
		if(decors.size() &lt; maxDecors &amp;&amp; rdm &lt; probaDecor) {
			this.decors.add(new Decor(this));
		}
		
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDjchoq_EeqIWs6fLn5Ghw" name="updateEnnemis" specification="_v3gkkYq_EeqIWs6fLn5Ghw">
          <language>java</language>
          <body>for (int i=0; i&lt;ennemis.size();) {
			Rectangle b = ennemis.get(i).getBounds();
			//on retire l'ennemi si il sort de la vue
			if(b.y >= Affichage.HAUT) {
				System.out.println(&quot;y = &quot;+b.y);
				ennemis.remove(i);
				this.addScore();
			}else {
				i++;
			}
		}
		int rdm = randint(0,1000);
		if(ennemis.size() &lt; maxEnnemis &amp;&amp; rdm &lt;= probaEnnemi)ennemis.add(new Ennemi(this));
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDkDkIq_EeqIWs6fLn5Ghw" name="getFin" specification="_v3gkkoq_EeqIWs6fLn5Ghw">
          <ownedParameter xmi:id="_wDkDkYq_EeqIWs6fLn5Ghw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>return fin;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDkDkoq_EeqIWs6fLn5Ghw" name="getPosVert" specification="_v3hLoYq_EeqIWs6fLn5Ghw">
          <ownedParameter xmi:id="_wDkDk4q_EeqIWs6fLn5Ghw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return this.posVert;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDkDlIq_EeqIWs6fLn5Ghw" name="getEtatMoto" specification="_v3hysIq_EeqIWs6fLn5Ghw">
          <ownedParameter xmi:id="_wDkDlYq_EeqIWs6fLn5Ghw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>majEtatMoto();
		return this.etatMoto;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDkDloq_EeqIWs6fLn5Ghw" name="getMotoBounds" specification="_v3hysoq_EeqIWs6fLn5Ghw">
          <ownedParameter xmi:id="_wDkDl4q_EeqIWs6fLn5Ghw" type="_v_ATsYq_EeqIWs6fLn5Ghw" direction="return"/>
          <language>java</language>
          <body>String str = VueMoto.PATH+etatMoto+&quot;.png&quot;;
		try {
			Image image = ImageIO.read(VueMoto.class.getResource(str));
			
			
			int height = image.getHeight(null) + VueMoto.decBord;
			int width = image.getWidth(null);
			int x = posX + Affichage.LARG/2;
			
			int y = getPosY();
			return new Rectangle(x,y,width,height);
			
		}catch (IOException e) {
			e.printStackTrace();
			return new Rectangle(-1,-1,-1,-1);
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDkDmIq_EeqIWs6fLn5Ghw" name="getLargPiste" specification="_v3iZwIq_EeqIWs6fLn5Ghw">
          <ownedParameter xmi:id="_wDkDmYq_EeqIWs6fLn5Ghw" name="i">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_wDkDmoq_EeqIWs6fLn5Ghw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return piste.getLargPiste(i);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDkqoIq_EeqIWs6fLn5Ghw" name="getPosY" specification="_v3iZw4q_EeqIWs6fLn5Ghw">
          <ownedParameter xmi:id="_wDkqoYq_EeqIWs6fLn5Ghw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return piste.getPosY();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDkqooq_EeqIWs6fLn5Ghw" name="getMontagne" specification="_v3jA0Iq_EeqIWs6fLn5Ghw">
          <ownedParameter xmi:id="_wDkqo4q_EeqIWs6fLn5Ghw" type="_v_QLUIq_EeqIWs6fLn5Ghw" direction="return"/>
          <language>java</language>
          <body>return montagne.getPointsVisibles();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDkqpIq_EeqIWs6fLn5Ghw" name="getObstacles" specification="_v3k2AIq_EeqIWs6fLn5Ghw">
          <ownedParameter xmi:id="_wDkqpYq_EeqIWs6fLn5Ghw" type="_v_QLUIq_EeqIWs6fLn5Ghw" direction="return"/>
          <language>java</language>
          <body>int i = testCollision();
		if(i >= 0) {
			this.piste.removeObstacle(i);
		}
		return piste.getObstacles();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDkqpoq_EeqIWs6fLn5Ghw" name="getRetry" specification="_v3mrMIq_EeqIWs6fLn5Ghw">
          <ownedParameter xmi:id="_wDkqp4q_EeqIWs6fLn5Ghw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>if(retry) {
			this.retry = false;
			return true;
		}else {
			return false;
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDkqqIq_EeqIWs6fLn5Ghw" name="setThreads" specification="_v_Vq4Iq_EeqIWs6fLn5Ghw">
          <ownedParameter xmi:id="_wDkqqYq_EeqIWs6fLn5Ghw" name="threads" type="_v3A1UIq_EeqIWs6fLn5Ghw">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wDkqqoq_EeqIWs6fLn5Ghw" value="*"/>
          </ownedParameter>
          <language>java</language>
          <body>this.threads= threads; 
		for(StoppableThread t : threads) {
			t.start();
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDlRsIq_EeqIWs6fLn5Ghw" name="randint" specification="_v3nSQIq_EeqIWs6fLn5Ghw">
          <ownedParameter xmi:id="_wDlRsYq_EeqIWs6fLn5Ghw" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_wDlRsoq_EeqIWs6fLn5Ghw" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_wDlRs4q_EeqIWs6fLn5Ghw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return ThreadLocalRandom.current().nextInt(min, max + 1);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDlRtIq_EeqIWs6fLn5Ghw" name="retry" specification="_v3n5UYq_EeqIWs6fLn5Ghw">
          <language>java</language>
          <body>this.retry = true;
		this.goDown = false;
		this.leftPressed = false;
		this.rightPressed = false;
		this.upPressed = false;
		this.downPressed = false;
		this.piste = new Piste(this);
		this.check.restart();
		this.posX = 0;
		this.accel = 100.;
		this.vitesse =  vitesseMax;
		this.montagne = new Montagne(this);
		this.etatMoto = 1;
		this.posVert = 0;
		this.decors = new ArrayList&lt;Decor>();
		this.ennemis = new ArrayList&lt;Ennemi>();
		this.score = 0;
		this.fin = false;
		
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDlRtYq_EeqIWs6fLn5Ghw" name="addScore" specification="_v3n5Uoq_EeqIWs6fLn5Ghw">
          <language>java</language>
          <body>System.out.println(&quot;ADD SCORE&quot;);
		score += ADD_SCORE;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_v3bsEIq_EeqIWs6fLn5Ghw" name="Etat" method="_wDhARoq_EeqIWs6fLn5Ghw">
          <eAnnotations xmi:id="_v3bsEYq_EeqIWs6fLn5Ghw" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_v3bsEoq_EeqIWs6fLn5Ghw" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_wD6B0Iq_EeqIWs6fLn5Ghw">
            <body>Constructor</body>
          </ownedComment>
          <ownedParameter xmi:id="_v3bsE4q_EeqIWs6fLn5Ghw" type="_v3YowIq_EeqIWs6fLn5Ghw" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_v3cTIIq_EeqIWs6fLn5Ghw" name="projection" visibility="package" method="_wDhnUIq_EeqIWs6fLn5Ghw">
          <ownedComment xmi:id="_wD6B0Yq_EeqIWs6fLn5Ghw">
            <body>Cette méthode calcule la projection sur l'écran (plan xOy) d'un point définir par ses coordonnées x,y,z.</body>
          </ownedComment>
          <ownedParameter xmi:id="_v3cTIYq_EeqIWs6fLn5Ghw" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_v3cTIoq_EeqIWs6fLn5Ghw" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_v3cTI4q_EeqIWs6fLn5Ghw" name="z">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_wAtj4Iq_EeqIWs6fLn5Ghw" type="_v--egIq_EeqIWs6fLn5Ghw" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_v3c6MIq_EeqIWs6fLn5Ghw" name="testCheckpoint" method="_wDhnVYq_EeqIWs6fLn5Ghw">
          <ownedComment xmi:id="_wD6B0oq_EeqIWs6fLn5Ghw">
            <body>on ajoute du temps quand la moto atteint un checkpoint</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_v3c6MYq_EeqIWs6fLn5Ghw" name="gameOver" method="_wDhnVoq_EeqIWs6fLn5Ghw">
          <ownedComment xmi:id="_wD6B04q_EeqIWs6fLn5Ghw">
            <body>lance le game over, vitesse et accel à 0
	 * et stoppe tout les threads</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_v3c6Moq_EeqIWs6fLn5Ghw" name="updateVitesse" method="_wDhnV4q_EeqIWs6fLn5Ghw">
          <ownedComment xmi:id="_wD6B1Iq_EeqIWs6fLn5Ghw">
            <body>Met à jour la vitesse par rapport à l'accélération
	 * appelé par {@link control.Vitesse Vitesse}</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_v3dhQIq_EeqIWs6fLn5Ghw" name="updateAccel" visibility="private" method="_wDiOYIq_EeqIWs6fLn5Ghw">
          <ownedComment xmi:id="_wD6B1Yq_EeqIWs6fLn5Ghw">
            <body>on réduit {@link #accel} si on s'écarte du centre de la fenetre
	 * et on l'augmente sinon</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_v3dhQYq_EeqIWs6fLn5Ghw" name="avance" method="_wDiOYYq_EeqIWs6fLn5Ghw">
          <ownedComment xmi:id="_wD6B1oq_EeqIWs6fLn5Ghw">
            <body>Avance {@link Piste#posY} en fonction de {@link #vitesse}</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_v3dhQoq_EeqIWs6fLn5Ghw" name="pressLeft" method="_wDiOYoq_EeqIWs6fLn5Ghw">
          <ownedComment xmi:id="_wD6B14q_EeqIWs6fLn5Ghw">
            <body>On change la valeur de {@link leftPressed} par b
	 * @param b</body>
          </ownedComment>
          <ownedParameter xmi:id="_v3dhQ4q_EeqIWs6fLn5Ghw" name="b">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_v3eIUIq_EeqIWs6fLn5Ghw" name="pressRight" method="_wDiOZIq_EeqIWs6fLn5Ghw">
          <ownedComment xmi:id="_wD6B2Iq_EeqIWs6fLn5Ghw">
            <body>On change la valeur de {@link rightPressed} par b
	 * @param b</body>
          </ownedComment>
          <ownedParameter xmi:id="_v3eIUYq_EeqIWs6fLn5Ghw" name="b">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_v3eIUoq_EeqIWs6fLn5Ghw" name="pressUp" method="_wDiOZoq_EeqIWs6fLn5Ghw">
          <ownedComment xmi:id="_wD6o4Iq_EeqIWs6fLn5Ghw">
            <body>On change la valeur de {@link upPressed} par b
	 * @param b</body>
          </ownedComment>
          <ownedParameter xmi:id="_v3eIU4q_EeqIWs6fLn5Ghw" name="b">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_v3evYIq_EeqIWs6fLn5Ghw" name="pressDown" method="_wDi1cIq_EeqIWs6fLn5Ghw">
          <ownedComment xmi:id="_wD6o4Yq_EeqIWs6fLn5Ghw">
            <body>On change la valeur de {@link downPressed} par b
	 * @param b</body>
          </ownedComment>
          <ownedParameter xmi:id="_v3evYYq_EeqIWs6fLn5Ghw" name="b">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_v3evYoq_EeqIWs6fLn5Ghw" name="goUp" method="_wDi1coq_EeqIWs6fLn5Ghw">
          <ownedComment xmi:id="_wD6o4oq_EeqIWs6fLn5Ghw">
            <body>fait monter la moto</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_v3evY4q_EeqIWs6fLn5Ghw" name="goDown" method="_wDi1c4q_EeqIWs6fLn5Ghw">
          <ownedComment xmi:id="_wD6o44q_EeqIWs6fLn5Ghw">
            <body>Fait descendre la moto si on est dans les airs</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_v3fWcIq_EeqIWs6fLn5Ghw" name="goLeft" method="_wDi1dIq_EeqIWs6fLn5Ghw">
          <ownedComment xmi:id="_wD6o5Iq_EeqIWs6fLn5Ghw">
            <body>Décale {@link #posX} vers la gauche (x négatif)
	 * et l'{@link #etatMoto} est mit à 0 pour l'image de moto qui tourne à gauche</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_v3fWcYq_EeqIWs6fLn5Ghw" name="goRight" method="_wDi1dYq_EeqIWs6fLn5Ghw">
          <ownedComment xmi:id="_wD6o5Yq_EeqIWs6fLn5Ghw">
            <body>Décale {@link #posX} vers la droite (x négatif)
	 * et l'{@link #etatMoto} est mit à 2 pour l'image de moto qui tourne à droite</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_v3fWcoq_EeqIWs6fLn5Ghw" name="goStraight" method="_wDi1doq_EeqIWs6fLn5Ghw">
          <ownedComment xmi:id="_wD6o5oq_EeqIWs6fLn5Ghw">
            <body>l'{@link #etatMoto} est mit à 1 pour l'image de la moto qui va tout droit</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_v3fWc4q_EeqIWs6fLn5Ghw" name="majEtatMoto" visibility="private" method="_wDjcgIq_EeqIWs6fLn5Ghw">
          <ownedComment xmi:id="_wD6o54q_EeqIWs6fLn5Ghw">
            <body>met à jour l'état de la moto et déplace la moto vers la gauche où la droite 
	 * en fonction des valeurs de {@link #leftPressed} et {@link #rightPressed}</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_v3f9gIq_EeqIWs6fLn5Ghw" name="testCollision" method="_wDjcgYq_EeqIWs6fLn5Ghw">
          <ownedComment xmi:id="_wD6o6Iq_EeqIWs6fLn5Ghw">
            <body>@param g
	 * @return l'indice d'un obstacle si la moto est en collision avec cet obstacle, -1 si il n'y a pas de collision</body>
          </ownedComment>
          <ownedParameter xmi:id="_v3f9gYq_EeqIWs6fLn5Ghw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_v3f9goq_EeqIWs6fLn5Ghw" name="CollisionEnnemi" method="_wDjcg4q_EeqIWs6fLn5Ghw">
          <ownedComment xmi:id="_wD6o6Yq_EeqIWs6fLn5Ghw">
            <body>parcoure {@link #ennemis la liste des ennemis} et si le joueur est en collision avec un d'eux on fait 
	 * avancer l'ennemi si il est devant et le fait reculer sinon 
	 * @return</body>
          </ownedComment>
          <ownedParameter xmi:id="_v3f9g4q_EeqIWs6fLn5Ghw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_v3gkkIq_EeqIWs6fLn5Ghw" name="updateDecors" method="_wDjchYq_EeqIWs6fLn5Ghw">
          <ownedComment xmi:id="_wD7P8Iq_EeqIWs6fLn5Ghw">
            <body>met à jour {@link #decors la liste des décors}</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_v3gkkYq_EeqIWs6fLn5Ghw" name="updateEnnemis" method="_wDjchoq_EeqIWs6fLn5Ghw">
          <ownedComment xmi:id="_wD7P8Yq_EeqIWs6fLn5Ghw">
            <body>met à jour {@link #ennemis la liste des ennemis}</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_v3gkkoq_EeqIWs6fLn5Ghw" name="getFin" method="_wDkDkIq_EeqIWs6fLn5Ghw">
          <ownedComment xmi:id="_wD7P8oq_EeqIWs6fLn5Ghw">
            <body>@return true si on a perdu, false sinon</body>
          </ownedComment>
          <ownedParameter xmi:id="_v3hLoIq_EeqIWs6fLn5Ghw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_v3hLoYq_EeqIWs6fLn5Ghw" name="getPosVert" method="_wDkDkoq_EeqIWs6fLn5Ghw">
          <ownedComment xmi:id="_wD7P84q_EeqIWs6fLn5Ghw">
            <body>@return {@link #posVert}</body>
          </ownedComment>
          <ownedParameter xmi:id="_v3hLooq_EeqIWs6fLn5Ghw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_v3hysIq_EeqIWs6fLn5Ghw" name="getEtatMoto" method="_wDkDlIq_EeqIWs6fLn5Ghw">
          <ownedComment xmi:id="_wD7P9Iq_EeqIWs6fLn5Ghw">
            <body>@return {@link #etatMoto}</body>
          </ownedComment>
          <ownedParameter xmi:id="_v3hysYq_EeqIWs6fLn5Ghw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_v3hysoq_EeqIWs6fLn5Ghw" name="getMotoBounds" visibility="private" method="_wDkDloq_EeqIWs6fLn5Ghw">
          <ownedComment xmi:id="_wD7P9Yq_EeqIWs6fLn5Ghw">
            <body>@return un {@link Rectangle} correspondant à la position et la taille de la moto</body>
          </ownedComment>
          <ownedParameter xmi:id="_wAuK8Iq_EeqIWs6fLn5Ghw" type="_v_ATsYq_EeqIWs6fLn5Ghw" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_v3iZwIq_EeqIWs6fLn5Ghw" name="getLargPiste" method="_wDkDmIq_EeqIWs6fLn5Ghw">
          <ownedComment xmi:id="_wD7P9oq_EeqIWs6fLn5Ghw">
            <body>@param i
	 * @return la largeur de la piste à son point i</body>
          </ownedComment>
          <ownedParameter xmi:id="_v3iZwYq_EeqIWs6fLn5Ghw" name="i">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_v3iZwoq_EeqIWs6fLn5Ghw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_v3iZw4q_EeqIWs6fLn5Ghw" name="getPosY" method="_wDkqoIq_EeqIWs6fLn5Ghw">
          <ownedComment xmi:id="_wD7P94q_EeqIWs6fLn5Ghw">
            <body>@return la position Y du joueur {@link Piste#posY}</body>
          </ownedComment>
          <ownedParameter xmi:id="_v3iZxIq_EeqIWs6fLn5Ghw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_v3jA0Iq_EeqIWs6fLn5Ghw" name="getMontagne" method="_wDkqooq_EeqIWs6fLn5Ghw">
          <ownedComment xmi:id="_wD7P-Iq_EeqIWs6fLn5Ghw">
            <body>@return {@link Montagne#getPointsVisibles()}</body>
          </ownedComment>
          <ownedParameter xmi:id="_wAuK8Yq_EeqIWs6fLn5Ghw" type="_v_QLUIq_EeqIWs6fLn5Ghw" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_v3k2AIq_EeqIWs6fLn5Ghw" name="getObstacles" method="_wDkqpIq_EeqIWs6fLn5Ghw">
          <ownedComment xmi:id="_wD7P-Yq_EeqIWs6fLn5Ghw">
            <body>@return la liste des obstacles</body>
          </ownedComment>
          <ownedParameter xmi:id="_wAuyAIq_EeqIWs6fLn5Ghw" type="_v_QLUIq_EeqIWs6fLn5Ghw" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_v3mrMIq_EeqIWs6fLn5Ghw" name="getRetry" method="_wDkqpoq_EeqIWs6fLn5Ghw">
          <ownedComment xmi:id="_wD7P-oq_EeqIWs6fLn5Ghw">
            <body>indique à l'affichage si on est en train de relancer une partie</body>
          </ownedComment>
          <ownedParameter xmi:id="_v3mrMYq_EeqIWs6fLn5Ghw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_v3nSQIq_EeqIWs6fLn5Ghw" name="randint" visibility="private" method="_wDlRsIq_EeqIWs6fLn5Ghw">
          <ownedComment xmi:id="_wD73AIq_EeqIWs6fLn5Ghw">
            <body>Génère un chiffre aléatoire entre min et max
	 * @param int min
	 * @param int max
	 * @return random int between min and max</body>
          </ownedComment>
          <ownedParameter xmi:id="_v3nSQYq_EeqIWs6fLn5Ghw" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_v3nSQoq_EeqIWs6fLn5Ghw" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_v3n5UIq_EeqIWs6fLn5Ghw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_v3n5UYq_EeqIWs6fLn5Ghw" name="retry" method="_wDlRtIq_EeqIWs6fLn5Ghw">
          <ownedComment xmi:id="_wD73AYq_EeqIWs6fLn5Ghw">
            <body>relance une nouvelle partie</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_v3n5Uoq_EeqIWs6fLn5Ghw" name="addScore" visibility="private" method="_wDlRtYq_EeqIWs6fLn5Ghw">
          <ownedComment xmi:id="_wD73Aoq_EeqIWs6fLn5Ghw">
            <body>ajoute du score (appelé quand on dépasse un ennemi)</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_v_Vq4Iq_EeqIWs6fLn5Ghw" name="setThreads" method="_wDkqqIq_EeqIWs6fLn5Ghw">
          <ownedComment xmi:id="_wD7P-4q_EeqIWs6fLn5Ghw">
            <body>@param threads récupérés depuis {@link main.Main Main}
	 * on récupère les {@link Threads} et on les lance</body>
          </ownedComment>
          <ownedParameter xmi:id="_v_WR8Iq_EeqIWs6fLn5Ghw" name="threads" type="_v3A1UIq_EeqIWs6fLn5Ghw">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v_WR8Yq_EeqIWs6fLn5Ghw" value="*"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_v35mIIq_EeqIWs6fLn5Ghw" name="Montagne">
        <ownedAttribute xmi:id="_wCj-AIq_EeqIWs6fLn5Ghw" name="etat" visibility="private" type="_v3YowIq_EeqIWs6fLn5Ghw" association="_wEURgYq_EeqIWs6fLn5Ghw"/>
        <ownedAttribute xmi:id="_wCklEIq_EeqIWs6fLn5Ghw" name="points" visibility="private" type="_v_QLUIq_EeqIWs6fLn5Ghw" association="_wEVfoIq_EeqIWs6fLn5Ghw"/>
        <ownedAttribute xmi:id="_wClzMYq_EeqIWs6fLn5Ghw" name="ecartMin" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_wCmaQYq_EeqIWs6fLn5Ghw" name="ecartMax" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_wCnBUIq_EeqIWs6fLn5Ghw" name="yMin" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_wCnBUYq_EeqIWs6fLn5Ghw" value="Affichage.posHorizon/4"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDnG4Iq_EeqIWs6fLn5Ghw" name="Montagne" specification="_v_ifMIq_EeqIWs6fLn5Ghw">
          <ownedParameter xmi:id="_wDnG4Yq_EeqIWs6fLn5Ghw" name="etat" type="_v3YowIq_EeqIWs6fLn5Ghw"/>
          <ownedParameter xmi:id="_wDnG4oq_EeqIWs6fLn5Ghw" type="_v35mIIq_EeqIWs6fLn5Ghw" direction="return"/>
          <language>java</language>
          <body>this.etat = etat;
		this.ecartMin = 50;
		this.ecartMax = 70;
		initPoints();	
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDnG44q_EeqIWs6fLn5Ghw" name="initPoints" specification="_v4AT0Iq_EeqIWs6fLn5Ghw">
          <language>java</language>
          <body>this.points = new ArrayList&lt;Point>();
		for(int i=0; i&lt;Affichage.LARG; i+= randint(ecartMin,ecartMax)) {
			int y = randint(yMin,Affichage.posHorizon);
			this.points.add(new Point(i,y));
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDnG5Iq_EeqIWs6fLn5Ghw" name="updatePoints" specification="_v4Bh8Iq_EeqIWs6fLn5Ghw">
          <language>java</language>
          <body>if(etat.getPosX() &lt; points.get(0).x){
			addPointGauche();
		}else {
			if( etat.getPosX() + Affichage.LARG> points.get(points.size()-1).x ){
				addPointDroite();
			}
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDnt8Iq_EeqIWs6fLn5Ghw" name="addPointGauche" specification="_v4CwEIq_EeqIWs6fLn5Ghw">
          <language>java</language>
          <body>int x = points.get(0).x - randint(ecartMin, ecartMax);
		int y =  randint(yMin, Affichage.posHorizon);
		// ajout au début
		points.add(0, new Point(x,y));
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDnt8Yq_EeqIWs6fLn5Ghw" name="addPointDroite" specification="_v4DXIIq_EeqIWs6fLn5Ghw">
          <language>java</language>
          <body>int x = points.get(points.size()-1).x + randint(ecartMin, ecartMax);
		int y =  randint(yMin, Affichage.posHorizon);
		// ajout à la fin
		points.add(new Point(x,y));
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDnt8oq_EeqIWs6fLn5Ghw" name="getPointsVisibles" specification="_v4ElQIq_EeqIWs6fLn5Ghw">
          <ownedParameter xmi:id="_wDnt84q_EeqIWs6fLn5Ghw" type="_v_QLUIq_EeqIWs6fLn5Ghw" direction="return"/>
          <language>java</language>
          <body>updatePoints();
		ArrayList&lt;Point> res = new ArrayList&lt;Point>();
		for(Point p : points) {
			//si point visible
			if(p.x >= etat.getPosX()-ecartMax &amp;&amp; p.x &lt;= etat.getPosX()+ecartMax+Affichage.LARG) {
				res.add(new Point(p.x-etat.getPosX(),p.y));
			}
		}
		return res;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDnt9Iq_EeqIWs6fLn5Ghw" name="randint" specification="_v4KE0Iq_EeqIWs6fLn5Ghw">
          <ownedParameter xmi:id="_wDnt9Yq_EeqIWs6fLn5Ghw" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_wDnt9oq_EeqIWs6fLn5Ghw" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_wDnt94q_EeqIWs6fLn5Ghw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return ThreadLocalRandom.current().nextInt(min, max + 1);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_v4AT0Iq_EeqIWs6fLn5Ghw" name="initPoints" visibility="private" method="_wDnG44q_EeqIWs6fLn5Ghw">
          <ownedComment xmi:id="_wD73A4q_EeqIWs6fLn5Ghw">
            <body>Initialise les points de la montagne qui sont visible dès le début</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_v4Bh8Iq_EeqIWs6fLn5Ghw" name="updatePoints" visibility="private" method="_wDnG5Iq_EeqIWs6fLn5Ghw">
          <ownedComment xmi:id="_wD73BIq_EeqIWs6fLn5Ghw">
            <body>Ajoute des points à droite où à gauche quand on découvre une nouvelle partie de la montagne.
	 * On garde tout les points pour que la montagne soit la même quand on revient à la même {@link Etat#posX}</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_v4CwEIq_EeqIWs6fLn5Ghw" name="addPointGauche" visibility="private" method="_wDnt8Iq_EeqIWs6fLn5Ghw">
          <ownedComment xmi:id="_wD73BYq_EeqIWs6fLn5Ghw">
            <body>ajoute un point à gauche de la chaîne de montagne</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_v4DXIIq_EeqIWs6fLn5Ghw" name="addPointDroite" visibility="private" method="_wDnt8Yq_EeqIWs6fLn5Ghw">
          <ownedComment xmi:id="_wD73Boq_EeqIWs6fLn5Ghw">
            <body>ajoute un point à droite de la chaîne de montagne</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_v4ElQIq_EeqIWs6fLn5Ghw" name="getPointsVisibles" method="_wDnt8oq_EeqIWs6fLn5Ghw">
          <ownedComment xmi:id="_wD73B4q_EeqIWs6fLn5Ghw">
            <body>@return une liste des points de la montagne qui sont visibles par le joueur</body>
          </ownedComment>
          <ownedParameter xmi:id="_wA2GwIq_EeqIWs6fLn5Ghw" type="_v_QLUIq_EeqIWs6fLn5Ghw" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_v4KE0Iq_EeqIWs6fLn5Ghw" name="randint" method="_wDnt9Iq_EeqIWs6fLn5Ghw">
          <ownedComment xmi:id="_wD73CIq_EeqIWs6fLn5Ghw">
            <body>Génère un chiffre aléatoire entre min et max
	 * @param min
	 * @param max
	 * @return random int between min and max</body>
          </ownedComment>
          <ownedParameter xmi:id="_v4KE0Yq_EeqIWs6fLn5Ghw" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_v4KE0oq_EeqIWs6fLn5Ghw" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_v4Kr4Iq_EeqIWs6fLn5Ghw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_v_ifMIq_EeqIWs6fLn5Ghw" name="Montagne" method="_wDnG4Iq_EeqIWs6fLn5Ghw">
          <eAnnotations xmi:id="_v_ifMoq_EeqIWs6fLn5Ghw" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_v_ifM4q_EeqIWs6fLn5Ghw" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_v_ifMYq_EeqIWs6fLn5Ghw" name="etat" type="_v3YowIq_EeqIWs6fLn5Ghw"/>
          <ownedParameter xmi:id="_v_ifNIq_EeqIWs6fLn5Ghw" type="_v35mIIq_EeqIWs6fLn5Ghw" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_v4NIIIq_EeqIWs6fLn5Ghw" name="Obstacle">
        <ownedAttribute xmi:id="_wCnoYIq_EeqIWs6fLn5Ghw" name="piste" visibility="private" type="_v4YuUIq_EeqIWs6fLn5Ghw" association="_wEWGsIq_EeqIWs6fLn5Ghw"/>
        <ownedAttribute xmi:id="_wCoPcYq_EeqIWs6fLn5Ghw" name="etat" visibility="private" type="_v3YowIq_EeqIWs6fLn5Ghw" association="_wEWtwYq_EeqIWs6fLn5Ghw"/>
        <ownedAttribute xmi:id="_wCo2gYq_EeqIWs6fLn5Ghw" name="x" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_wCpdkYq_EeqIWs6fLn5Ghw" name="y" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_wCrSwIq_EeqIWs6fLn5Ghw" name="width" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_wCr50Yq_EeqIWs6fLn5Ghw" name="height" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_wCsg4Yq_EeqIWs6fLn5Ghw" name="isHole" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDoVAoq_EeqIWs6fLn5Ghw" name="Obstacle" specification="_v_k7cIq_EeqIWs6fLn5Ghw">
          <ownedParameter xmi:id="_wDoVA4q_EeqIWs6fLn5Ghw" name="piste" type="_v4YuUIq_EeqIWs6fLn5Ghw"/>
          <ownedParameter xmi:id="_wDoVBIq_EeqIWs6fLn5Ghw" name="etat" type="_v3YowIq_EeqIWs6fLn5Ghw"/>
          <ownedParameter xmi:id="_wDoVBYq_EeqIWs6fLn5Ghw" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_wDoVBoq_EeqIWs6fLn5Ghw" type="_v4NIIIq_EeqIWs6fLn5Ghw" direction="return"/>
          <language>java</language>
          <body>this.piste = piste;
		this.etat = etat;
		this.y =  y;
		
		if(randint(0,2) == 0) {
			//1 chance sur 3 que l'obstacle soit un trou
			this.width = 100;
			this.height = 50;
			
			switch (randint(0,2)) {
			case 0:
				this.x =  - Piste.largeurPiste/3 - height/2;
				break;
			case 1 :
				this.x =  - height/2;
				break;
			case 2:
				this.x =  Piste.largeurPiste/3 - height/2;
				break;
			default:
				break;
			}
			
			this.isHole = true;
		}else {
			this.x = randint(-Piste.largeurPiste/2,+Piste.largeurPiste/2);
			this.width = randint(50, 100);
			this.height = randint(50, 100);
			this.isHole = false;
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDo8EIq_EeqIWs6fLn5Ghw" name="getBounds" specification="_v4Uc4Iq_EeqIWs6fLn5Ghw">
          <ownedParameter xmi:id="_wDo8EYq_EeqIWs6fLn5Ghw" type="_v_ATsYq_EeqIWs6fLn5Ghw" direction="return"/>
          <language>java</language>
          <body>Point p1 = new Point(x+Affichage.LARG/2-etat.getPosX(), getY());	//p1 : point en bas à gauche
		Point p3 = etat.projection(p1.x,0,p1.y);							//p3 : projection de p1 sur le plan (hauteur = 0)
		Point p2 = etat.projection(p1.x+width, 0, p1.y);					//p2 : projection du point en bas à droite sur le plan (hauteur = 0)
		
		int haut =  etat.projection(p1.x, height, p1.y).y - p3.y;			//haut : y du point en haut à gauche (projeté sur le plan) - y de p3
		int larg = p2.x-p3.x;												//larg : x de p2 - x de p1
		
		return new Rectangle(p3.x, Affichage.HAUT - p3.y, larg, haut);		// on renvoie direct les coordonnées avec Y inversé
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDo8Eoq_EeqIWs6fLn5Ghw" name="isHole" specification="_v4VD8Iq_EeqIWs6fLn5Ghw">
          <ownedParameter xmi:id="_wDo8E4q_EeqIWs6fLn5Ghw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>return this.isHole;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDo8FIq_EeqIWs6fLn5Ghw" name="randint" specification="_v4VD8oq_EeqIWs6fLn5Ghw">
          <ownedParameter xmi:id="_wDo8FYq_EeqIWs6fLn5Ghw" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_wDo8Foq_EeqIWs6fLn5Ghw" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_wDo8F4q_EeqIWs6fLn5Ghw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return ThreadLocalRandom.current().nextInt(min, max + 1);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_v4Uc4Iq_EeqIWs6fLn5Ghw" name="getBounds" method="_wDo8EIq_EeqIWs6fLn5Ghw">
          <ownedComment xmi:id="_wD8eEIq_EeqIWs6fLn5Ghw">
            <body>@return un {@link Rectangle} correspondant aux coordonées et taille de l'obstacle à l'affichage</body>
          </ownedComment>
          <ownedParameter xmi:id="_wA378Iq_EeqIWs6fLn5Ghw" type="_v_ATsYq_EeqIWs6fLn5Ghw" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_v4VD8Iq_EeqIWs6fLn5Ghw" name="isHole" method="_wDo8Eoq_EeqIWs6fLn5Ghw">
          <ownedComment xmi:id="_wD8eEYq_EeqIWs6fLn5Ghw">
            <body>@return true si l'obstacle est un trou, false sinon</body>
          </ownedComment>
          <ownedParameter xmi:id="_v4VD8Yq_EeqIWs6fLn5Ghw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_v4VD8oq_EeqIWs6fLn5Ghw" name="randint" visibility="private" method="_wDo8FIq_EeqIWs6fLn5Ghw">
          <ownedComment xmi:id="_wD8eEoq_EeqIWs6fLn5Ghw">
            <body>Génère un chiffre aléatoire entre min et max
	 * @param int min
	 * @param int max
	 * @return random int between min and max</body>
          </ownedComment>
          <ownedParameter xmi:id="_v4VrAIq_EeqIWs6fLn5Ghw" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_v4VrAYq_EeqIWs6fLn5Ghw" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_v4VrAoq_EeqIWs6fLn5Ghw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_v_k7cIq_EeqIWs6fLn5Ghw" name="Obstacle" method="_wDoVAoq_EeqIWs6fLn5Ghw">
          <eAnnotations xmi:id="_v_ligoq_EeqIWs6fLn5Ghw" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_v_lig4q_EeqIWs6fLn5Ghw" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_v_k7cYq_EeqIWs6fLn5Ghw" name="piste" type="_v4YuUIq_EeqIWs6fLn5Ghw"/>
          <ownedParameter xmi:id="_v_ligIq_EeqIWs6fLn5Ghw" name="etat" type="_v3YowIq_EeqIWs6fLn5Ghw"/>
          <ownedParameter xmi:id="_v_ligYq_EeqIWs6fLn5Ghw" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_v_lihIq_EeqIWs6fLn5Ghw" type="_v4NIIIq_EeqIWs6fLn5Ghw" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_v4YuUIq_EeqIWs6fLn5Ghw" name="Piste">
        <ownedAttribute xmi:id="_wCtvAIq_EeqIWs6fLn5Ghw" name="factRetrecissement" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_wCtvAYq_EeqIWs6fLn5Ghw" value="1/2.5"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_wCuWEIq_EeqIWs6fLn5Ghw" name="largeurPiste" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_wCuWEYq_EeqIWs6fLn5Ghw" value="600"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_wCu9IIq_EeqIWs6fLn5Ghw" name="ObstaclesMax" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_wCvkMIq_EeqIWs6fLn5Ghw" value="5"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_wCwLQIq_EeqIWs6fLn5Ghw" name="incr" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_wCwLQYq_EeqIWs6fLn5Ghw" value="Affichage.HAUT/4"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_wCwyUYq_EeqIWs6fLn5Ghw" name="dec" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_wCwyUoq_EeqIWs6fLn5Ghw" value="50"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_wCxZYYq_EeqIWs6fLn5Ghw" name="probaObstacle" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_wCyAcIq_EeqIWs6fLn5Ghw" value="100"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_wCyngIq_EeqIWs6fLn5Ghw" name="points" visibility="private" type="_v_QLUIq_EeqIWs6fLn5Ghw" association="_wEXU0Yq_EeqIWs6fLn5Ghw"/>
        <ownedAttribute xmi:id="_wCz1oYq_EeqIWs6fLn5Ghw" name="posY" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_wCz1ooq_EeqIWs6fLn5Ghw" name="obstacles" type="_v_QLUIq_EeqIWs6fLn5Ghw" isReadOnly="true" association="_wEYi8Iq_EeqIWs6fLn5Ghw"/>
        <ownedAttribute xmi:id="_wC4HEIq_EeqIWs6fLn5Ghw" name="etat" visibility="private" type="_v3YowIq_EeqIWs6fLn5Ghw" association="_wEZKAYq_EeqIWs6fLn5Ghw"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDpjIoq_EeqIWs6fLn5Ghw" name="Piste" specification="_v_ol0Iq_EeqIWs6fLn5Ghw">
          <ownedParameter xmi:id="_wDpjI4q_EeqIWs6fLn5Ghw" name="etat" type="_v3YowIq_EeqIWs6fLn5Ghw"/>
          <ownedParameter xmi:id="_wDpjJIq_EeqIWs6fLn5Ghw" type="_v4YuUIq_EeqIWs6fLn5Ghw" direction="return"/>
          <language>java</language>
          <body>this.etat = etat;
		this.points = new ArrayList&lt;Point>();
		this.posY = 0;
		this.obstacles = new ArrayList&lt;Obstacle>();
		initPoints();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDpjJYq_EeqIWs6fLn5Ghw" name="initPoints" specification="_v4e08Iq_EeqIWs6fLn5Ghw">
          <language>java</language>
          <body>for(int i=0; i&lt;Affichage.HAUT-Affichage.posHorizon; i+=incr) {
			int x = randint(-largeurPiste/2-dec,-largeurPiste/2+dec) + Affichage.LARG/2;
			this.points.add(new Point(x,i));
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDqKMIq_EeqIWs6fLn5Ghw" name="addPoint" specification="_v4e08Yq_EeqIWs6fLn5Ghw">
          <language>java</language>
          <body>int y = points.get(points.size()-1).y + incr;
		int x = randint(-largeurPiste/2-dec,-largeurPiste/2+dec) + Affichage.LARG/2;
		this.points.add(new Point(x,y));
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDqKMYq_EeqIWs6fLn5Ghw" name="updatePoints" specification="_v4fcAIq_EeqIWs6fLn5Ghw">
          <language>java</language>
          <body>//on ajoute un point si le dernier point entre dans le champ de vision 
		if(points.get(points.size()-1).y  &lt; posY + Affichage.max_prof) {
			addPoint();
		}
		//on retire le 1er point si le deuxième sort de la fenêtre (par le bas)
		if(points.get(1).y  &lt; posY) {
			points.remove(0);
		}
		
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDqKMoq_EeqIWs6fLn5Ghw" name="getPiste" specification="_v4fcAYq_EeqIWs6fLn5Ghw">
          <ownedParameter xmi:id="_wDqKM4q_EeqIWs6fLn5Ghw" type="_v--egIq_EeqIWs6fLn5Ghw" direction="return">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wDqKNIq_EeqIWs6fLn5Ghw" value="*"/>
          </ownedParameter>
          <language>java</language>
          <body>updatePoints();
		Point[][] res = new Point[points.size()][2]; 
		for(int i=0; i&lt;points.size(); i++) {
			Point p = points.get(i);
			
			res[i][0]= new Point(p.x , p.y - posY);
			res[i][1]= new Point(p.x+largeurPiste , p.y - posY);
		}
		
		return res;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDqKNYq_EeqIWs6fLn5Ghw" name="getLargPiste" specification="_v4gqIIq_EeqIWs6fLn5Ghw">
          <ownedParameter xmi:id="_wDqKNoq_EeqIWs6fLn5Ghw" name="i">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_wDqKN4q_EeqIWs6fLn5Ghw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>// on récupère la piste avec perspective
		Point[][] piste = getPiste();
		Point[] p = piste[i];
		// pointDeDroite.x - pointDeGauche.x
		return (p[1].x - p[0].x);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDqxQIq_EeqIWs6fLn5Ghw" name="getLargPisteEnY" specification="_v4pNAIq_EeqIWs6fLn5Ghw">
          <ownedParameter xmi:id="_wDqxQYq_EeqIWs6fLn5Ghw" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_wDqxQoq_EeqIWs6fLn5Ghw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>int i = 0;
		for(Point p : this.points) {
			if(y == p.y ) {
				Point[][] piste = getPiste(); 
				if(i&lt;piste.length) {
					return piste[i][1].x - piste[i][0].x;
				}else {
					System.err.println(&quot;Erreur : getLargPisteEnY le i trouvé est invalide !!! &quot;+i);
					etat.gameOver();
				}
			}
			i++;
		}
		System.err.println(&quot;Erreur : appel de getLargPisteEnY avec un y invalide !!! &quot;+y);
		
		for(Point p : this.points) {
			System.err.println(p.y);
		}
		//on arrete le jeu si il y a une erreur 
		etat.gameOver();
		return -1;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDqxQ4q_EeqIWs6fLn5Ghw" name="avance" specification="_v4p0EIq_EeqIWs6fLn5Ghw">
          <ownedParameter xmi:id="_wDqxRIq_EeqIWs6fLn5Ghw" name="v">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>this.posY += v;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDqxRYq_EeqIWs6fLn5Ghw" name="getMidX" specification="_v4qbIIq_EeqIWs6fLn5Ghw">
          <ownedParameter xmi:id="_wDqxRoq_EeqIWs6fLn5Ghw" name="i">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_wDqxR4q_EeqIWs6fLn5Ghw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>if(i>=0 &amp;&amp; i&lt;points.size()) {
			return points.get(i).x + largeurPiste/2;
		}else {
			System.err.println(&quot;Erreur : paramètre 'i' invalide dans méthode Piste.getMidX()&quot;);
			return Affichage.LARG/2;
		}	
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDqxSIq_EeqIWs6fLn5Ghw" name="updateObstacles" specification="_v4rCMIq_EeqIWs6fLn5Ghw">
          <language>java</language>
          <body>//on retire le premier obstacle (le plus ancien) tant qu'il est en dehors du champ de vision
		while(obstacles.size() > 0 &amp;&amp; obstacles.get(0).getY() &lt; 0) {
			
			obstacles.remove(0);
			
		}
		if(obstacles.size() &lt; ObstaclesMax &amp;&amp; randint(0,probaObstacle)==0) {
			//la position y de l'obstacle est posY du dernier point de la piste (le point le plus en haut, au dessus de la fenetre)
			obstacles.add(new Obstacle(this, etat, points.get(points.size()-1).y));
			
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDrYUIq_EeqIWs6fLn5Ghw" name="removeObstacle" specification="_v4rCMYq_EeqIWs6fLn5Ghw">
          <ownedParameter xmi:id="_wDrYUYq_EeqIWs6fLn5Ghw" name="i">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>if(i&lt;this.obstacles.size()){
			this.obstacles.remove(i);
		}else {
			System.err.println(&quot;Erreur : appel de removeObstacle avec un i invalide !!! &quot;+i);
			etat.gameOver();
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDrYUoq_EeqIWs6fLn5Ghw" name="randint" specification="_v4rpQIq_EeqIWs6fLn5Ghw">
          <ownedParameter xmi:id="_wDrYU4q_EeqIWs6fLn5Ghw" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_wDrYVIq_EeqIWs6fLn5Ghw" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_wDrYVYq_EeqIWs6fLn5Ghw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return ThreadLocalRandom.current().nextInt(min, max + 1);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_v4e08Iq_EeqIWs6fLn5Ghw" name="initPoints" visibility="private" method="_wDpjJYq_EeqIWs6fLn5Ghw">
          <ownedComment xmi:id="_wD8eFIq_EeqIWs6fLn5Ghw">
            <body>Initialise les points de la piste visibles dès le début</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_v4e08Yq_EeqIWs6fLn5Ghw" name="addPoint" visibility="private" method="_wDqKMIq_EeqIWs6fLn5Ghw">
          <ownedComment xmi:id="_wD8eFYq_EeqIWs6fLn5Ghw">
            <body>ajoute un point à la {@link Piste#points}</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_v4fcAIq_EeqIWs6fLn5Ghw" name="updatePoints" visibility="package" method="_wDqKMYq_EeqIWs6fLn5Ghw">
          <ownedComment xmi:id="_wD8eFoq_EeqIWs6fLn5Ghw">
            <body>on ajoute un point quand le dernier entre dans le champ de vision
	 * et on en supprime un si il sort du champ de vision</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_v4fcAYq_EeqIWs6fLn5Ghw" name="getPiste" method="_wDqKMoq_EeqIWs6fLn5Ghw">
          <ownedComment xmi:id="_wD9FIIq_EeqIWs6fLn5Ghw">
            <body>@return la piste sous forme de double tableau contenant les 2 ligne brisées des bords de la piste (sans perspective)</body>
          </ownedComment>
          <ownedParameter xmi:id="_v4fcAoq_EeqIWs6fLn5Ghw" type="_v--egIq_EeqIWs6fLn5Ghw" direction="return">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v4gDEIq_EeqIWs6fLn5Ghw" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_v4gqIIq_EeqIWs6fLn5Ghw" name="getLargPiste" method="_wDqKNYq_EeqIWs6fLn5Ghw">
          <ownedComment xmi:id="_wD9FIYq_EeqIWs6fLn5Ghw">
            <body>@param i l'indice du point de la piste
	 * @return la largeur de la piste à ce point de la piste</body>
          </ownedComment>
          <ownedParameter xmi:id="_v4gqIYq_EeqIWs6fLn5Ghw" name="i">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_v4ol8Iq_EeqIWs6fLn5Ghw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_v4pNAIq_EeqIWs6fLn5Ghw" name="getLargPisteEnY" method="_wDqxQIq_EeqIWs6fLn5Ghw">
          <ownedComment xmi:id="_wD9FIoq_EeqIWs6fLn5Ghw">
            <body>@param y la posY d'un point
	 * @return la largeur de la piste à ce point de la piste</body>
          </ownedComment>
          <ownedParameter xmi:id="_v4pNAYq_EeqIWs6fLn5Ghw" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_v4pNAoq_EeqIWs6fLn5Ghw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_v4p0EIq_EeqIWs6fLn5Ghw" name="avance" method="_wDqxQ4q_EeqIWs6fLn5Ghw">
          <ownedComment xmi:id="_wD9FI4q_EeqIWs6fLn5Ghw">
            <body>on avance de la vitesse donnée lors de l'appel par {@link Etat}
	 * @param v vitesse du joueur</body>
          </ownedComment>
          <ownedParameter xmi:id="_v4p0EYq_EeqIWs6fLn5Ghw" name="v">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_v4qbIIq_EeqIWs6fLn5Ghw" name="getMidX" method="_wDqxRYq_EeqIWs6fLn5Ghw">
          <ownedComment xmi:id="_wD9FJIq_EeqIWs6fLn5Ghw">
            <body>@param i
	 * @return le X du milieu de la piste au point d'indice i</body>
          </ownedComment>
          <ownedParameter xmi:id="_v4qbIYq_EeqIWs6fLn5Ghw" name="i">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_v4qbIoq_EeqIWs6fLn5Ghw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_v4rCMIq_EeqIWs6fLn5Ghw" name="updateObstacles" visibility="private" method="_wDqxSIq_EeqIWs6fLn5Ghw">
          <ownedComment xmi:id="_wD9FJYq_EeqIWs6fLn5Ghw">
            <body>Supprime les obstacles qui ne sont plus visibles et en génère des nouveaux avec une
	 * probabilité de {@link #probaObstacle}</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_v4rCMYq_EeqIWs6fLn5Ghw" name="removeObstacle" method="_wDrYUIq_EeqIWs6fLn5Ghw">
          <ownedComment xmi:id="_wD9FJoq_EeqIWs6fLn5Ghw">
            <body>Retire l'obstacle d'indice i de la liste, utilisé quand on percute un obstacle.
	 * Si le i est invalide on affiche une erreur et on stoppe le jeu
	 * @param i</body>
          </ownedComment>
          <ownedParameter xmi:id="_v4rCMoq_EeqIWs6fLn5Ghw" name="i">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_v4rpQIq_EeqIWs6fLn5Ghw" name="randint" visibility="private" method="_wDrYUoq_EeqIWs6fLn5Ghw">
          <ownedComment xmi:id="_wD9FJ4q_EeqIWs6fLn5Ghw">
            <body>Génère un chiffre aléatoire entre min et max
	 * @param int min
	 * @param int max
	 * @return random int between min and max</body>
          </ownedComment>
          <ownedParameter xmi:id="_v4rpQYq_EeqIWs6fLn5Ghw" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_v4rpQoq_EeqIWs6fLn5Ghw" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_v4sQUIq_EeqIWs6fLn5Ghw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_v_ol0Iq_EeqIWs6fLn5Ghw" name="Piste" method="_wDpjIoq_EeqIWs6fLn5Ghw">
          <eAnnotations xmi:id="_v_pM4Iq_EeqIWs6fLn5Ghw" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_v_pM4Yq_EeqIWs6fLn5Ghw" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_wD8eE4q_EeqIWs6fLn5Ghw">
            <body>Constructor
	 * @param etat</body>
          </ownedComment>
          <ownedParameter xmi:id="_v_ol0Yq_EeqIWs6fLn5Ghw" name="etat" type="_v3YowIq_EeqIWs6fLn5Ghw"/>
          <ownedParameter xmi:id="_v_pM4oq_EeqIWs6fLn5Ghw" type="_v4YuUIq_EeqIWs6fLn5Ghw" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_wEOK4Yq_EeqIWs6fLn5Ghw" name="" memberEnd="_wEOK4oq_EeqIWs6fLn5Ghw _wBwswoq_EeqIWs6fLn5Ghw">
        <ownedEnd xmi:id="_wEOK4oq_EeqIWs6fLn5Ghw" name="" type="_v3G78Yq_EeqIWs6fLn5Ghw" association="_wEOK4Yq_EeqIWs6fLn5Ghw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_wEOx8Yq_EeqIWs6fLn5Ghw" name="" memberEnd="_wEOx8oq_EeqIWs6fLn5Ghw _wB2zYYq_EeqIWs6fLn5Ghw">
        <ownedEnd xmi:id="_wEOx8oq_EeqIWs6fLn5Ghw" name="" type="_v3LNYIq_EeqIWs6fLn5Ghw" association="_wEOx8Yq_EeqIWs6fLn5Ghw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_wEPZAYq_EeqIWs6fLn5Ghw" name="" memberEnd="_wEPZAoq_EeqIWs6fLn5Ghw _wB9hEYq_EeqIWs6fLn5Ghw">
        <ownedEnd xmi:id="_wEPZAoq_EeqIWs6fLn5Ghw" name="" type="_v3TwQIq_EeqIWs6fLn5Ghw" association="_wEPZAYq_EeqIWs6fLn5Ghw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_wEQnIIq_EeqIWs6fLn5Ghw" name="" memberEnd="_wEQnIYq_EeqIWs6fLn5Ghw _wCaNAIq_EeqIWs6fLn5Ghw">
        <ownedEnd xmi:id="_wEQnIYq_EeqIWs6fLn5Ghw" name="" type="_v3YowIq_EeqIWs6fLn5Ghw" association="_wEQnIIq_EeqIWs6fLn5Ghw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_wEROMIq_EeqIWs6fLn5Ghw" name="" memberEnd="_wEROMYq_EeqIWs6fLn5Ghw _wCbbIIq_EeqIWs6fLn5Ghw">
        <ownedEnd xmi:id="_wEROMYq_EeqIWs6fLn5Ghw" name="" type="_v3YowIq_EeqIWs6fLn5Ghw" association="_wEROMIq_EeqIWs6fLn5Ghw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_wER1QYq_EeqIWs6fLn5Ghw" name="" memberEnd="_wER1Qoq_EeqIWs6fLn5Ghw _wCcCMIq_EeqIWs6fLn5Ghw">
        <ownedEnd xmi:id="_wER1Qoq_EeqIWs6fLn5Ghw" name="" type="_v3YowIq_EeqIWs6fLn5Ghw" association="_wER1QYq_EeqIWs6fLn5Ghw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_wEScUYq_EeqIWs6fLn5Ghw" name="" memberEnd="_wEScUoq_EeqIWs6fLn5Ghw _wCcCMYq_EeqIWs6fLn5Ghw">
        <ownedEnd xmi:id="_wEScUoq_EeqIWs6fLn5Ghw" name="" type="_v3YowIq_EeqIWs6fLn5Ghw" association="_wEScUYq_EeqIWs6fLn5Ghw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_wETDYYq_EeqIWs6fLn5Ghw" name="" memberEnd="_wETDYoq_EeqIWs6fLn5Ghw _wCdQUIq_EeqIWs6fLn5Ghw">
        <ownedEnd xmi:id="_wETDYoq_EeqIWs6fLn5Ghw" name="" type="_v3YowIq_EeqIWs6fLn5Ghw" association="_wETDYYq_EeqIWs6fLn5Ghw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_wETqcYq_EeqIWs6fLn5Ghw" name="" memberEnd="_wETqcoq_EeqIWs6fLn5Ghw _wCfskYq_EeqIWs6fLn5Ghw">
        <ownedEnd xmi:id="_wETqcoq_EeqIWs6fLn5Ghw" name="" type="_v3YowIq_EeqIWs6fLn5Ghw" association="_wETqcYq_EeqIWs6fLn5Ghw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_wEURgYq_EeqIWs6fLn5Ghw" name="" memberEnd="_wEURgoq_EeqIWs6fLn5Ghw _wCj-AIq_EeqIWs6fLn5Ghw">
        <ownedEnd xmi:id="_wEURgoq_EeqIWs6fLn5Ghw" name="" type="_v35mIIq_EeqIWs6fLn5Ghw" association="_wEURgYq_EeqIWs6fLn5Ghw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_wEVfoIq_EeqIWs6fLn5Ghw" name="" memberEnd="_wEVfoYq_EeqIWs6fLn5Ghw _wCklEIq_EeqIWs6fLn5Ghw">
        <ownedEnd xmi:id="_wEVfoYq_EeqIWs6fLn5Ghw" name="" type="_v35mIIq_EeqIWs6fLn5Ghw" association="_wEVfoIq_EeqIWs6fLn5Ghw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_wEWGsIq_EeqIWs6fLn5Ghw" name="" memberEnd="_wEWGsYq_EeqIWs6fLn5Ghw _wCnoYIq_EeqIWs6fLn5Ghw">
        <ownedEnd xmi:id="_wEWGsYq_EeqIWs6fLn5Ghw" name="" type="_v4NIIIq_EeqIWs6fLn5Ghw" association="_wEWGsIq_EeqIWs6fLn5Ghw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_wEWtwYq_EeqIWs6fLn5Ghw" name="" memberEnd="_wEWtwoq_EeqIWs6fLn5Ghw _wCoPcYq_EeqIWs6fLn5Ghw">
        <ownedEnd xmi:id="_wEWtwoq_EeqIWs6fLn5Ghw" name="" type="_v4NIIIq_EeqIWs6fLn5Ghw" association="_wEWtwYq_EeqIWs6fLn5Ghw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_wEXU0Yq_EeqIWs6fLn5Ghw" name="" memberEnd="_wEXU0oq_EeqIWs6fLn5Ghw _wCyngIq_EeqIWs6fLn5Ghw">
        <ownedEnd xmi:id="_wEXU0oq_EeqIWs6fLn5Ghw" name="" type="_v4YuUIq_EeqIWs6fLn5Ghw" association="_wEXU0Yq_EeqIWs6fLn5Ghw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_wEYi8Iq_EeqIWs6fLn5Ghw" name="" memberEnd="_wEYi8Yq_EeqIWs6fLn5Ghw _wCz1ooq_EeqIWs6fLn5Ghw">
        <ownedEnd xmi:id="_wEYi8Yq_EeqIWs6fLn5Ghw" name="" type="_v4YuUIq_EeqIWs6fLn5Ghw" association="_wEYi8Iq_EeqIWs6fLn5Ghw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_wEZKAYq_EeqIWs6fLn5Ghw" name="" memberEnd="_wEZKAoq_EeqIWs6fLn5Ghw _wC4HEIq_EeqIWs6fLn5Ghw">
        <ownedEnd xmi:id="_wEZKAoq_EeqIWs6fLn5Ghw" name="" type="_v4YuUIq_EeqIWs6fLn5Ghw" association="_wEZKAYq_EeqIWs6fLn5Ghw"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_v0bbYIq_EeqIWs6fLn5Ghw" name="control">
      <packagedElement xmi:type="uml:Class" xmi:id="_v2po8Iq_EeqIWs6fLn5Ghw" name="Avancer">
        <ownedComment xmi:id="_wD3lkIq_EeqIWs6fLn5Ghw">
          <body>Lance la fonction {@link Etat#avance()} toutes les {@link #time} 
 *</body>
        </ownedComment>
        <generalization xmi:id="_v-iZoYq_EeqIWs6fLn5Ghw" general="_v3A1UIq_EeqIWs6fLn5Ghw"/>
        <ownedAttribute xmi:id="_wBcjsIq_EeqIWs6fLn5Ghw" name="time" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_wBcjsYq_EeqIWs6fLn5Ghw" value="41"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_wBdKwYq_EeqIWs6fLn5Ghw" name="etat" visibility="private" type="_v3YowIq_EeqIWs6fLn5Ghw" association="_wEKggIq_EeqIWs6fLn5Ghw"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDQhkIq_EeqIWs6fLn5Ghw" name="Avancer" specification="_v-hykIq_EeqIWs6fLn5Ghw">
          <ownedParameter xmi:id="_wDQhkYq_EeqIWs6fLn5Ghw" name="etat" type="_v3YowIq_EeqIWs6fLn5Ghw"/>
          <ownedParameter xmi:id="_wDQhkoq_EeqIWs6fLn5Ghw" type="_v2po8Iq_EeqIWs6fLn5Ghw" direction="return"/>
          <language>java</language>
          <body>this.etat = etat;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDQhk4q_EeqIWs6fLn5Ghw" name="run" specification="_v2q3EIq_EeqIWs6fLn5Ghw">
          <language>java</language>
          <body>while(running) {
			try {
				Thread.sleep(time);
				this.etat.avance();
				
			}
			catch (Exception e) { e.printStackTrace(); this.terminate(); }
		}
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_v2q3EIq_EeqIWs6fLn5Ghw" name="run" method="_wDQhk4q_EeqIWs6fLn5Ghw"/>
        <ownedOperation xmi:id="_v-hykIq_EeqIWs6fLn5Ghw" name="Avancer" method="_wDQhkIq_EeqIWs6fLn5Ghw">
          <eAnnotations xmi:id="_v-hykoq_EeqIWs6fLn5Ghw" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_v-hyk4q_EeqIWs6fLn5Ghw" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_v-hykYq_EeqIWs6fLn5Ghw" name="etat" type="_v3YowIq_EeqIWs6fLn5Ghw"/>
          <ownedParameter xmi:id="_v-iZoIq_EeqIWs6fLn5Ghw" type="_v2po8Iq_EeqIWs6fLn5Ghw" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_v2tTUIq_EeqIWs6fLn5Ghw" name="Clock">
        <generalization xmi:id="_v-ogQ4q_EeqIWs6fLn5Ghw" general="_v3A1UIq_EeqIWs6fLn5Ghw"/>
        <ownedAttribute xmi:id="_wBiDQYq_EeqIWs6fLn5Ghw" name="time" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_wBiqUIq_EeqIWs6fLn5Ghw" value="1000"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_wBjRYIq_EeqIWs6fLn5Ghw" name="timeInit" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_wBjRYYq_EeqIWs6fLn5Ghw" value="20"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_wBj4cYq_EeqIWs6fLn5Ghw" name="etat" visibility="private" type="_v3YowIq_EeqIWs6fLn5Ghw" association="_wELuoIq_EeqIWs6fLn5Ghw"/>
        <ownedAttribute xmi:id="_wBkfgYq_EeqIWs6fLn5Ghw" name="tempsRestant" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_wBkfgoq_EeqIWs6fLn5Ghw" name="wasIncreasing" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_wBlGkYq_EeqIWs6fLn5Ghw" name="increasing" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDRIoIq_EeqIWs6fLn5Ghw" name="Clock" specification="_v-n5MIq_EeqIWs6fLn5Ghw">
          <ownedParameter xmi:id="_wDRIoYq_EeqIWs6fLn5Ghw" name="etat" type="_v3YowIq_EeqIWs6fLn5Ghw"/>
          <ownedParameter xmi:id="_wDRIooq_EeqIWs6fLn5Ghw" type="_v2tTUIq_EeqIWs6fLn5Ghw" direction="return"/>
          <language>java</language>
          <body>this.etat = etat;
		this.tempsRestant = timeInit;
     this.increasing = 0;
     this.wasIncreasing = false;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDRIo4q_EeqIWs6fLn5Ghw" name="run" specification="_v2vvkIq_EeqIWs6fLn5Ghw">
          <language>java</language>
          <body>while(running) {
			try {
				Thread.sleep(time);
				//la premiere fois on passe le flag à false et la deuxieme fois on remet increasing à 0
				if(this.wasIncreasing) {
					this.wasIncreasing = false;
				}else {
					this.increasing = 0;
				}
				
				if(tempsRestant>0){
                 tempsRestant--;
             }
             else{
                 this.terminate();
                 etat.gameOver();
             }
			}
			catch (Exception e) { e.printStackTrace(); this.terminate(); }
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDRvsIq_EeqIWs6fLn5Ghw" name="incrTempsRestant" specification="_v2wWooq_EeqIWs6fLn5Ghw">
          <ownedParameter xmi:id="_wDRvsYq_EeqIWs6fLn5Ghw" name="n">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>this.tempsRestant += n;
		this.increasing = n;
		this.wasIncreasing = true;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDRvsoq_EeqIWs6fLn5Ghw" name="restart" specification="_v2w9sYq_EeqIWs6fLn5Ghw">
          <language>java</language>
          <body>this.tempsRestant = 20;
		running = true;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_v2vvkIq_EeqIWs6fLn5Ghw" name="run" method="_wDRIo4q_EeqIWs6fLn5Ghw"/>
        <ownedOperation xmi:id="_v2wWooq_EeqIWs6fLn5Ghw" name="incrTempsRestant" method="_wDRvsIq_EeqIWs6fLn5Ghw">
          <ownedParameter xmi:id="_v2w9sIq_EeqIWs6fLn5Ghw" name="n">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_v2w9sYq_EeqIWs6fLn5Ghw" name="restart" method="_wDRvsoq_EeqIWs6fLn5Ghw"/>
        <ownedOperation xmi:id="_v-n5MIq_EeqIWs6fLn5Ghw" name="Clock" method="_wDRIoIq_EeqIWs6fLn5Ghw">
          <eAnnotations xmi:id="_v-ogQIq_EeqIWs6fLn5Ghw" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_v-ogQYq_EeqIWs6fLn5Ghw" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_v-n5MYq_EeqIWs6fLn5Ghw" name="etat" type="_v3YowIq_EeqIWs6fLn5Ghw"/>
          <ownedParameter xmi:id="_v-ogQoq_EeqIWs6fLn5Ghw" type="_v2tTUIq_EeqIWs6fLn5Ghw" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_v20oEIq_EeqIWs6fLn5Ghw" name="Keys">
        <generalization xmi:id="_wAceIIq_EeqIWs6fLn5Ghw" general="_v-qVcIq_EeqIWs6fLn5Ghw"/>
        <ownedAttribute xmi:id="_wBltoIq_EeqIWs6fLn5Ghw" name="etat" visibility="private" type="_v3YowIq_EeqIWs6fLn5Ghw" association="_wEMVsYq_EeqIWs6fLn5Ghw"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDRvs4q_EeqIWs6fLn5Ghw" name="Keys" specification="_v-v1AIq_EeqIWs6fLn5Ghw">
          <ownedParameter xmi:id="_wDRvtIq_EeqIWs6fLn5Ghw" name="etat" type="_v3YowIq_EeqIWs6fLn5Ghw"/>
          <ownedParameter xmi:id="_wDRvtYq_EeqIWs6fLn5Ghw" type="_v20oEIq_EeqIWs6fLn5Ghw" direction="return"/>
          <language>java</language>
          <body>this.etat = etat;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDSWwIq_EeqIWs6fLn5Ghw" name="keyPressed" specification="_wAaB4Iq_EeqIWs6fLn5Ghw">
          <ownedParameter xmi:id="_wDSWwYq_EeqIWs6fLn5Ghw" name="e" type="_v-t_0Yq_EeqIWs6fLn5Ghw"/>
          <language>java</language>
          <body>if (e.getKeyCode() == KeyEvent.VK_Q) {
			etat.pressLeft(true);
		}
		// déplacement droite : touche D
		if(e.getKeyCode() == KeyEvent.VK_D) {
			etat.pressRight(true);
		}
		// déplacement haut : touche Z
		if(e.getKeyCode() == KeyEvent.VK_Z) {
			etat.pressUp(true);
		}
		// déplacement bas : touche S
		if(e.getKeyCode() == KeyEvent.VK_S) {
			etat.pressDown(true);
		}
		// recommencer un partie : touche R
		if(etat.getFin()) {
			if(e.getKeyCode() == KeyEvent.VK_R) {
				etat.retry();
			}
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDSWwoq_EeqIWs6fLn5Ghw" name="keyReleased" specification="_wAbQAIq_EeqIWs6fLn5Ghw">
          <ownedParameter xmi:id="_wDSWw4q_EeqIWs6fLn5Ghw" name="e" type="_v-t_0Yq_EeqIWs6fLn5Ghw"/>
          <language>java</language>
          <body>if (e.getKeyCode() == KeyEvent.VK_Q){
			etat.pressLeft(false);
		}
		if (e.getKeyCode() == KeyEvent.VK_D) {
			etat.pressRight(false);
		}
		if(e.getKeyCode() == KeyEvent.VK_Z) {
			etat.pressUp(false);
		}
		if(e.getKeyCode() == KeyEvent.VK_S) {
			etat.pressDown(false);
		}
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_v-v1AIq_EeqIWs6fLn5Ghw" name="Keys" method="_wDRvs4q_EeqIWs6fLn5Ghw">
          <eAnnotations xmi:id="_v-wcEYq_EeqIWs6fLn5Ghw" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_v-wcEoq_EeqIWs6fLn5Ghw" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_v-wcEIq_EeqIWs6fLn5Ghw" name="etat" type="_v3YowIq_EeqIWs6fLn5Ghw"/>
          <ownedParameter xmi:id="_v-wcE4q_EeqIWs6fLn5Ghw" type="_v20oEIq_EeqIWs6fLn5Ghw" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_wAYzwIq_EeqIWs6fLn5Ghw" name="keyTyped">
          <ownedParameter xmi:id="_wAYzwYq_EeqIWs6fLn5Ghw" name="e" type="_v-t_0Yq_EeqIWs6fLn5Ghw"/>
        </ownedOperation>
        <ownedOperation xmi:id="_wAaB4Iq_EeqIWs6fLn5Ghw" name="keyPressed" method="_wDSWwIq_EeqIWs6fLn5Ghw">
          <ownedParameter xmi:id="_wAaB4Yq_EeqIWs6fLn5Ghw" name="e" type="_v-t_0Yq_EeqIWs6fLn5Ghw"/>
        </ownedOperation>
        <ownedOperation xmi:id="_wAbQAIq_EeqIWs6fLn5Ghw" name="keyReleased" method="_wDSWwoq_EeqIWs6fLn5Ghw">
          <ownedParameter xmi:id="_wAbQAYq_EeqIWs6fLn5Ghw" name="e" type="_v-t_0Yq_EeqIWs6fLn5Ghw"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_v22dQIq_EeqIWs6fLn5Ghw" name="Nuage">
        <ownedComment xmi:id="_wD3lkYq_EeqIWs6fLn5Ghw">
          <body>Chaque nuage dans la vue est représenté par une instance de cette classe
tout les {@link #TIME} millisecondes de {@link #DEPL} pixels vers la gauche</body>
        </ownedComment>
        <generalization xmi:id="_wAeTUIq_EeqIWs6fLn5Ghw" general="_wAdFMYq_EeqIWs6fLn5Ghw"/>
        <ownedAttribute xmi:id="_wBm7wIq_EeqIWs6fLn5Ghw" name="DEPL" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_wBm7wYq_EeqIWs6fLn5Ghw" value="3"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_wBni0Yq_EeqIWs6fLn5Ghw" name="TIME" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_wBni0oq_EeqIWs6fLn5Ghw" value="100"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_wBoJ4Yq_EeqIWs6fLn5Ghw" name="running" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_wBow8Iq_EeqIWs6fLn5Ghw" name="posX" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_wBow8Yq_EeqIWs6fLn5Ghw" name="posY" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_wBpYAIq_EeqIWs6fLn5Ghw" name="width" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_wBpYAYq_EeqIWs6fLn5Ghw" name="height" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDS90Iq_EeqIWs6fLn5Ghw" name="Nuage" specification="_v23EUIq_EeqIWs6fLn5Ghw">
          <ownedParameter xmi:id="_wDS90Yq_EeqIWs6fLn5Ghw" type="_v22dQIq_EeqIWs6fLn5Ghw" direction="return"/>
          <language>java</language>
          <body>this.running = true;
		this.width = randint(50,200);
		this.height = randint(50,Affichage.posHorizon);
		this.posX = Affichage.LARG;
		int maxY = Affichage.posHorizon - this.height;
		this.posY = randint(0,maxY);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDS90oq_EeqIWs6fLn5Ghw" name="run" specification="_v23rY4q_EeqIWs6fLn5Ghw">
          <language>java</language>
          <body>while(this.running) {
			try {
				Thread.sleep(TIME);
				this.posX -= DEPL;
			}catch (Exception e) {
				e.printStackTrace(); this.terminate(); 
			}
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDS904q_EeqIWs6fLn5Ghw" name="terminate" specification="_v24Sc4q_EeqIWs6fLn5Ghw">
          <language>java</language>
          <body>this.running = false;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDUL8Iq_EeqIWs6fLn5Ghw" name="randint" specification="_v245gIq_EeqIWs6fLn5Ghw">
          <ownedParameter xmi:id="_wDUL8Yq_EeqIWs6fLn5Ghw" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_wDUL8oq_EeqIWs6fLn5Ghw" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_wDUL84q_EeqIWs6fLn5Ghw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return ThreadLocalRandom.current().nextInt(min, max + 1);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_v23EUIq_EeqIWs6fLn5Ghw" name="Nuage" method="_wDS90Iq_EeqIWs6fLn5Ghw">
          <eAnnotations xmi:id="_v23rYIq_EeqIWs6fLn5Ghw" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_v23rYYq_EeqIWs6fLn5Ghw" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_v23rYoq_EeqIWs6fLn5Ghw" type="_v22dQIq_EeqIWs6fLn5Ghw" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_v23rY4q_EeqIWs6fLn5Ghw" name="run" method="_wDS90oq_EeqIWs6fLn5Ghw"/>
        <ownedOperation xmi:id="_v24Sc4q_EeqIWs6fLn5Ghw" name="terminate" method="_wDS904q_EeqIWs6fLn5Ghw"/>
        <ownedOperation xmi:id="_v245gIq_EeqIWs6fLn5Ghw" name="randint" method="_wDUL8Iq_EeqIWs6fLn5Ghw">
          <ownedParameter xmi:id="_v245gYq_EeqIWs6fLn5Ghw" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_v245goq_EeqIWs6fLn5Ghw" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_v245g4q_EeqIWs6fLn5Ghw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_v29yAIq_EeqIWs6fLn5Ghw" name="RepaintScreen">
        <ownedComment xmi:id="_wD4MoIq_EeqIWs6fLn5Ghw">
          <body>Rafraichit l'affichage toutes les {@link #time} millisecondes</body>
        </ownedComment>
        <generalization xmi:id="_v-2isIq_EeqIWs6fLn5Ghw" general="_v3A1UIq_EeqIWs6fLn5Ghw"/>
        <ownedAttribute xmi:id="_wBp_EIq_EeqIWs6fLn5Ghw" name="time" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_wBp_EYq_EeqIWs6fLn5Ghw" value="50"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_wBqmIYq_EeqIWs6fLn5Ghw" name="aff" visibility="private" type="_v41aQIq_EeqIWs6fLn5Ghw" association="_wEM8wYq_EeqIWs6fLn5Ghw"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDUzAIq_EeqIWs6fLn5Ghw" name="RepaintScreen" specification="_v-17oIq_EeqIWs6fLn5Ghw">
          <ownedParameter xmi:id="_wDUzAYq_EeqIWs6fLn5Ghw" name="aff" type="_v41aQIq_EeqIWs6fLn5Ghw"/>
          <ownedParameter xmi:id="_wDUzAoq_EeqIWs6fLn5Ghw" type="_v29yAIq_EeqIWs6fLn5Ghw" direction="return"/>
          <language>java</language>
          <body>this.aff = aff;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDVaEIq_EeqIWs6fLn5Ghw" name="run" specification="_v2_AIIq_EeqIWs6fLn5Ghw">
          <language>java</language>
          <body>while(this.running) {
			try { Thread.sleep(time); this.aff.revalidate(); this.aff.repaint();}
			catch (Exception e) { e.printStackTrace(); this.terminate(); }
		}
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_v2_AIIq_EeqIWs6fLn5Ghw" name="run" method="_wDVaEIq_EeqIWs6fLn5Ghw"/>
        <ownedOperation xmi:id="_v-17oIq_EeqIWs6fLn5Ghw" name="RepaintScreen" method="_wDUzAIq_EeqIWs6fLn5Ghw">
          <eAnnotations xmi:id="_v-17ooq_EeqIWs6fLn5Ghw" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_v-17o4q_EeqIWs6fLn5Ghw" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_wD4MoYq_EeqIWs6fLn5Ghw">
            <body>Constructeur
	 * @param aff</body>
          </ownedComment>
          <ownedParameter xmi:id="_v-17oYq_EeqIWs6fLn5Ghw" name="aff" type="_v41aQIq_EeqIWs6fLn5Ghw"/>
          <ownedParameter xmi:id="_v-17pIq_EeqIWs6fLn5Ghw" type="_v29yAIq_EeqIWs6fLn5Ghw" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_v3A1UIq_EeqIWs6fLn5Ghw" name="StoppableThread">
        <generalization xmi:id="_wAjy4Iq_EeqIWs6fLn5Ghw" general="_wAdFMYq_EeqIWs6fLn5Ghw"/>
        <ownedAttribute xmi:id="_wBrNMYq_EeqIWs6fLn5Ghw" name="running" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_wBr0QIq_EeqIWs6fLn5Ghw" value="true"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDVaEYq_EeqIWs6fLn5Ghw" name="terminate" specification="_v3CqgIq_EeqIWs6fLn5Ghw">
          <language>java</language>
          <body>this.running = false;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDVaEoq_EeqIWs6fLn5Ghw" name="restart" specification="_v3DRkIq_EeqIWs6fLn5Ghw">
          <language>java</language>
          <body>this.running = true;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_v3CqgIq_EeqIWs6fLn5Ghw" name="terminate" method="_wDVaEYq_EeqIWs6fLn5Ghw"/>
        <ownedOperation xmi:id="_v3DRkIq_EeqIWs6fLn5Ghw" name="restart" method="_wDVaEoq_EeqIWs6fLn5Ghw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_v3D4oIq_EeqIWs6fLn5Ghw" name="Vitesse">
        <ownedComment xmi:id="_wD4Mooq_EeqIWs6fLn5Ghw">
          <body>Met à jour la {@link Etat#vitesse vitesse} de la moto toutes les {@link #time} millisecondes, en fonction de 
la {@link Etat#vitesse vitesse} et l'{@link Etat#accel accélération} actuelles.</body>
        </ownedComment>
        <generalization xmi:id="_v-4X4Iq_EeqIWs6fLn5Ghw" general="_v3A1UIq_EeqIWs6fLn5Ghw"/>
        <ownedAttribute xmi:id="_wBsbUIq_EeqIWs6fLn5Ghw" name="running" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_wBsbUYq_EeqIWs6fLn5Ghw" value="true"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_wBtCYIq_EeqIWs6fLn5Ghw" name="time" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_wBtCYoq_EeqIWs6fLn5Ghw" name="etat" visibility="private" type="_v3YowIq_EeqIWs6fLn5Ghw" association="_wENj0Yq_EeqIWs6fLn5Ghw"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDWBIIq_EeqIWs6fLn5Ghw" name="Vitesse" specification="_v-3w0Iq_EeqIWs6fLn5Ghw">
          <ownedParameter xmi:id="_wDWBIYq_EeqIWs6fLn5Ghw" name="etat" type="_v3YowIq_EeqIWs6fLn5Ghw"/>
          <ownedParameter xmi:id="_wDWBIoq_EeqIWs6fLn5Ghw" type="_v3D4oIq_EeqIWs6fLn5Ghw" direction="return"/>
          <language>java</language>
          <body>time = 1000;
		this.etat = etat;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDWBI4q_EeqIWs6fLn5Ghw" name="run" specification="_v3EfsIq_EeqIWs6fLn5Ghw">
          <language>java</language>
          <body>while(this.running) {
			try { Thread.sleep(time);  this.etat.updateVitesse();}
			catch (Exception e) { e.printStackTrace(); this.terminate(); }
		}
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_v3EfsIq_EeqIWs6fLn5Ghw" name="run" method="_wDWBI4q_EeqIWs6fLn5Ghw"/>
        <ownedOperation xmi:id="_v-3w0Iq_EeqIWs6fLn5Ghw" name="Vitesse" method="_wDWBIIq_EeqIWs6fLn5Ghw">
          <eAnnotations xmi:id="_v-3w0oq_EeqIWs6fLn5Ghw" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_v-3w04q_EeqIWs6fLn5Ghw" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_v-3w0Yq_EeqIWs6fLn5Ghw" name="etat" type="_v3YowIq_EeqIWs6fLn5Ghw"/>
          <ownedParameter xmi:id="_v-3w1Iq_EeqIWs6fLn5Ghw" type="_v3D4oIq_EeqIWs6fLn5Ghw" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_wEKggIq_EeqIWs6fLn5Ghw" name="" memberEnd="_wEKggYq_EeqIWs6fLn5Ghw _wBdKwYq_EeqIWs6fLn5Ghw">
        <ownedEnd xmi:id="_wEKggYq_EeqIWs6fLn5Ghw" name="" type="_v2po8Iq_EeqIWs6fLn5Ghw" association="_wEKggIq_EeqIWs6fLn5Ghw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_wELuoIq_EeqIWs6fLn5Ghw" name="" memberEnd="_wELuoYq_EeqIWs6fLn5Ghw _wBj4cYq_EeqIWs6fLn5Ghw">
        <ownedEnd xmi:id="_wELuoYq_EeqIWs6fLn5Ghw" name="" type="_v2tTUIq_EeqIWs6fLn5Ghw" association="_wELuoIq_EeqIWs6fLn5Ghw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_wEMVsYq_EeqIWs6fLn5Ghw" name="" memberEnd="_wEMVsoq_EeqIWs6fLn5Ghw _wBltoIq_EeqIWs6fLn5Ghw">
        <ownedEnd xmi:id="_wEMVsoq_EeqIWs6fLn5Ghw" name="" type="_v20oEIq_EeqIWs6fLn5Ghw" association="_wEMVsYq_EeqIWs6fLn5Ghw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_wEM8wYq_EeqIWs6fLn5Ghw" name="" memberEnd="_wEM8woq_EeqIWs6fLn5Ghw _wBqmIYq_EeqIWs6fLn5Ghw">
        <ownedEnd xmi:id="_wEM8woq_EeqIWs6fLn5Ghw" name="" type="_v29yAIq_EeqIWs6fLn5Ghw" association="_wEM8wYq_EeqIWs6fLn5Ghw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_wENj0Yq_EeqIWs6fLn5Ghw" name="" memberEnd="_wENj0oq_EeqIWs6fLn5Ghw _wBtCYoq_EeqIWs6fLn5Ghw">
        <ownedEnd xmi:id="_wENj0oq_EeqIWs6fLn5Ghw" name="" type="_v3D4oIq_EeqIWs6fLn5Ghw" association="_wENj0Yq_EeqIWs6fLn5Ghw"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_v0cpgIq_EeqIWs6fLn5Ghw" name="java">
      <packagedElement xmi:type="uml:Package" xmi:id="_v0cpgYq_EeqIWs6fLn5Ghw" name="awt">
        <packagedElement xmi:type="uml:Package" xmi:id="_v0g68Iq_EeqIWs6fLn5Ghw" name="event">
          <packagedElement xmi:type="uml:Class" xmi:id="_v-qVcIq_EeqIWs6fLn5Ghw" name="KeyAdapter"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_v-t_0Yq_EeqIWs6fLn5Ghw" name="KeyEvent"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_v-jnwIq_EeqIWs6fLn5Ghw" name="Dimension"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_v--egIq_EeqIWs6fLn5Ghw" name="Point"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_v_ATsYq_EeqIWs6fLn5Ghw" name="Rectangle"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_v_FzQIq_EeqIWs6fLn5Ghw" name="Image"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_v_OWIIq_EeqIWs6fLn5Ghw" name="Graphics"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_v_sQMIq_EeqIWs6fLn5Ghw" name="BasicStroke"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_v_teUYq_EeqIWs6fLn5Ghw" name="Color"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_v_uFYYq_EeqIWs6fLn5Ghw" name="Font"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_v_uscYq_EeqIWs6fLn5Ghw" name="FontMetrics"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_v_v6kYq_EeqIWs6fLn5Ghw" name="Graphics2D"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_v_xvwYq_EeqIWs6fLn5Ghw" name="Stroke"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_v0oPsIq_EeqIWs6fLn5Ghw" name="util">
        <packagedElement xmi:type="uml:Package" xmi:id="_v0oPsYq_EeqIWs6fLn5Ghw" name="concurrent">
          <packagedElement xmi:type="uml:Class" xmi:id="_v-yRQIq_EeqIWs6fLn5Ghw" name="ThreadLocalRandom"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_v_QLUIq_EeqIWs6fLn5Ghw" name="ArrayList"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_v04HUIq_EeqIWs6fLn5Ghw" name="io">
        <packagedElement xmi:type="uml:Class" xmi:id="_v_HBYIq_EeqIWs6fLn5Ghw" name="File"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_v_HocYq_EeqIWs6fLn5Ghw" name="IOException"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_wAdFMIq_EeqIWs6fLn5Ghw" name="lang">
        <packagedElement xmi:type="uml:Class" xmi:id="_wAdFMYq_EeqIWs6fLn5Ghw" name="Thread"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_v0cpgoq_EeqIWs6fLn5Ghw" name="javax">
      <packagedElement xmi:type="uml:Package" xmi:id="_v0cpg4q_EeqIWs6fLn5Ghw" name="swing">
        <packagedElement xmi:type="uml:Class" xmi:id="_v-mrEYq_EeqIWs6fLn5Ghw" name="Timer"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_v-4-8Iq_EeqIWs6fLn5Ghw" name="JFrame"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_v_yW0Yq_EeqIWs6fLn5Ghw" name="JPanel"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_v04HUYq_EeqIWs6fLn5Ghw" name="imageio">
        <packagedElement xmi:type="uml:Class" xmi:id="_v_IPgYq_EeqIWs6fLn5Ghw" name="ImageIO"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_v0oPsoq_EeqIWs6fLn5Ghw" name="view">
      <packagedElement xmi:type="uml:Class" xmi:id="_v41aQIq_EeqIWs6fLn5Ghw" name="Affichage">
        <generalization xmi:id="_wBHMgoq_EeqIWs6fLn5Ghw" general="_v_yW0Yq_EeqIWs6fLn5Ghw"/>
        <ownedAttribute xmi:id="_wC58QIq_EeqIWs6fLn5Ghw" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_wC58QYq_EeqIWs6fLn5Ghw" value="1L"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_wC6jUIq_EeqIWs6fLn5Ghw" name="LARG" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_wC6jUYq_EeqIWs6fLn5Ghw" value="1400"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_wC7KYIq_EeqIWs6fLn5Ghw" name="HAUT" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_wC7KYYq_EeqIWs6fLn5Ghw" value="800"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_wC7xcIq_EeqIWs6fLn5Ghw" name="posHorizon" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_wC7xcYq_EeqIWs6fLn5Ghw" value="200"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_wC8YgYq_EeqIWs6fLn5Ghw" name="PATH" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_wC8Ygoq_EeqIWs6fLn5Ghw" value="&quot;imgs/red.png&quot;"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_wC8_kYq_EeqIWs6fLn5Ghw" name="RECUL_Z" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_wC8_koq_EeqIWs6fLn5Ghw" value="200"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_wC8_k4q_EeqIWs6fLn5Ghw" name="HAUTEUR_Y" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_wC9moIq_EeqIWs6fLn5Ghw" value="HAUT"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_wC9moYq_EeqIWs6fLn5Ghw" name="max_prof" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_wC9mooq_EeqIWs6fLn5Ghw" value="((HAUT-posHorizon)*RECUL_Z)/(HAUTEUR_Y-HAUT+posHorizon)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_wC-NsIq_EeqIWs6fLn5Ghw" name="etat" visibility="private" type="_v3YowIq_EeqIWs6fLn5Ghw" association="_wEZxEYq_EeqIWs6fLn5Ghw"/>
        <ownedAttribute xmi:id="_wC-0wIq_EeqIWs6fLn5Ghw" name="check" visibility="private" type="_v3G78Yq_EeqIWs6fLn5Ghw" association="_wEa_MIq_EeqIWs6fLn5Ghw"/>
        <ownedAttribute xmi:id="_wC_b0Iq_EeqIWs6fLn5Ghw" name="clock" visibility="private" type="_v2tTUIq_EeqIWs6fLn5Ghw" association="_wEbmQYq_EeqIWs6fLn5Ghw"/>
        <ownedAttribute xmi:id="_wC_b0oq_EeqIWs6fLn5Ghw" name="moto" visibility="private" type="_v5pSkIq_EeqIWs6fLn5Ghw" association="_wEcNUYq_EeqIWs6fLn5Ghw"/>
        <ownedAttribute xmi:id="_wDAC4Yq_EeqIWs6fLn5Ghw" name="nuages" visibility="private" type="_v5ycgIq_EeqIWs6fLn5Ghw" association="_wEc0YYq_EeqIWs6fLn5Ghw"/>
        <ownedAttribute xmi:id="_wDAp8Yq_EeqIWs6fLn5Ghw" name="decors" visibility="private" type="_v5aCAIq_EeqIWs6fLn5Ghw" association="_wEeCgIq_EeqIWs6fLn5Ghw"/>
        <ownedAttribute xmi:id="_wDBRAYq_EeqIWs6fLn5Ghw" name="ennemis" visibility="private" type="_v5kaEIq_EeqIWs6fLn5Ghw" association="_wEepkIq_EeqIWs6fLn5Ghw"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDr_YIq_EeqIWs6fLn5Ghw" name="Affichage" specification="_v_0zEIq_EeqIWs6fLn5Ghw">
          <ownedParameter xmi:id="_wDr_YYq_EeqIWs6fLn5Ghw" name="etat" type="_v3YowIq_EeqIWs6fLn5Ghw"/>
          <ownedParameter xmi:id="_wDr_Yoq_EeqIWs6fLn5Ghw" type="_v41aQIq_EeqIWs6fLn5Ghw" direction="return"/>
          <language>java</language>
          <body>this.setPreferredSize(new Dimension(LARG, HAUT));
		this.etat = etat;
		this.moto = new VueMoto(etat);
		this.nuages = new VueNuages();
		this.check = etat.getCheck();
		this.clock = check.getClock();
		this.decors = new VueDecors(etat);
		this.ennemis = new VueEnnemis(etat);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDsmcIq_EeqIWs6fLn5Ghw" name="drawEnd" specification="_wA80cIq_EeqIWs6fLn5Ghw">
          <ownedParameter xmi:id="_wDsmcYq_EeqIWs6fLn5Ghw" name="g" type="_v_OWIIq_EeqIWs6fLn5Ghw"/>
          <language>java</language>
          <body>//on change la police pour l'affichage de GAME OVER
		int prevFontSize = g.getFont().getSize();
		Font newFont = new Font(g.getFont().getFontName(), Font.PLAIN, 60);
		g.setFont(newFont);
		String str = &quot;GAME OVER&quot;;
		
		//calcul largeur string
		FontMetrics fm = getFontMetrics(newFont);
		int printedLength = fm.stringWidth(str);
		
		// Affiche GAME OVER
		g.drawString(str, LARG/2 - printedLength/2, HAUT/2-30);
		
		// Affiche PRESS R TO RETRY
		str = &quot;PRESS R TO RETRY&quot;;
		printedLength = fm.stringWidth(str);
		g.drawString(str, LARG/2 - printedLength/2, HAUT/2+30);
		
		//on revient à l'ancienne police pour la suite
		g.setFont(new Font(g.getFont().getFontName(), Font.PLAIN, prevFontSize));
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDsmcoq_EeqIWs6fLn5Ghw" name="drawClock" specification="_wA9bgYq_EeqIWs6fLn5Ghw">
          <ownedParameter xmi:id="_wDsmc4q_EeqIWs6fLn5Ghw" name="g" type="_v_OWIIq_EeqIWs6fLn5Ghw"/>
          <language>java</language>
          <body>//on change la police pour l'affichage de la Clock
		int prevFontSize = g.getFont().getSize();
		g.setFont(new Font(g.getFont().getFontName(), Font.PLAIN, 25)); 
		
		//affichage du timer en haut à gauche
		int tempsRestant = this.clock.getTempsRestant();
		if(tempsRestant > 9){
         g.drawString(&quot;&quot;+tempsRestant, 24, 42);
     }
     else{
         g.drawString(&quot;0&quot;+tempsRestant, 24, 42);
     }
		
		//quand on gagne du temps on affiche en vert le temps gagné
		int increasing = this.clock.getIncreasing();
		if(increasing > 0) {
			g.setColor(Color.GREEN);
			g.drawString(&quot;+&quot;+increasing,LARG/2 - 10, HAUT/2);
			g.setColor(Color.BLACK);
		}
		//on revient à l'ancienne police
		g.setFont(new Font(g.getFont().getFontName(), Font.PLAIN, prevFontSize));
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDsmdIq_EeqIWs6fLn5Ghw" name="drawHorizon" specification="_wA-CkIq_EeqIWs6fLn5Ghw">
          <ownedParameter xmi:id="_wDsmdYq_EeqIWs6fLn5Ghw" name="g" type="_v_OWIIq_EeqIWs6fLn5Ghw"/>
          <language>java</language>
          <body>g.drawLine(0, posHorizon, LARG, posHorizon);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDtNgIq_EeqIWs6fLn5Ghw" name="tracer" specification="_wA-poIq_EeqIWs6fLn5Ghw">
          <ownedParameter xmi:id="_wDtNgYq_EeqIWs6fLn5Ghw" name="p1" type="_v--egIq_EeqIWs6fLn5Ghw"/>
          <ownedParameter xmi:id="_wDtNgoq_EeqIWs6fLn5Ghw" name="p2" type="_v--egIq_EeqIWs6fLn5Ghw"/>
          <ownedParameter xmi:id="_wDtNg4q_EeqIWs6fLn5Ghw" name="g" type="_v_OWIIq_EeqIWs6fLn5Ghw"/>
          <language>java</language>
          <body>g.drawLine(p1.x, HAUT - p1.y, p2.x,  HAUT - p2.y);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDtNhIq_EeqIWs6fLn5Ghw" name="projection" specification="_v499IIq_EeqIWs6fLn5Ghw">
          <ownedParameter xmi:id="_wDtNhYq_EeqIWs6fLn5Ghw" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_wDtNhoq_EeqIWs6fLn5Ghw" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_wDtNh4q_EeqIWs6fLn5Ghw" name="z">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_wDtNiIq_EeqIWs6fLn5Ghw" type="_v--egIq_EeqIWs6fLn5Ghw" direction="return"/>
          <language>java</language>
          <body>int posAffX = LARG/2 - etat.getPosX(); //position d'affichage posX depuis le milieu de l'écran
		//projection sur l'axe y (de la fenetre)
		int y_resultat = (z * (HAUTEUR_Y - y)) / (z + RECUL_Z) + y;
		//projection sur l'axe x (de la fenetre)
		int x_resultat = (z * (posAffX - x)) / (z + RECUL_Z) + x;
		return new Point(x_resultat,y_resultat);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDtNiYq_EeqIWs6fLn5Ghw" name="drawPiste" specification="_wA_3wIq_EeqIWs6fLn5Ghw">
          <ownedParameter xmi:id="_wDtNioq_EeqIWs6fLn5Ghw" name="g" type="_v_v6kYq_EeqIWs6fLn5Ghw"/>
          <language>java</language>
          <body>int posX = etat.getPosX();
		Point[][] piste = etat.getPiste();
		
		
		for(int i=1; i&lt;piste.length-2; i++) {
			
			Point[] t1 = piste[i];		//tableau 1 de points (droite et gauche)
			Point[] t2 = piste[i+1];	//tableau 1 de points (droite et gauche)
			
			Point p1g = projection(t1[0].x-posX, 0, t1[0].y); 	//point 1 de gauche projeté
			Point p2g = projection(t2[0].x-posX, 0, t2[0].y); 	//point 2 de gauche projeté
			Point p1d = projection(t1[1].x-posX, 0, t1[1].y); 	//point 1 de droite projeté
			Point p2d = projection(t2[1].x-posX, 0, t2[1].y); 	//point 2 de droite projeté
			
			//affiche bord piste gauche
			tracer(p1g,p2g, g);
			//affiche bord piste droite
			tracer(p1d,p2d, g);
			
			int largPiste1 = p1d.x - p1g.x;
			int largPiste2 = p2d.x - p2g.x;
			
			
			g.setColor(Color.GRAY);
			//affiche separation voie gauche
			g.drawLine(
					p1g.x+(largPiste1 / 3),
					HAUT-p1g.y,
					p2g.x+(largPiste2 / 3),
					HAUT-p2g.y
			);
			//affiche separation voie droite
			g.drawLine(
					p1d.x-(largPiste1 / 3),
					HAUT-p1d.y,
					p2d.x-(largPiste2 / 3),
					HAUT-p2d.y
			);
			g.setColor(Color.BLACK);
			
			//calcul indice checkpoint sur la piste
			int indice = (check.getPosY()-etat.getPosY())/Piste.incr+1;
			//si t1 est sur l'indice du checkpoint, on le dessine (on dessine pas si l'indice est 1 car on le dessine juste après)
			if(indice > 1 &amp;&amp; indice==i) {
				//on récupère le décalage des positions x1 x2 du checkpoint pour l'afficher sur la bonne voie
				int[] decCheck = new int[2]; 
				decCheck[0] = (int) (check.getPosX()[0] * largPiste1);
				decCheck[1] = (int) (check.getPosX()[1] * largPiste1);
				
				g.setColor(Color.BLUE);
				// on utilise pas la méthode tracer donc il faut inverser les y
				g.drawLine(
						p1g.x+decCheck[0],
						HAUT-p1g.y,
						p1d.x+decCheck[1],
						HAUT-p1d.y
				);
				g.setColor(Color.BLACK);
			}
		}
		
		/* il faut maintenant gérer le cas du ou des premiers points, qui sont situés &quot;derrière l'écran&quot;, donc avec un z
		 * négatif : on calculer le moment où la route coupe le plan de la vue et c'est ce point qui sera notre premier
		 * point de dessin */
		Point p0g = piste[0][0];		//point 0 de gauche
		Point p1g = piste[1][0];		//point 1 de gauche
		Point p0d = piste[0][1];		//point 0 de droite
		Point p1d = piste[1][1];		//point 1 de droite
		
		Point premierG = new Point(calculXdepuisYdansSegment(p0g, p1g, 0) - posX, 0);	//premier point à gauche
		Point premierD = new Point(calculXdepuisYdansSegment(p0d, p1d, 0) - posX, 0);	//premier point à droite
		Point deuxiemeG = projection(p1g.x - posX, 0, p1g.y);
		Point deuxiemeD = projection(p1d.x - posX, 0, p1d.y);
		
		tracer(new Point(premierG.x, premierG.y), deuxiemeG, g);
		tracer(new Point(premierD.x, premierD.y), deuxiemeD, g);
		
		
		g.setColor(Color.GRAY);
		//affiche separation voie gauche
		int largPiste1 = premierD.x - premierG.x;
		int largPiste2 = deuxiemeD.x - deuxiemeG.x;
		g.drawLine(
				premierG.x+(largPiste1 / 3),
				HAUT-premierG.y,
				deuxiemeG.x+(largPiste2 / 3),
				HAUT-deuxiemeG.y
		);
		//affiche separation voie droite
		g.drawLine(
				premierD.x-(largPiste1 / 3),
				HAUT-premierD.y,
				deuxiemeD.x-(largPiste2 / 3),
				HAUT-deuxiemeD.y
		);
		g.setColor(Color.BLACK);
		
		
		
		
		// si il y a un checkpoint au premier point (donc en bas), on le dessine
		int indice = (check.getPosY()-etat.getPosY())/Piste.incr+1;
		if(indice == 1) {
			int largPremier = deuxiemeD.x - deuxiemeG.x;
			int[] decCheck = new int[2]; 
			decCheck[0] = (int) (check.getPosX()[0] * largPremier);
			decCheck[1] = (int) (check.getPosX()[1] * largPremier);
			g.setColor(Color.BLUE);
			
			// on utilise pas la méthode tracer donc il faut inverser les y
			g.drawLine(
					deuxiemeG.x+decCheck[0],
					HAUT-deuxiemeG.y,
					deuxiemeD.x+decCheck[1],
					HAUT-deuxiemeD.y
			);
			
			g.setColor(Color.BLACK);
		}
		
		/* et enfin, on gère le cas du dernier point, &quot;coupé&quot; par l'horizon */
		Point d0g = piste[piste.length-2][0];	//avant dernier point de gauche
		Point d1g = piste[piste.length-1][0];	//dernier point de gauche
		
		Point d0d = piste[piste.length-2][1];	//avant dernier point de droite
		Point d1d = piste[piste.length-1][1];	//dernier point de droite 
		
		Point projDernierG = projection(calculXdepuisYdansSegment(d0g, d1g, HAUT-posHorizon) - posX, 0, HAUT-posHorizon);
		Point projDernierD = projection(calculXdepuisYdansSegment(d0d, d1d, HAUT-posHorizon) - posX, 0, HAUT-posHorizon);
		
		Point projAvDernierG = projection(d0g.x - posX, 0, d0g.y);
		Point projAvDernierD = projection(d0d.x - posX, 0, d0d.y);
		
		tracer(projAvDernierG, projDernierG, g);
		tracer(projAvDernierD, projDernierD, g);
		
		
		//affiche separation voie gauche
		g.setColor(Color.GRAY);
		largPiste1 = projAvDernierD.x - projAvDernierG.x;
		largPiste2 = projDernierD.x - projDernierG.x;
		g.drawLine(
				projAvDernierG.x+(largPiste1 / 3),
				HAUT-projAvDernierG.y,
				projDernierG.x+(largPiste2 / 3),
				HAUT-projDernierG.y
		);
		//affiche separation voie droite
		g.drawLine(
				projAvDernierD.x-(largPiste1 / 3),
				HAUT-projAvDernierD.y,
				projDernierD.x-(largPiste2 / 3),
				HAUT-projDernierD.y
		);
		g.setColor(Color.BLACK);
		
		
		// si il y a un checkpoint au dernier point (donc en haut), on le dessine
		if(indice == piste.length-2) {
			
			int largDernier = projAvDernierD.x - projAvDernierG.x;
			int[] decCheck = new int[2]; 
			decCheck[0] = (int) (check.getPosX()[0] * largDernier);
			decCheck[1] = (int) (check.getPosX()[1] * largDernier);
			g.setColor(Color.BLUE);
			// on utilise pas la méthode tracer donc il faut inverser les y
			g.drawLine(
					projAvDernierG.x+decCheck[0],
					HAUT-projAvDernierG.y,
					projAvDernierD.x+decCheck[1],
					HAUT-projAvDernierD.y
			);
			g.setColor(Color.BLACK);
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDt0kIq_EeqIWs6fLn5Ghw" name="calculXdepuisYdansSegment" specification="_wBAe0Iq_EeqIWs6fLn5Ghw">
          <ownedParameter xmi:id="_wDt0kYq_EeqIWs6fLn5Ghw" name="p1" type="_v--egIq_EeqIWs6fLn5Ghw"/>
          <ownedParameter xmi:id="_wDt0koq_EeqIWs6fLn5Ghw" name="p2" type="_v--egIq_EeqIWs6fLn5Ghw"/>
          <ownedParameter xmi:id="_wDt0k4q_EeqIWs6fLn5Ghw" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_wDt0lIq_EeqIWs6fLn5Ghw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>/* cas des segments horizontaux */
		if (p1.y==p2.y) // cela n'arrive pas avec l'horizon mais on ne sait jamais
			return -1;
		/* note: dans le cas particulier de l'intersection avec l'horizon, nous somme certains que ce
		 * cas ne se produira pas car les points p1 et p2 du modèle ont des y strictement croissants.
		 */
		return p1.x + ((y-p1.y)*(p2.x-p1.x))/(p2.y-p1.y);
		/* note : le parenthésage ci-dessus force la multiplication en premier */
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDt0lYq_EeqIWs6fLn5Ghw" name="drawMontagne" specification="_wBBF4Iq_EeqIWs6fLn5Ghw">
          <ownedParameter xmi:id="_wDt0loq_EeqIWs6fLn5Ghw" name="g" type="_v_OWIIq_EeqIWs6fLn5Ghw"/>
          <language>java</language>
          <body>ArrayList&lt;Point> points = etat.getMontagne();
		for(int i=0; i+1&lt;points.size(); i++) {
			Point p1 = points.get(i);
			Point p2 = points.get(i+1);
			g.drawLine(p1.x , p1.y, p2.x, p2.y);
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDvCsIq_EeqIWs6fLn5Ghw" name="drawCaisse" specification="_wBBs8Iq_EeqIWs6fLn5Ghw">
          <ownedParameter xmi:id="_wDvCsYq_EeqIWs6fLn5Ghw" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_wDvCsoq_EeqIWs6fLn5Ghw" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_wDvCs4q_EeqIWs6fLn5Ghw" name="width">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_wDvCtIq_EeqIWs6fLn5Ghw" name="height">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_wDvCtYq_EeqIWs6fLn5Ghw" name="g" type="_v_v6kYq_EeqIWs6fLn5Ghw"/>
          <language>java</language>
          <body>g.setColor(new Color(140, 105, 4));
		g.fillRect(x,y,width,height);
		g.setColor(Color.BLACK);
		Stroke oldStroke = g.getStroke();
		g.setStroke(new BasicStroke(height/20, BasicStroke.CAP_BUTT, BasicStroke.JOIN_MITER));
		for(int i=y; i&lt;y+height; i+=height/5) {
			g.drawLine(x, i, x+width-1, i);
		}
		g.setStroke(oldStroke);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDvpwIq_EeqIWs6fLn5Ghw" name="drawHole" specification="_wBC7EIq_EeqIWs6fLn5Ghw">
          <ownedParameter xmi:id="_wDvpwYq_EeqIWs6fLn5Ghw" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_wDvpwoq_EeqIWs6fLn5Ghw" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_wDvpw4q_EeqIWs6fLn5Ghw" name="width">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_wDvpxIq_EeqIWs6fLn5Ghw" name="height">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_wDvpxYq_EeqIWs6fLn5Ghw" name="g" type="_v_OWIIq_EeqIWs6fLn5Ghw"/>
          <language>java</language>
          <body>g.setColor(Color.BLACK);
		g.fillOval(x,y,width,height/2);
		g.setColor(new Color(178,178,178));
		g.drawOval(x,y,width,height/2);
		g.setColor(Color.BLACK);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDvpxoq_EeqIWs6fLn5Ghw" name="drawObstacles" specification="_wBDiIIq_EeqIWs6fLn5Ghw">
          <ownedParameter xmi:id="_wDvpx4q_EeqIWs6fLn5Ghw" name="g" type="_v_v6kYq_EeqIWs6fLn5Ghw"/>
          <language>java</language>
          <body>ArrayList&lt;Obstacle> obstacles = etat.getObstacles();
		// on parcourt la liste des obstacles à l'envers pour afficher d'abord les obstacles le plus en haut de la fenetre
		for(int i=obstacles.size()-1; i>=0; i--) {
			Obstacle o = obstacles.get(i);
			Rectangle bounds = o.getBounds();
			
			if(o.isHole()) {
				if(bounds.y > posHorizon) {	
					drawHole(bounds.x, bounds.y, bounds.width, bounds.height, g);
				}
			}else {
				if(bounds.y +bounds.height > posHorizon) {
					drawCaisse(bounds.x, bounds.y, bounds.width, bounds.height, g);
				}
			}
			
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDvpyIq_EeqIWs6fLn5Ghw" name="drawScore" specification="_wBEJMIq_EeqIWs6fLn5Ghw">
          <ownedParameter xmi:id="_wDvpyYq_EeqIWs6fLn5Ghw" name="g" type="_v_OWIIq_EeqIWs6fLn5Ghw"/>
          <language>java</language>
          <body>String strScore =&quot;Score : &quot;+ etat.getScore();
		   
		FontMetrics fm = getFontMetrics(g.getFont());
		int printedLength = fm.stringWidth(strScore) +10; // on ajoute 10 pour pas etre collé au bord
		g.drawString(strScore, LARG-printedLength, 20);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDwQ0Iq_EeqIWs6fLn5Ghw" name="drawVitesse" specification="_wBEwQIq_EeqIWs6fLn5Ghw">
          <ownedParameter xmi:id="_wDwQ0Yq_EeqIWs6fLn5Ghw" name="g" type="_v_OWIIq_EeqIWs6fLn5Ghw"/>
          <language>java</language>
          <body>// on arrondit la vitesse à 2 chiffres après la virgule pour l'affichage
		float vitesse = (float)((int)(etat.getVitesse()*100))/100;
		String str = &quot;Vitesse : &quot;+vitesse;
		g.drawString(str, 10, 475);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDwQ0oq_EeqIWs6fLn5Ghw" name="drawAltitude" specification="_wBFXUIq_EeqIWs6fLn5Ghw">
          <ownedParameter xmi:id="_wDwQ04q_EeqIWs6fLn5Ghw" name="g" type="_v_OWIIq_EeqIWs6fLn5Ghw"/>
          <language>java</language>
          <body>String str = &quot;Altitude : &quot;+ etat.getPosVert()/10;
		g.drawString(str, 10, 520);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDwQ1Iq_EeqIWs6fLn5Ghw" name="drawAccel" specification="_wBFXUoq_EeqIWs6fLn5Ghw">
          <ownedParameter xmi:id="_wDwQ1Yq_EeqIWs6fLn5Ghw" name="g" type="_v_OWIIq_EeqIWs6fLn5Ghw"/>
          <language>java</language>
          <body>// on arrondit la vitesse à 2 chiffres après la virgule pour l'affichage
		float accel = (float)((int)(etat.getAccel()*100))/100;
		String str = &quot;Accélération : &quot;+accel+&quot; %&quot;;
		g.drawString(str, 10, 540);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDwQ1oq_EeqIWs6fLn5Ghw" name="retry" specification="_v5F48Iq_EeqIWs6fLn5Ghw">
          <language>java</language>
          <body>this.moto = new VueMoto(etat);
		this.nuages = new VueNuages();
		this.check = etat.getCheck();
		this.clock = check.getClock();
		this.decors = new VueDecors(etat);
		this.ennemis = new VueEnnemis(etat);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDw34Iq_EeqIWs6fLn5Ghw" name="paint" specification="_wBF-YIq_EeqIWs6fLn5Ghw">
          <ownedParameter xmi:id="_wDw34Yq_EeqIWs6fLn5Ghw" name="g" type="_v_OWIIq_EeqIWs6fLn5Ghw"/>
          <language>java</language>
          <body>Graphics2D g2d = (Graphics2D) g;
		//nettoyage ecran
		super.paint(g);
		
		//dessine horizon
		drawHorizon(g);
		//affiche la vitesse
		drawVitesse(g);
		//affiche la piste
		drawPiste(g2d);
		//affiche le décor de montagne au dessus de l'horizon
		drawMontagne(g);
		//dessine obstacles
		drawObstacles(g2d);
		//dessine décors
		this.decors.drawDecors(g);
		//dessine ennemis
		ennemis.drawMotos(g);
		//dessine nuages
		this.nuages.dessiner(etat.getPosX(),g);
		//dessine moto
		this.moto.drawMoto(g);
		// affiche le timeout avant de perdre
		drawClock(g);
		//affichage score
		drawScore(g);
		// si on a perdu on affiche game over
		if(etat.getFin()) {
			drawEnd(g);
		}
		//affichage altitude
		drawAltitude(g);
		//affiche accélération
		drawAccel(g);
		
		//si on est en train de relancer une partie on réinitialise les nuages
		if(etat.getRetry()) {
			this.nuages.retry();
		}
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_v499IIq_EeqIWs6fLn5Ghw" name="projection" visibility="private" method="_wDtNhIq_EeqIWs6fLn5Ghw">
          <ownedComment xmi:id="_wD9sNIq_EeqIWs6fLn5Ghw">
            <body>Cette méthode calcule la projection sur l'écran (plan xOy) d'un point définir par ses coordonnées x,y,z.</body>
          </ownedComment>
          <ownedParameter xmi:id="_v4-kMIq_EeqIWs6fLn5Ghw" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_v4-kMYq_EeqIWs6fLn5Ghw" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_v4-kMoq_EeqIWs6fLn5Ghw" name="z">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_wA_QsIq_EeqIWs6fLn5Ghw" type="_v--egIq_EeqIWs6fLn5Ghw" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_v5F48Iq_EeqIWs6fLn5Ghw" name="retry" method="_wDwQ1oq_EeqIWs6fLn5Ghw"/>
        <ownedOperation xmi:id="_v_0zEIq_EeqIWs6fLn5Ghw" name="Affichage" method="_wDr_YIq_EeqIWs6fLn5Ghw">
          <eAnnotations xmi:id="_v_0zEoq_EeqIWs6fLn5Ghw" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_v_0zE4q_EeqIWs6fLn5Ghw" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_wD9FKIq_EeqIWs6fLn5Ghw">
            <body>Constructor
	 * @param etat</body>
          </ownedComment>
          <ownedParameter xmi:id="_v_0zEYq_EeqIWs6fLn5Ghw" name="etat" type="_v3YowIq_EeqIWs6fLn5Ghw"/>
          <ownedParameter xmi:id="_v_1aIIq_EeqIWs6fLn5Ghw" type="_v41aQIq_EeqIWs6fLn5Ghw" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_wA80cIq_EeqIWs6fLn5Ghw" name="drawEnd" method="_wDsmcIq_EeqIWs6fLn5Ghw">
          <ownedComment xmi:id="_wD9sMIq_EeqIWs6fLn5Ghw">
            <body>Affiche le message de fin de partie
	 * @param g</body>
          </ownedComment>
          <ownedParameter xmi:id="_wA9bgIq_EeqIWs6fLn5Ghw" name="g" type="_v_OWIIq_EeqIWs6fLn5Ghw"/>
        </ownedOperation>
        <ownedOperation xmi:id="_wA9bgYq_EeqIWs6fLn5Ghw" name="drawClock" method="_wDsmcoq_EeqIWs6fLn5Ghw">
          <ownedComment xmi:id="_wD9sMYq_EeqIWs6fLn5Ghw">
            <body>affiche le temps restant avant le game over
	 * @param g</body>
          </ownedComment>
          <ownedParameter xmi:id="_wA9bgoq_EeqIWs6fLn5Ghw" name="g" type="_v_OWIIq_EeqIWs6fLn5Ghw"/>
        </ownedOperation>
        <ownedOperation xmi:id="_wA-CkIq_EeqIWs6fLn5Ghw" name="drawHorizon" visibility="private" method="_wDsmdIq_EeqIWs6fLn5Ghw">
          <ownedComment xmi:id="_wD9sMoq_EeqIWs6fLn5Ghw">
            <body>affiche la ligne de l'horizon en haut de la fenetre
	 * @param g</body>
          </ownedComment>
          <ownedParameter xmi:id="_wA-CkYq_EeqIWs6fLn5Ghw" name="g" type="_v_OWIIq_EeqIWs6fLn5Ghw"/>
        </ownedOperation>
        <ownedOperation xmi:id="_wA-poIq_EeqIWs6fLn5Ghw" name="tracer" visibility="private" method="_wDtNgIq_EeqIWs6fLn5Ghw">
          <ownedComment xmi:id="_wD9sM4q_EeqIWs6fLn5Ghw">
            <body>trace le segment qui relie deux points</body>
          </ownedComment>
          <ownedParameter xmi:id="_wA-poYq_EeqIWs6fLn5Ghw" name="p1" type="_v--egIq_EeqIWs6fLn5Ghw"/>
          <ownedParameter xmi:id="_wA-pooq_EeqIWs6fLn5Ghw" name="p2" type="_v--egIq_EeqIWs6fLn5Ghw"/>
          <ownedParameter xmi:id="_wA-po4q_EeqIWs6fLn5Ghw" name="g" type="_v_OWIIq_EeqIWs6fLn5Ghw"/>
        </ownedOperation>
        <ownedOperation xmi:id="_wA_3wIq_EeqIWs6fLn5Ghw" name="drawPiste" visibility="private" method="_wDtNiYq_EeqIWs6fLn5Ghw">
          <ownedComment xmi:id="_wD9sNYq_EeqIWs6fLn5Ghw">
            <body>Affiche la piste et les checkpoints
	 * @param g</body>
          </ownedComment>
          <ownedParameter xmi:id="_wA_3wYq_EeqIWs6fLn5Ghw" name="g" type="_v_v6kYq_EeqIWs6fLn5Ghw"/>
        </ownedOperation>
        <ownedOperation xmi:id="_wBAe0Iq_EeqIWs6fLn5Ghw" name="calculXdepuisYdansSegment" method="_wDt0kIq_EeqIWs6fLn5Ghw">
          <ownedComment xmi:id="_wD9sNoq_EeqIWs6fLn5Ghw">
            <body>Une fonction pour calculer la position en x d'un point sur un segment [P1 P2] à partir de sa coordonnée en y.
	 * Ici, on ne s'en sert qu'une fois (pour &quot;couper&quot; le dernier segment à l'horizon) mais comme
	 * cela va être très utile dans les autres vues, autant l'écrire tout de suite !
	 * Dans le cas d'un segment horizontal, retourne -1.</body>
          </ownedComment>
          <ownedParameter xmi:id="_wBAe0Yq_EeqIWs6fLn5Ghw" name="p1" type="_v--egIq_EeqIWs6fLn5Ghw"/>
          <ownedParameter xmi:id="_wBAe0oq_EeqIWs6fLn5Ghw" name="p2" type="_v--egIq_EeqIWs6fLn5Ghw"/>
          <ownedParameter xmi:id="_wBAe04q_EeqIWs6fLn5Ghw" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_wBAe1Iq_EeqIWs6fLn5Ghw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_wBBF4Iq_EeqIWs6fLn5Ghw" name="drawMontagne" visibility="private" method="_wDt0lYq_EeqIWs6fLn5Ghw">
          <ownedComment xmi:id="_wD9sN4q_EeqIWs6fLn5Ghw">
            <body>Affiche la Montagne au dessus de l'horizon
	 * @param g</body>
          </ownedComment>
          <ownedParameter xmi:id="_wBBF4Yq_EeqIWs6fLn5Ghw" name="g" type="_v_OWIIq_EeqIWs6fLn5Ghw"/>
        </ownedOperation>
        <ownedOperation xmi:id="_wBBs8Iq_EeqIWs6fLn5Ghw" name="drawCaisse" visibility="private" method="_wDvCsIq_EeqIWs6fLn5Ghw">
          <ownedParameter xmi:id="_wBBs8Yq_EeqIWs6fLn5Ghw" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_wBCUAIq_EeqIWs6fLn5Ghw" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_wBCUAYq_EeqIWs6fLn5Ghw" name="width">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_wBCUAoq_EeqIWs6fLn5Ghw" name="height">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_wBCUA4q_EeqIWs6fLn5Ghw" name="g" type="_v_v6kYq_EeqIWs6fLn5Ghw"/>
        </ownedOperation>
        <ownedOperation xmi:id="_wBC7EIq_EeqIWs6fLn5Ghw" name="drawHole" visibility="private" method="_wDvpwIq_EeqIWs6fLn5Ghw">
          <ownedParameter xmi:id="_wBC7EYq_EeqIWs6fLn5Ghw" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_wBC7Eoq_EeqIWs6fLn5Ghw" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_wBC7E4q_EeqIWs6fLn5Ghw" name="width">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_wBC7FIq_EeqIWs6fLn5Ghw" name="height">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_wBC7FYq_EeqIWs6fLn5Ghw" name="g" type="_v_OWIIq_EeqIWs6fLn5Ghw"/>
        </ownedOperation>
        <ownedOperation xmi:id="_wBDiIIq_EeqIWs6fLn5Ghw" name="drawObstacles" visibility="private" method="_wDvpxoq_EeqIWs6fLn5Ghw">
          <ownedComment xmi:id="_wD9sOIq_EeqIWs6fLn5Ghw">
            <body>Affiche les obstacles sur la piste
	 * @param g</body>
          </ownedComment>
          <ownedParameter xmi:id="_wBDiIYq_EeqIWs6fLn5Ghw" name="g" type="_v_v6kYq_EeqIWs6fLn5Ghw"/>
        </ownedOperation>
        <ownedOperation xmi:id="_wBEJMIq_EeqIWs6fLn5Ghw" name="drawScore" visibility="private" method="_wDvpyIq_EeqIWs6fLn5Ghw">
          <ownedComment xmi:id="_wD-TQIq_EeqIWs6fLn5Ghw">
            <body>Affiche le score en haut à droite
	 * @param g</body>
          </ownedComment>
          <ownedParameter xmi:id="_wBEJMYq_EeqIWs6fLn5Ghw" name="g" type="_v_OWIIq_EeqIWs6fLn5Ghw"/>
        </ownedOperation>
        <ownedOperation xmi:id="_wBEwQIq_EeqIWs6fLn5Ghw" name="drawVitesse" visibility="private" method="_wDwQ0Iq_EeqIWs6fLn5Ghw">
          <ownedComment xmi:id="_wD-TQYq_EeqIWs6fLn5Ghw">
            <body>affiche la vitesse du vehicule en fonction de sa position
	 * @param g</body>
          </ownedComment>
          <ownedParameter xmi:id="_wBEwQYq_EeqIWs6fLn5Ghw" name="g" type="_v_OWIIq_EeqIWs6fLn5Ghw"/>
        </ownedOperation>
        <ownedOperation xmi:id="_wBFXUIq_EeqIWs6fLn5Ghw" name="drawAltitude" visibility="private" method="_wDwQ0oq_EeqIWs6fLn5Ghw">
          <ownedComment xmi:id="_wD-TQoq_EeqIWs6fLn5Ghw">
            <body>Affiche l'altitude de la moto sur la partie gauche de la fenêtre
	 * @param g</body>
          </ownedComment>
          <ownedParameter xmi:id="_wBFXUYq_EeqIWs6fLn5Ghw" name="g" type="_v_OWIIq_EeqIWs6fLn5Ghw"/>
        </ownedOperation>
        <ownedOperation xmi:id="_wBFXUoq_EeqIWs6fLn5Ghw" name="drawAccel" visibility="private" method="_wDwQ1Iq_EeqIWs6fLn5Ghw">
          <ownedComment xmi:id="_wD-TQ4q_EeqIWs6fLn5Ghw">
            <body>Affiche l'accélération
	 * @param g</body>
          </ownedComment>
          <ownedParameter xmi:id="_wBFXU4q_EeqIWs6fLn5Ghw" name="g" type="_v_OWIIq_EeqIWs6fLn5Ghw"/>
        </ownedOperation>
        <ownedOperation xmi:id="_wBF-YIq_EeqIWs6fLn5Ghw" name="paint" method="_wDw34Iq_EeqIWs6fLn5Ghw">
          <ownedParameter xmi:id="_wBF-YYq_EeqIWs6fLn5Ghw" name="g" type="_v_OWIIq_EeqIWs6fLn5Ghw"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_v5aCAIq_EeqIWs6fLn5Ghw" name="VueDecors">
        <ownedAttribute xmi:id="_wDDGMIq_EeqIWs6fLn5Ghw" name="probaDecor" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_wDDGMYq_EeqIWs6fLn5Ghw" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_wDDtQYq_EeqIWs6fLn5Ghw" name="maxDecors" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_wDDtQoq_EeqIWs6fLn5Ghw" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_wDEUUYq_EeqIWs6fLn5Ghw" name="etat" visibility="private" type="_v3YowIq_EeqIWs6fLn5Ghw" association="_wEfQoYq_EeqIWs6fLn5Ghw">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_IWHu4IrIEeqIWs6fLn5Ghw" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_IWHu4YrIEeqIWs6fLn5Ghw" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDxe8Iq_EeqIWs6fLn5Ghw" name="VueDecors" specification="_wABAUIq_EeqIWs6fLn5Ghw">
          <ownedParameter xmi:id="_wDxe8Yq_EeqIWs6fLn5Ghw" name="etat" type="_v3YowIq_EeqIWs6fLn5Ghw"/>
          <ownedParameter xmi:id="_wDxe8oq_EeqIWs6fLn5Ghw" type="_v5aCAIq_EeqIWs6fLn5Ghw" direction="return"/>
          <language>java</language>
          <body>this.etat = etat;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDxe84q_EeqIWs6fLn5Ghw" name="drawDecors" specification="_wBK24Iq_EeqIWs6fLn5Ghw">
          <ownedParameter xmi:id="_wDxe9Iq_EeqIWs6fLn5Ghw" name="g" type="_v_OWIIq_EeqIWs6fLn5Ghw"/>
          <language>java</language>
          <body>etat.updateDecors();
		for (Decor decor : etat.getDecors()) {
			Rectangle r = decor.getBounds();
			if(r.y + r.height > Affichage.posHorizon) {
				switch (decor.getType()) {
				case 0:
					drawArbre(r.x, r.y, r.width, r.height, g);
					break;
				case 1:
					drawRock(r.x, r.y, r.width, r.height, g);
					break;
				case 2:
					drawHouse(r.x, r.y, r.width, r.height, g);
					break;
				default:
					break;
				}
			}
		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDyGAIq_EeqIWs6fLn5Ghw" name="drawArbre" specification="_wBLd8Iq_EeqIWs6fLn5Ghw">
          <ownedParameter xmi:id="_wDyGAYq_EeqIWs6fLn5Ghw" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_wDyGAoq_EeqIWs6fLn5Ghw" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_wDyGA4q_EeqIWs6fLn5Ghw" name="width">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_wDyGBIq_EeqIWs6fLn5Ghw" name="height">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_wDyGBYq_EeqIWs6fLn5Ghw" name="g" type="_v_OWIIq_EeqIWs6fLn5Ghw"/>
          <language>java</language>
          <body>g.setColor(new Color(84, 64, 6));
		int largTronc = width/6; 
		g.fillRect(
				x+width/2-largTronc/2,
				y+height/2,
				largTronc,
				height/2
		);
		
		g.setColor(new Color(98, 172, 19));
		g.fillOval(x,y,width,height/2);
		g.setColor(Color.BLACK);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDyGBoq_EeqIWs6fLn5Ghw" name="drawRock" specification="_wBMFAIq_EeqIWs6fLn5Ghw">
          <ownedParameter xmi:id="_wDyGB4q_EeqIWs6fLn5Ghw" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_wDyGCIq_EeqIWs6fLn5Ghw" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_wDyGCYq_EeqIWs6fLn5Ghw" name="width">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_wDyGCoq_EeqIWs6fLn5Ghw" name="height">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_wDyGC4q_EeqIWs6fLn5Ghw" name="g" type="_v_OWIIq_EeqIWs6fLn5Ghw"/>
          <language>java</language>
          <body>g.setColor(new Color(175, 174, 174));
		g.fillOval(x,y,width,height);
		g.setColor(Color.BLACK);
		g.drawOval(x,y,width,height);
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDytEIq_EeqIWs6fLn5Ghw" name="drawHouse" specification="_wBNTIIq_EeqIWs6fLn5Ghw">
          <ownedParameter xmi:id="_wDytEYq_EeqIWs6fLn5Ghw" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_wDytEoq_EeqIWs6fLn5Ghw" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_wDytE4q_EeqIWs6fLn5Ghw" name="width">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_wDytFIq_EeqIWs6fLn5Ghw" name="height">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_wDytFYq_EeqIWs6fLn5Ghw" name="g" type="_v_OWIIq_EeqIWs6fLn5Ghw"/>
          <language>java</language>
          <body>g.setColor(Color.BLACK);
		
		int hToit = height * 2/5; 
		int hMurs = height - hToit;
		
		g.setColor(Color.BLUE);
		g.fillPolygon(new int[] {x, x+width/2, x+width}, new int[] {y+hToit,y,y+hToit}, 3);
		
		g.setColor(Color.RED);
		g.fillRect(x,y+hToit,width,hMurs);
		
		int xPorte = width * 4/7;
		int hPorte = hMurs * 3/5; 
		int yPorte = hToit+(hMurs - hPorte);
		g.setColor(Color.YELLOW);
		g.fillRect(x+xPorte,y+yPorte,width/3,hPorte);
		g.setColor(Color.BLACK);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_wABAUIq_EeqIWs6fLn5Ghw" name="VueDecors" method="_wDxe8Iq_EeqIWs6fLn5Ghw">
          <eAnnotations xmi:id="_wABnYYq_EeqIWs6fLn5Ghw" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_wABnYoq_EeqIWs6fLn5Ghw" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_wABnYIq_EeqIWs6fLn5Ghw" name="etat" type="_v3YowIq_EeqIWs6fLn5Ghw"/>
          <ownedParameter xmi:id="_wABnY4q_EeqIWs6fLn5Ghw" type="_v5aCAIq_EeqIWs6fLn5Ghw" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_wBK24Iq_EeqIWs6fLn5Ghw" name="drawDecors" method="_wDxe84q_EeqIWs6fLn5Ghw">
          <ownedParameter xmi:id="_wBK24Yq_EeqIWs6fLn5Ghw" name="g" type="_v_OWIIq_EeqIWs6fLn5Ghw"/>
        </ownedOperation>
        <ownedOperation xmi:id="_wBLd8Iq_EeqIWs6fLn5Ghw" name="drawArbre" visibility="private" method="_wDyGAIq_EeqIWs6fLn5Ghw">
          <ownedParameter xmi:id="_wBLd8Yq_EeqIWs6fLn5Ghw" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_wBLd8oq_EeqIWs6fLn5Ghw" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_wBLd84q_EeqIWs6fLn5Ghw" name="width">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_wBLd9Iq_EeqIWs6fLn5Ghw" name="height">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_wBLd9Yq_EeqIWs6fLn5Ghw" name="g" type="_v_OWIIq_EeqIWs6fLn5Ghw"/>
        </ownedOperation>
        <ownedOperation xmi:id="_wBMFAIq_EeqIWs6fLn5Ghw" name="drawRock" visibility="private" method="_wDyGBoq_EeqIWs6fLn5Ghw">
          <ownedParameter xmi:id="_wBMsEIq_EeqIWs6fLn5Ghw" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_wBMsEYq_EeqIWs6fLn5Ghw" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_wBMsEoq_EeqIWs6fLn5Ghw" name="width">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_wBMsE4q_EeqIWs6fLn5Ghw" name="height">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_wBMsFIq_EeqIWs6fLn5Ghw" name="g" type="_v_OWIIq_EeqIWs6fLn5Ghw"/>
        </ownedOperation>
        <ownedOperation xmi:id="_wBNTIIq_EeqIWs6fLn5Ghw" name="drawHouse" visibility="private" method="_wDytEIq_EeqIWs6fLn5Ghw">
          <ownedParameter xmi:id="_wBNTIYq_EeqIWs6fLn5Ghw" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_wBNTIoq_EeqIWs6fLn5Ghw" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_wBNTI4q_EeqIWs6fLn5Ghw" name="width">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_wBNTJIq_EeqIWs6fLn5Ghw" name="height">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_wBNTJYq_EeqIWs6fLn5Ghw" name="g" type="_v_OWIIq_EeqIWs6fLn5Ghw"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_v5kaEIq_EeqIWs6fLn5Ghw" name="VueEnnemis">
        <ownedAttribute xmi:id="_wDE7YIq_EeqIWs6fLn5Ghw" name="PATH" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_wDFicIq_EeqIWs6fLn5Ghw" value="&quot;imgs/ennemi&quot;"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_wDGJgIq_EeqIWs6fLn5Ghw" name="etat" visibility="private" type="_v3YowIq_EeqIWs6fLn5Ghw" association="_wEf3sYq_EeqIWs6fLn5Ghw"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDytFoq_EeqIWs6fLn5Ghw" name="VueEnnemis" specification="_wAEqsIq_EeqIWs6fLn5Ghw">
          <ownedParameter xmi:id="_wDytF4q_EeqIWs6fLn5Ghw" name="etat" type="_v3YowIq_EeqIWs6fLn5Ghw"/>
          <ownedParameter xmi:id="_wDytGIq_EeqIWs6fLn5Ghw" type="_v5kaEIq_EeqIWs6fLn5Ghw" direction="return"/>
          <language>java</language>
          <body>this.etat = etat;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDzUIIq_EeqIWs6fLn5Ghw" name="drawMotos" specification="_wBOhQIq_EeqIWs6fLn5Ghw">
          <ownedParameter xmi:id="_wDzUIYq_EeqIWs6fLn5Ghw" name="g" type="_v_OWIIq_EeqIWs6fLn5Ghw"/>
          <language>java</language>
          <body>for (Ennemi ennemi : etat.getEnnemis()) {
			
			Rectangle bounds = ennemi.getBounds();
			//si la moto est en dessous de posHorizon
			if(bounds.y + bounds.height > Affichage.posHorizon) {
				// on affiche la moto selon si elle va tout droit, vers la droite ou la gauche
				String str = PATH+ennemi.getEtatMoto()+&quot;.png&quot;;
				try {
					Image image = ImageIO.read(VueEnnemis.class.getResource(str)); 
					image = image.getScaledInstance(bounds.width, bounds.height, Image.SCALE_SMOOTH);
					g.drawImage(image,bounds.x, bounds.y, null);
				}catch (IOException e) {
					e.printStackTrace();
				}
			}
		}
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_wAEqsIq_EeqIWs6fLn5Ghw" name="VueEnnemis" method="_wDytFoq_EeqIWs6fLn5Ghw">
          <eAnnotations xmi:id="_wAEqsoq_EeqIWs6fLn5Ghw" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_wAEqs4q_EeqIWs6fLn5Ghw" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_wAEqsYq_EeqIWs6fLn5Ghw" name="etat" type="_v3YowIq_EeqIWs6fLn5Ghw"/>
          <ownedParameter xmi:id="_wAEqtIq_EeqIWs6fLn5Ghw" type="_v5kaEIq_EeqIWs6fLn5Ghw" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_wBOhQIq_EeqIWs6fLn5Ghw" name="drawMotos" method="_wDzUIIq_EeqIWs6fLn5Ghw">
          <ownedParameter xmi:id="_wBOhQYq_EeqIWs6fLn5Ghw" name="g" type="_v_OWIIq_EeqIWs6fLn5Ghw"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_v5pSkIq_EeqIWs6fLn5Ghw" name="VueMoto">
        <ownedAttribute xmi:id="_wDGwkIq_EeqIWs6fLn5Ghw" name="PATH" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_wDGwkYq_EeqIWs6fLn5Ghw" value="&quot;imgs/&quot;"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_wDHXoYq_EeqIWs6fLn5Ghw" name="decBord" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_wDHXooq_EeqIWs6fLn5Ghw" value="20"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_wDH-sYq_EeqIWs6fLn5Ghw" name="etat" visibility="private" type="_v3YowIq_EeqIWs6fLn5Ghw" association="_wEgewYq_EeqIWs6fLn5Ghw"/>
        <ownedAttribute xmi:id="_wDIlwIq_EeqIWs6fLn5Ghw" name="image" visibility="package" type="_v_FzQIq_EeqIWs6fLn5Ghw" association="_wEhF0Yq_EeqIWs6fLn5Ghw"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDzUIoq_EeqIWs6fLn5Ghw" name="VueMoto" specification="_wAGf4Iq_EeqIWs6fLn5Ghw">
          <ownedParameter xmi:id="_wDzUI4q_EeqIWs6fLn5Ghw" name="etat" type="_v3YowIq_EeqIWs6fLn5Ghw"/>
          <ownedParameter xmi:id="_wDzUJIq_EeqIWs6fLn5Ghw" type="_v5pSkIq_EeqIWs6fLn5Ghw" direction="return"/>
          <language>java</language>
          <body>this.etat = etat;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDzUJYq_EeqIWs6fLn5Ghw" name="drawMoto" specification="_wBPvYIq_EeqIWs6fLn5Ghw">
          <ownedParameter xmi:id="_wDzUJoq_EeqIWs6fLn5Ghw" name="g" type="_v_OWIIq_EeqIWs6fLn5Ghw"/>
          <language>java</language>
          <body>// si on vole 
		if(etat.getPosVert()>0){
			
			// affiche ombre de la moto selon l'état de la moto (gauche, tout droit, droite)
			String str = PATH+&quot;ombre&quot;+etat.getEtatMoto()+&quot;.png&quot;;
			try {
				//image = ImageIO.read(new File(str));
				image = ImageIO.read(VueMoto.class.getResource(str));
				g.drawImage(image, Affichage.LARG/2, Affichage.HAUT-image.getHeight(null)-decBord , null);
			}catch (IOException e) {
				e.printStackTrace();
			}
			
			// affiche les ailes
			try {	 
				//image = ImageIO.read(new File(PATH+&quot;ailes.png&quot;));
				image = ImageIO.read(VueMoto.class.getResource(PATH+&quot;ailes.png&quot;));
				g.drawImage(image, Affichage.LARG/2, Affichage.HAUT-image.getHeight(null)-decBord - etat.getPosVert(), null);
			} catch (IOException e) {
				e.printStackTrace();
			}
			
			// et les flammes si on est en train de gagner de l'altitude
			if(!etat.getGoDown()) {
				try {	 
					//image = ImageIO.read(new File(PATH+&quot;flammes.png&quot;));
					image = ImageIO.read(VueMoto.class.getResource(PATH+&quot;flammes.png&quot;));
					g.drawImage(image, Affichage.LARG/2, Affichage.HAUT-image.getHeight(null)-decBord - etat.getPosVert(), null);
				} catch (IOException e) {
					e.printStackTrace();
				}
			}
		}
		
		// dans tout les cas, on affiche la moto selon si elle va tout droit, vers la droite ou la gauche
		String str = PATH+etat.getEtatMoto()+&quot;.png&quot;;
		try { 
			//image = ImageIO.read(new File(str)); 
			image = ImageIO.read(VueMoto.class.getResource(str));
			g.drawImage(image, Affichage.LARG/2, Affichage.HAUT-image.getHeight(null)-decBord - etat.getPosVert(), null);
		}catch (IOException e) {
			e.printStackTrace();
		}
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_wAGf4Iq_EeqIWs6fLn5Ghw" name="VueMoto" method="_wDzUIoq_EeqIWs6fLn5Ghw">
          <eAnnotations xmi:id="_wAGf4oq_EeqIWs6fLn5Ghw" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_wAGf44q_EeqIWs6fLn5Ghw" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_wAGf4Yq_EeqIWs6fLn5Ghw" name="etat" type="_v3YowIq_EeqIWs6fLn5Ghw"/>
          <ownedParameter xmi:id="_wAGf5Iq_EeqIWs6fLn5Ghw" type="_v5pSkIq_EeqIWs6fLn5Ghw" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_wBPvYIq_EeqIWs6fLn5Ghw" name="drawMoto" method="_wDzUJYq_EeqIWs6fLn5Ghw">
          <ownedComment xmi:id="_wD-TRIq_EeqIWs6fLn5Ghw">
            <body>Affiche la moto à sa ({@link Etat#posX position})
	 * et suivant son {@link Etat#etatMoto état}
	 * @param g</body>
          </ownedComment>
          <ownedParameter xmi:id="_wBPvYYq_EeqIWs6fLn5Ghw" name="g" type="_v_OWIIq_EeqIWs6fLn5Ghw"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_v5ycgIq_EeqIWs6fLn5Ghw" name="VueNuages">
        <ownedAttribute xmi:id="_wDJM0Yq_EeqIWs6fLn5Ghw" name="PATH" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_wDJz4Iq_EeqIWs6fLn5Ghw" value="&quot;imgs/cloud.png&quot;"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_wDJz4oq_EeqIWs6fLn5Ghw" name="MaxNuages" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_wDKa8Iq_EeqIWs6fLn5Ghw" value="3"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_wDLCAIq_EeqIWs6fLn5Ghw" name="probaNuage" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_wDLCAYq_EeqIWs6fLn5Ghw" value="10"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_wDLpEIq_EeqIWs6fLn5Ghw" name="list" visibility="private" type="_v_QLUIq_EeqIWs6fLn5Ghw" association="_wEhs4Yq_EeqIWs6fLn5Ghw"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDz7MIq_EeqIWs6fLn5Ghw" name="VueNuages" specification="_v5zqoIq_EeqIWs6fLn5Ghw">
          <ownedParameter xmi:id="_wDz7MYq_EeqIWs6fLn5Ghw" type="_v5ycgIq_EeqIWs6fLn5Ghw" direction="return"/>
          <language>java</language>
          <body>this.list = new ArrayList&lt;Nuage>();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDz7Moq_EeqIWs6fLn5Ghw" name="dessiner" specification="_wBQ9gIq_EeqIWs6fLn5Ghw">
          <ownedParameter xmi:id="_wDz7M4q_EeqIWs6fLn5Ghw" name="posX">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_wDz7NIq_EeqIWs6fLn5Ghw" name="g" type="_v_OWIIq_EeqIWs6fLn5Ghw"/>
          <language>java</language>
          <body>//générer nuages 
		this.genererNuages();
		
		for(int i = 0; i &lt; this.list.size(); i++){
			Nuage nuage = this.list.get(i);
			
			// suppression nuages qui sortent de la vue
			if(nuage.getPosX() &lt; posX-nuage.getWidth())nuage.terminate();
			
			//si le nuage s'est arreté, on le retire de la liste  
			if(!nuage.isRunning()) {
				this.list.remove(nuage);
			}
			
			try {
				
				Image image = ImageIO.read(VueMoto.class.getResource(PATH)).getScaledInstance(nuage.getWidth(), nuage.getHeight(), 100);
				g.drawImage(image,  nuage.getPosX() - posX, nuage.getPosY(), null);	
			}
				catch (IOException e) {
				e.printStackTrace();	 
			}

		}
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDz7NYq_EeqIWs6fLn5Ghw" name="genererNuages" specification="_v52G44q_EeqIWs6fLn5Ghw">
          <language>java</language>
          <body>//on génére des nuages seulement si on a pas dépassé la taille max
		//et que le dernier nuage généré est entièrement visible à l'écran (pour éviter les attroupements de nuages)
		if(this.list.size() &lt; MaxNuages &amp;&amp; (list.size() == 0 || list.get(list.size()-1).getPosX() + list.get(list.size()-1).getWidth() &lt; Affichage.LARG)){
			//on génère un oiseau si on tombe sur 1 
			if(randint(1,probaNuage) == 1 ) {
				//System.out.println(&quot;gen cloud &quot;+list.size());
				Nuage nuage = new Nuage();
				(new Thread(nuage)).start();
				this.list.add(nuage);
			}
		}	
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wD0iQIq_EeqIWs6fLn5Ghw" name="retry" specification="_v52t8Iq_EeqIWs6fLn5Ghw">
          <language>java</language>
          <body>for(Nuage nuage : this.list) {
			nuage.terminate();
		}
		this.list = new ArrayList&lt;Nuage>();
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wD0iQYq_EeqIWs6fLn5Ghw" name="randint" specification="_v53VAIq_EeqIWs6fLn5Ghw">
          <ownedParameter xmi:id="_wD0iQoq_EeqIWs6fLn5Ghw" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_wD0iQ4q_EeqIWs6fLn5Ghw" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_wD0iRIq_EeqIWs6fLn5Ghw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return ThreadLocalRandom.current().nextInt(min, max + 1);
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_v5zqoIq_EeqIWs6fLn5Ghw" name="VueNuages" method="_wDz7MIq_EeqIWs6fLn5Ghw">
          <eAnnotations xmi:id="_v52G4Iq_EeqIWs6fLn5Ghw" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_v52G4Yq_EeqIWs6fLn5Ghw" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_wD-6UIq_EeqIWs6fLn5Ghw">
            <body>initialise la {@link #list liste d'oiseaux}</body>
          </ownedComment>
          <ownedParameter xmi:id="_v52G4oq_EeqIWs6fLn5Ghw" type="_v5ycgIq_EeqIWs6fLn5Ghw" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_v52G44q_EeqIWs6fLn5Ghw" name="genererNuages" visibility="package" method="_wDz7NYq_EeqIWs6fLn5Ghw">
          <ownedComment xmi:id="_wD-6Uoq_EeqIWs6fLn5Ghw">
            <body>à chaque rafraichissement de l'affichage on génère un oiseau avec 1 chance sur 10 000 si on a pas dépassé le {@link #MaxOiseaux maximum d'oiseaux}</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_v52t8Iq_EeqIWs6fLn5Ghw" name="retry" method="_wD0iQIq_EeqIWs6fLn5Ghw">
          <ownedComment xmi:id="_wD-6U4q_EeqIWs6fLn5Ghw">
            <body>réinitialise tout les nuages (appelé quand on recommance une partie)</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_v53VAIq_EeqIWs6fLn5Ghw" name="randint" method="_wD0iQYq_EeqIWs6fLn5Ghw">
          <ownedComment xmi:id="_wD-6VIq_EeqIWs6fLn5Ghw">
            <body>Génère un chiffre aléatoire entre min et max
	 * @param min
	 * @param max
	 * @return random int between min and max</body>
          </ownedComment>
          <ownedParameter xmi:id="_v53VAYq_EeqIWs6fLn5Ghw" name="min">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_v53VAoq_EeqIWs6fLn5Ghw" name="max">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_v57mcIq_EeqIWs6fLn5Ghw" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_wBQ9gIq_EeqIWs6fLn5Ghw" name="dessiner" visibility="package" method="_wDz7Moq_EeqIWs6fLn5Ghw">
          <ownedComment xmi:id="_wD-6UYq_EeqIWs6fLn5Ghw">
            <body>dessine les oiseaux qui sont dans la fenetre, supprime ceux qui sont terminés
	 * @param g</body>
          </ownedComment>
          <ownedParameter xmi:id="_wBRkkIq_EeqIWs6fLn5Ghw" name="posX">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_wBRkkYq_EeqIWs6fLn5Ghw" name="g" type="_v_OWIIq_EeqIWs6fLn5Ghw"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_wEZxEYq_EeqIWs6fLn5Ghw" name="" memberEnd="_wEZxEoq_EeqIWs6fLn5Ghw _wC-NsIq_EeqIWs6fLn5Ghw">
        <ownedEnd xmi:id="_wEZxEoq_EeqIWs6fLn5Ghw" name="" type="_v41aQIq_EeqIWs6fLn5Ghw" association="_wEZxEYq_EeqIWs6fLn5Ghw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_wEa_MIq_EeqIWs6fLn5Ghw" name="" memberEnd="_wEa_MYq_EeqIWs6fLn5Ghw _wC-0wIq_EeqIWs6fLn5Ghw">
        <ownedEnd xmi:id="_wEa_MYq_EeqIWs6fLn5Ghw" name="" type="_v41aQIq_EeqIWs6fLn5Ghw" association="_wEa_MIq_EeqIWs6fLn5Ghw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_wEbmQYq_EeqIWs6fLn5Ghw" name="" memberEnd="_wEbmQoq_EeqIWs6fLn5Ghw _wC_b0Iq_EeqIWs6fLn5Ghw">
        <ownedEnd xmi:id="_wEbmQoq_EeqIWs6fLn5Ghw" name="" type="_v41aQIq_EeqIWs6fLn5Ghw" association="_wEbmQYq_EeqIWs6fLn5Ghw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_wEcNUYq_EeqIWs6fLn5Ghw" name="" memberEnd="_wEcNUoq_EeqIWs6fLn5Ghw _wC_b0oq_EeqIWs6fLn5Ghw">
        <ownedEnd xmi:id="_wEcNUoq_EeqIWs6fLn5Ghw" name="" type="_v41aQIq_EeqIWs6fLn5Ghw" association="_wEcNUYq_EeqIWs6fLn5Ghw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_wEc0YYq_EeqIWs6fLn5Ghw" name="" memberEnd="_wEc0Yoq_EeqIWs6fLn5Ghw _wDAC4Yq_EeqIWs6fLn5Ghw">
        <ownedEnd xmi:id="_wEc0Yoq_EeqIWs6fLn5Ghw" name="" type="_v41aQIq_EeqIWs6fLn5Ghw" association="_wEc0YYq_EeqIWs6fLn5Ghw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_wEeCgIq_EeqIWs6fLn5Ghw" name="" memberEnd="_wEeCgYq_EeqIWs6fLn5Ghw _wDAp8Yq_EeqIWs6fLn5Ghw">
        <ownedEnd xmi:id="_wEeCgYq_EeqIWs6fLn5Ghw" name="" type="_v41aQIq_EeqIWs6fLn5Ghw" association="_wEeCgIq_EeqIWs6fLn5Ghw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_wEepkIq_EeqIWs6fLn5Ghw" name="" memberEnd="_wEepkYq_EeqIWs6fLn5Ghw _wDBRAYq_EeqIWs6fLn5Ghw">
        <ownedEnd xmi:id="_wEepkYq_EeqIWs6fLn5Ghw" name="" type="_v41aQIq_EeqIWs6fLn5Ghw" association="_wEepkIq_EeqIWs6fLn5Ghw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_wEfQoYq_EeqIWs6fLn5Ghw" name="" memberEnd="_wEfQooq_EeqIWs6fLn5Ghw _wDEUUYq_EeqIWs6fLn5Ghw">
        <ownedEnd xmi:id="_wEfQooq_EeqIWs6fLn5Ghw" name="" type="_v5aCAIq_EeqIWs6fLn5Ghw" association="_wEfQoYq_EeqIWs6fLn5Ghw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_wEf3sYq_EeqIWs6fLn5Ghw" name="" memberEnd="_wEf3soq_EeqIWs6fLn5Ghw _wDGJgIq_EeqIWs6fLn5Ghw">
        <ownedEnd xmi:id="_wEf3soq_EeqIWs6fLn5Ghw" name="" type="_v5kaEIq_EeqIWs6fLn5Ghw" association="_wEf3sYq_EeqIWs6fLn5Ghw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_wEgewYq_EeqIWs6fLn5Ghw" name="" memberEnd="_wEgewoq_EeqIWs6fLn5Ghw _wDH-sYq_EeqIWs6fLn5Ghw">
        <ownedEnd xmi:id="_wEgewoq_EeqIWs6fLn5Ghw" name="" type="_v5pSkIq_EeqIWs6fLn5Ghw" association="_wEgewYq_EeqIWs6fLn5Ghw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_wEhF0Yq_EeqIWs6fLn5Ghw" name="" memberEnd="_wEhF0oq_EeqIWs6fLn5Ghw _wDIlwIq_EeqIWs6fLn5Ghw">
        <ownedEnd xmi:id="_wEhF0oq_EeqIWs6fLn5Ghw" name="" type="_v5pSkIq_EeqIWs6fLn5Ghw" association="_wEhF0Yq_EeqIWs6fLn5Ghw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_wEhs4Yq_EeqIWs6fLn5Ghw" name="" memberEnd="_wEhs4oq_EeqIWs6fLn5Ghw _wDLpEIq_EeqIWs6fLn5Ghw">
        <ownedEnd xmi:id="_wEhs4oq_EeqIWs6fLn5Ghw" name="" type="_v5ycgIq_EeqIWs6fLn5Ghw" association="_wEhs4Yq_EeqIWs6fLn5Ghw"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_v0yAsIq_EeqIWs6fLn5Ghw" name="main">
      <packagedElement xmi:type="uml:Class" xmi:id="_v3Ft0Iq_EeqIWs6fLn5Ghw" name="Main">
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wDWBJIq_EeqIWs6fLn5Ghw" name="main" specification="_v3GU4Iq_EeqIWs6fLn5Ghw">
          <ownedParameter xmi:id="_wDWBJYq_EeqIWs6fLn5Ghw" name="args">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wDWBJoq_EeqIWs6fLn5Ghw" value="*"/>
          </ownedParameter>
          <language>java</language>
          <body>//Initialisation modèle et Vue
			Etat mod = new Etat();
			Affichage aff = new Affichage(mod);
			//Initialisation Listener pour les touches clavier
			Keys kl = new Keys(mod);
			
			//on passe les threads à Etat dans un tableau (pour que Etat puisse les stopper) 
			StoppableThread[] threads = { 
				new RepaintScreen(aff),
				new Avancer(mod),
				new Vitesse(mod)
			};
			mod.setThreads(threads);
			
			
			/* Création JFrame*/
			JFrame fenetre = new JFrame(&quot;&quot;);
			/* ajout de l'Affichage(JPanel) à la fenêtre (JFrame)*/
			fenetre.add(aff);
			fenetre.pack();
			fenetre.setVisible(true);
			// on ajoute le keyListener qui attend les appuis clavier du joueur
			fenetre.addKeyListener(kl);
			fenetre.setFocusable(true);
			fenetre.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_v3GU4Iq_EeqIWs6fLn5Ghw" name="main" isStatic="true" method="_wDWBJIq_EeqIWs6fLn5Ghw">
          <ownedParameter xmi:id="_v3GU4Yq_EeqIWs6fLn5Ghw" name="args">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_v3G78Iq_EeqIWs6fLn5Ghw" value="*"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
    </packagedElement>
    <profileApplication xmi:id="_ussXQIq_EeqIWs6fLn5Ghw">
      <eAnnotations xmi:id="_uswosIq_EeqIWs6fLn5Ghw" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile"/>
    </profileApplication>
  </uml:Model>
  <UMLLabProfile:TargetLanguage xmi:id="_usxPwIq_EeqIWs6fLn5Ghw" base_Package="_t7rKAIq_EeqIWs6fLn5Ghw">
    <languageName>java</languageName>
  </UMLLabProfile:TargetLanguage>
  <UMLLabProfile:LegacyStyledElement xmi:id="_v2sFMIq_EeqIWs6fLn5Ghw" base_Element="_v2q3EIq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:Annotations xmi:id="_v2sFMYq_EeqIWs6fLn5Ghw" base_Element="_v2q3EIq_EeqIWs6fLn5Ghw">
    <annotations xmi:id="_v2ssQIq_EeqIWs6fLn5Ghw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_v2vvkYq_EeqIWs6fLn5Ghw" base_Element="_v2vvkIq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:Annotations xmi:id="_v2wWoIq_EeqIWs6fLn5Ghw" base_Element="_v2vvkIq_EeqIWs6fLn5Ghw">
    <annotations xmi:id="_v2wWoYq_EeqIWs6fLn5Ghw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_v24ScIq_EeqIWs6fLn5Ghw" base_Element="_v23rY4q_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:Annotations xmi:id="_v24ScYq_EeqIWs6fLn5Ghw" base_Element="_v23rY4q_EeqIWs6fLn5Ghw">
    <annotations xmi:id="_v24Scoq_EeqIWs6fLn5Ghw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_v2_nMIq_EeqIWs6fLn5Ghw" base_Element="_v2_AIIq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:Annotations xmi:id="_v3AOQIq_EeqIWs6fLn5Ghw" base_Element="_v2_AIIq_EeqIWs6fLn5Ghw">
    <annotations xmi:id="_v3AOQYq_EeqIWs6fLn5Ghw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_v3EfsYq_EeqIWs6fLn5Ghw" base_Element="_v3EfsIq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:Annotations xmi:id="_v3FGwIq_EeqIWs6fLn5Ghw" base_Element="_v3EfsIq_EeqIWs6fLn5Ghw">
    <annotations xmi:id="_v3FGwYq_EeqIWs6fLn5Ghw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_v3IxI4q_EeqIWs6fLn5Ghw" base_Element="_v3IxIIq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:Generics xmi:id="_v3jn4Iq_EeqIWs6fLn5Ghw" genericsValue="Point" base_Element="_v3jA0Iq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:Generics xmi:id="_v3mEIIq_EeqIWs6fLn5Ghw" genericsValue="Obstacle" base_Element="_v3k2AIq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:Generics xmi:id="_v4JdwIq_EeqIWs6fLn5Ghw" genericsValue="Point" base_Element="_v4ElQIq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:Array xmi:id="_v4gDEYq_EeqIWs6fLn5Ghw" dimensions="2" base_Element="_v4fcAYq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:Reference xmi:id="_v-mrEIq_EeqIWs6fLn5Ghw" base_Element="_v-jnwIq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:Reference xmi:id="_v-nSIIq_EeqIWs6fLn5Ghw" base_Element="_v-mrEYq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:Reference xmi:id="_v-t_0Iq_EeqIWs6fLn5Ghw" base_Element="_v-qVcIq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:Reference xmi:id="_v-vN8Iq_EeqIWs6fLn5Ghw" base_Element="_v-t_0Yq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:Reference xmi:id="_v-zfYIq_EeqIWs6fLn5Ghw" base_Element="_v-yRQIq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:Reference xmi:id="_v-7bMIq_EeqIWs6fLn5Ghw" base_Element="_v-4-8Iq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:Reference xmi:id="_v_ATsIq_EeqIWs6fLn5Ghw" base_Element="_v--egIq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:Reference xmi:id="_v_Bh0Iq_EeqIWs6fLn5Ghw" base_Element="_v_ATsYq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:Reference xmi:id="_v_GaUIq_EeqIWs6fLn5Ghw" base_Element="_v_FzQIq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:Reference xmi:id="_v_HocIq_EeqIWs6fLn5Ghw" base_Element="_v_HBYIq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:Reference xmi:id="_v_IPgIq_EeqIWs6fLn5Ghw" base_Element="_v_HocYq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:Reference xmi:id="_v_KrwIq_EeqIWs6fLn5Ghw" base_Element="_v_IPgYq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:Reference xmi:id="_v_PkQIq_EeqIWs6fLn5Ghw" base_Element="_v_OWIIq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:Reference xmi:id="_v_SAgIq_EeqIWs6fLn5Ghw" base_Element="_v_QLUIq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:Array xmi:id="_v_W5AIq_EeqIWs6fLn5Ghw" dimensions="1" base_Element="_v_WR8Iq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:Reference xmi:id="_v_teUIq_EeqIWs6fLn5Ghw" base_Element="_v_sQMIq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:Reference xmi:id="_v_uFYIq_EeqIWs6fLn5Ghw" base_Element="_v_teUYq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:Reference xmi:id="_v_uscIq_EeqIWs6fLn5Ghw" base_Element="_v_uFYYq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:Reference xmi:id="_v_v6kIq_EeqIWs6fLn5Ghw" base_Element="_v_uscYq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:Reference xmi:id="_v_xvwIq_EeqIWs6fLn5Ghw" base_Element="_v_v6kYq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:Reference xmi:id="_v_yW0Iq_EeqIWs6fLn5Ghw" base_Element="_v_xvwYq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:Reference xmi:id="_v_y94Iq_EeqIWs6fLn5Ghw" base_Element="_v_yW0Yq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_wAZa0Iq_EeqIWs6fLn5Ghw" base_Element="_wAYzwIq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:Annotations xmi:id="_wAZa0Yq_EeqIWs6fLn5Ghw" base_Element="_wAYzwIq_EeqIWs6fLn5Ghw">
    <annotations xmi:id="_wAZa0oq_EeqIWs6fLn5Ghw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_wAao8Iq_EeqIWs6fLn5Ghw" base_Element="_wAaB4Iq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:Annotations xmi:id="_wAao8Yq_EeqIWs6fLn5Ghw" base_Element="_wAaB4Iq_EeqIWs6fLn5Ghw">
    <annotations xmi:id="_wAao8oq_EeqIWs6fLn5Ghw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_wAb3EIq_EeqIWs6fLn5Ghw" base_Element="_wAbQAIq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:Annotations xmi:id="_wAb3EYq_EeqIWs6fLn5Ghw" base_Element="_wAbQAIq_EeqIWs6fLn5Ghw">
    <annotations xmi:id="_wAb3Eoq_EeqIWs6fLn5Ghw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_wAdsQIq_EeqIWs6fLn5Ghw" base_Element="_wAdFMYq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_wBGlcIq_EeqIWs6fLn5Ghw" base_Element="_wBF-YIq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:Annotations xmi:id="_wBHMgIq_EeqIWs6fLn5Ghw" base_Element="_wBF-YIq_EeqIWs6fLn5Ghw">
    <annotations xmi:id="_wBHMgYq_EeqIWs6fLn5Ghw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_wBdKwIq_EeqIWs6fLn5Ghw" base_Element="_wBcjsIq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_wBiDQIq_EeqIWs6fLn5Ghw" base_Element="_wBdKwYq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_wBiqUYq_EeqIWs6fLn5Ghw" base_Element="_wBiDQYq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_wBj4cIq_EeqIWs6fLn5Ghw" base_Element="_wBjRYIq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_wBkfgIq_EeqIWs6fLn5Ghw" base_Element="_wBj4cYq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_wBlGkIq_EeqIWs6fLn5Ghw" base_Element="_wBkfgoq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_wBmUsIq_EeqIWs6fLn5Ghw" base_Element="_wBltoIq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_wBni0Iq_EeqIWs6fLn5Ghw" base_Element="_wBm7wIq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_wBoJ4Iq_EeqIWs6fLn5Ghw" base_Element="_wBni0Yq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_wBqmIIq_EeqIWs6fLn5Ghw" base_Element="_wBp_EIq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_wBrNMIq_EeqIWs6fLn5Ghw" base_Element="_wBqmIYq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_wBr0QYq_EeqIWs6fLn5Ghw" base_Element="_wBrNMYq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_wBsbUoq_EeqIWs6fLn5Ghw" base_Element="_wBsbUIq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_wBtCYYq_EeqIWs6fLn5Ghw" base_Element="_wBtCYIq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_wBtpcIq_EeqIWs6fLn5Ghw" base_Element="_wBtCYoq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_wBuQgoq_EeqIWs6fLn5Ghw" base_Element="_wBuQgIq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_wBu3koq_EeqIWs6fLn5Ghw" base_Element="_wBu3kIq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_wBwFsIq_EeqIWs6fLn5Ghw" base_Element="_wBveoIq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_wBwswYq_EeqIWs6fLn5Ghw" base_Element="_wBwswIq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_wBx64oq_EeqIWs6fLn5Ghw" base_Element="_wBx64Iq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_wByh8oq_EeqIWs6fLn5Ghw" base_Element="_wByh8Iq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_wBzJAoq_EeqIWs6fLn5Ghw" base_Element="_wBzJAIq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_wBzwEIq_EeqIWs6fLn5Ghw" base_Element="_wBzJA4q_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_wB0XIIq_EeqIWs6fLn5Ghw" base_Element="_wBzwEYq_EeqIWs6fLn5Ghw">
    <associatedElement xmi:type="uml:Operation" xmi:id="_wB0XIYq_EeqIWs6fLn5Ghw" name="getY" visibility="private" method="_wDaSkIq_EeqIWs6fLn5Ghw">
      <ownedParameter xmi:id="_wB0-MIq_EeqIWs6fLn5Ghw" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:LegacyStyledElement xmi:id="_wB1lQIq_EeqIWs6fLn5Ghw" base_Element="_wB0-MYq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_wB2zYIq_EeqIWs6fLn5Ghw" base_Element="_wB1lQYq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_wB3acIq_EeqIWs6fLn5Ghw" base_Element="_wB2zYYq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_wB4okoq_EeqIWs6fLn5Ghw" base_Element="_wB4okIq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_wB5Pooq_EeqIWs6fLn5Ghw" base_Element="_wB5PoIq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_wB6dwIq_EeqIWs6fLn5Ghw" base_Element="_wB52sIq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_wB7E0Iq_EeqIWs6fLn5Ghw" base_Element="_wB6dwYq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_wB7E0oq_EeqIWs6fLn5Ghw" base_Element="_wB7E0Yq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_wB8S8Iq_EeqIWs6fLn5Ghw" base_Element="_wB7r4Iq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_wB9hEIq_EeqIWs6fLn5Ghw" base_Element="_wB86AIq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_wB-IIIq_EeqIWs6fLn5Ghw" base_Element="_wB9hEYq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_wB-vMIq_EeqIWs6fLn5Ghw" base_Element="_wB-IIYq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_wCAkYIq_EeqIWs6fLn5Ghw" base_Element="_wB_9UIq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_wCBLcIq_EeqIWs6fLn5Ghw" base_Element="_wCAkYYq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_wCBygYq_EeqIWs6fLn5Ghw" base_Element="_wCBLcYq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_wCCZkYq_EeqIWs6fLn5Ghw" base_Element="_wCBygoq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_wCDAooq_EeqIWs6fLn5Ghw" base_Element="_wCDAoIq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_wCEOwIq_EeqIWs6fLn5Ghw" base_Element="_wCDnsIq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_wCE10Iq_EeqIWs6fLn5Ghw" base_Element="_wCEOwYq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_wCFc4Iq_EeqIWs6fLn5Ghw" base_Element="_wCE10Yq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_wCGD8Yq_EeqIWs6fLn5Ghw" base_Element="_wCFc4Yq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_wCGrAYq_EeqIWs6fLn5Ghw" base_Element="_wCGD8oq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_wCHSEoq_EeqIWs6fLn5Ghw" base_Element="_wCHSEIq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_wCIgMIq_EeqIWs6fLn5Ghw" base_Element="_wCH5IIq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_wCJHQIq_EeqIWs6fLn5Ghw" base_Element="_wCIgMYq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_wCJuUIq_EeqIWs6fLn5Ghw" base_Element="_wCJHQYq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_wCKVYYq_EeqIWs6fLn5Ghw" base_Element="_wCJuUYq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_wCK8coq_EeqIWs6fLn5Ghw" base_Element="_wCK8cIq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_wCMKkIq_EeqIWs6fLn5Ghw" base_Element="_wCLjgYq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_wCMxoIq_EeqIWs6fLn5Ghw" base_Element="_wCMKkYq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_wCNYsIq_EeqIWs6fLn5Ghw" base_Element="_wCMxoYq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_wCN_wIq_EeqIWs6fLn5Ghw" base_Element="_wCNYsYq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_wCOm0Iq_EeqIWs6fLn5Ghw" base_Element="_wCN_wYq_EeqIWs6fLn5Ghw">
    <associatedElement xmi:type="uml:Operation" xmi:id="_wCPN4Iq_EeqIWs6fLn5Ghw" name="getGoDown" method="_wDcu0Iq_EeqIWs6fLn5Ghw">
      <ownedParameter xmi:id="_wCPN4Yq_EeqIWs6fLn5Ghw" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:LegacyStyledElement xmi:id="_wCP08Yq_EeqIWs6fLn5Ghw" base_Element="_wCP08Iq_EeqIWs6fLn5Ghw">
    <associatedElement xmi:type="uml:Operation" xmi:id="_wCRDEIq_EeqIWs6fLn5Ghw" name="getAccel" method="_wDdV4Iq_EeqIWs6fLn5Ghw">
      <ownedParameter xmi:id="_wCRqIIq_EeqIWs6fLn5Ghw" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:LegacyStyledElement xmi:id="_wCWioIq_EeqIWs6fLn5Ghw" base_Element="_wCV7kIq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_wCXJsIq_EeqIWs6fLn5Ghw" base_Element="_wCWioYq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_wCXwwIq_EeqIWs6fLn5Ghw" base_Element="_wCXJsYq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_wCYX0Iq_EeqIWs6fLn5Ghw" base_Element="_wCXwwYq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_wCY-4Yq_EeqIWs6fLn5Ghw" base_Element="_wCY-4Iq_EeqIWs6fLn5Ghw">
    <associatedElement xmi:type="uml:Operation" xmi:id="_wCZl8Iq_EeqIWs6fLn5Ghw" name="getScore" method="_wDgZMIq_EeqIWs6fLn5Ghw">
      <ownedParameter xmi:id="_wCZl8Yq_EeqIWs6fLn5Ghw" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:Array xmi:id="_wCaNAoq_EeqIWs6fLn5Ghw" base_Element="_wCaNAIq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_wCa0EIq_EeqIWs6fLn5Ghw" base_Element="_wCaNAIq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_wCbbIYq_EeqIWs6fLn5Ghw" base_Element="_wCbbIIq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:Generics xmi:id="_wCcpQIq_EeqIWs6fLn5Ghw" genericsValue="Decor" base_Element="_wCcCMYq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_wCdQUYq_EeqIWs6fLn5Ghw" base_Element="_wCdQUIq_EeqIWs6fLn5Ghw">
    <associatedElement xmi:type="uml:Operation" xmi:id="_wCeecIq_EeqIWs6fLn5Ghw" name="getEnnemis" method="_wDhAQYq_EeqIWs6fLn5Ghw">
      <ownedParameter xmi:id="_wCfskIq_EeqIWs6fLn5Ghw" type="_v_QLUIq_EeqIWs6fLn5Ghw" direction="return"/>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:Generics xmi:id="_wCd3YIq_EeqIWs6fLn5Ghw" genericsValue="Ennemi" base_Element="_wCdQUIq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:Generics xmi:id="_wCfFgIq_EeqIWs6fLn5Ghw" genericsValue="Ennemi" base_Element="_wCeecIq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_wCfskoq_EeqIWs6fLn5Ghw" base_Element="_wCfskYq_EeqIWs6fLn5Ghw">
    <associatedElement xmi:type="uml:Operation" xmi:id="_wCgToIq_EeqIWs6fLn5Ghw" name="getPiste" method="_wDhAQ4q_EeqIWs6fLn5Ghw">
      <ownedParameter xmi:id="_wCg6sIq_EeqIWs6fLn5Ghw" type="_v--egIq_EeqIWs6fLn5Ghw" direction="return">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wCg6sYq_EeqIWs6fLn5Ghw" value="*"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:Array xmi:id="_wCg6soq_EeqIWs6fLn5Ghw" dimensions="2" base_Element="_wCgToIq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_wCj-AYq_EeqIWs6fLn5Ghw" base_Element="_wCj-AIq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:Generics xmi:id="_wClMIIq_EeqIWs6fLn5Ghw" genericsValue="Point" base_Element="_wCklEIq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_wClzMIq_EeqIWs6fLn5Ghw" base_Element="_wCklEIq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_wCmaQIq_EeqIWs6fLn5Ghw" base_Element="_wClzMYq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_wCmaQoq_EeqIWs6fLn5Ghw" base_Element="_wCmaQYq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_wCnBUoq_EeqIWs6fLn5Ghw" base_Element="_wCnBUIq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_wCoPcIq_EeqIWs6fLn5Ghw" base_Element="_wCnoYIq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_wCo2gIq_EeqIWs6fLn5Ghw" base_Element="_wCoPcYq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_wCpdkIq_EeqIWs6fLn5Ghw" base_Element="_wCo2gYq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_wCqEoIq_EeqIWs6fLn5Ghw" base_Element="_wCpdkYq_EeqIWs6fLn5Ghw">
    <associatedElement xmi:type="uml:Operation" xmi:id="_wCqrsIq_EeqIWs6fLn5Ghw" name="getY" method="_wDoVAIq_EeqIWs6fLn5Ghw">
      <ownedParameter xmi:id="_wCqrsYq_EeqIWs6fLn5Ghw" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:LegacyStyledElement xmi:id="_wCr50Iq_EeqIWs6fLn5Ghw" base_Element="_wCrSwIq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_wCsg4Iq_EeqIWs6fLn5Ghw" base_Element="_wCr50Yq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_wCsg4oq_EeqIWs6fLn5Ghw" base_Element="_wCsg4Yq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_wCtvAoq_EeqIWs6fLn5Ghw" base_Element="_wCtvAIq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_wCuWEoq_EeqIWs6fLn5Ghw" base_Element="_wCuWEIq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_wCvkMYq_EeqIWs6fLn5Ghw" base_Element="_wCu9IIq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_wCwyUIq_EeqIWs6fLn5Ghw" base_Element="_wCwLQIq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_wCxZYIq_EeqIWs6fLn5Ghw" base_Element="_wCwyUYq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_wCyAcYq_EeqIWs6fLn5Ghw" base_Element="_wCxZYYq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:Generics xmi:id="_wCzOkIq_EeqIWs6fLn5Ghw" genericsValue="Point" base_Element="_wCyngIq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_wCz1oIq_EeqIWs6fLn5Ghw" base_Element="_wCyngIq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_wC0csIq_EeqIWs6fLn5Ghw" base_Element="_wCz1ooq_EeqIWs6fLn5Ghw">
    <associatedElement xmi:type="uml:Operation" xmi:id="_wC1q0Iq_EeqIWs6fLn5Ghw" name="getObstacles" method="_wDpjIIq_EeqIWs6fLn5Ghw">
      <ownedParameter xmi:id="_wC3gAYq_EeqIWs6fLn5Ghw" type="_v_QLUIq_EeqIWs6fLn5Ghw" direction="return"/>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:Generics xmi:id="_wC1DwIq_EeqIWs6fLn5Ghw" genericsValue="Obstacle" base_Element="_wCz1ooq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:Generics xmi:id="_wC3gAIq_EeqIWs6fLn5Ghw" genericsValue="Obstacle" base_Element="_wC1q0Iq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_wC4HEYq_EeqIWs6fLn5Ghw" base_Element="_wC4HEIq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_wC6jUoq_EeqIWs6fLn5Ghw" base_Element="_wC6jUIq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_wC7KYoq_EeqIWs6fLn5Ghw" base_Element="_wC7KYIq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_wC8YgIq_EeqIWs6fLn5Ghw" base_Element="_wC7xcIq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_wC8_kIq_EeqIWs6fLn5Ghw" base_Element="_wC8YgYq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_wC9mo4q_EeqIWs6fLn5Ghw" base_Element="_wC9moYq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_wC-NsYq_EeqIWs6fLn5Ghw" base_Element="_wC-NsIq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_wC-0wYq_EeqIWs6fLn5Ghw" base_Element="_wC-0wIq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_wC_b0Yq_EeqIWs6fLn5Ghw" base_Element="_wC_b0Iq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_wDAC4Iq_EeqIWs6fLn5Ghw" base_Element="_wC_b0oq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_wDAp8Iq_EeqIWs6fLn5Ghw" base_Element="_wDAC4Yq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_wDBRAIq_EeqIWs6fLn5Ghw" base_Element="_wDAp8Yq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_wDBRAoq_EeqIWs6fLn5Ghw" base_Element="_wDBRAYq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_wDDtQIq_EeqIWs6fLn5Ghw" base_Element="_wDDGMIq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_wDEUUIq_EeqIWs6fLn5Ghw" base_Element="_wDDtQYq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_wDEUUoq_EeqIWs6fLn5Ghw" base_Element="_wDEUUYq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_wDFicYq_EeqIWs6fLn5Ghw" base_Element="_wDE7YIq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_wDGJgYq_EeqIWs6fLn5Ghw" base_Element="_wDGJgIq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_wDHXoIq_EeqIWs6fLn5Ghw" base_Element="_wDGwkIq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_wDH-sIq_EeqIWs6fLn5Ghw" base_Element="_wDHXoYq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_wDH-soq_EeqIWs6fLn5Ghw" base_Element="_wDH-sYq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_wDJM0Iq_EeqIWs6fLn5Ghw" base_Element="_wDIlwIq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_wDJz4Yq_EeqIWs6fLn5Ghw" base_Element="_wDJM0Yq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_wDKa8Yq_EeqIWs6fLn5Ghw" base_Element="_wDJz4oq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_wDLCAoq_EeqIWs6fLn5Ghw" base_Element="_wDLCAIq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:Generics xmi:id="_wDM3MIq_EeqIWs6fLn5Ghw" genericsValue="Nuage" base_Element="_wDLpEIq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_wDM3MYq_EeqIWs6fLn5Ghw" base_Element="_wDLpEIq_EeqIWs6fLn5Ghw"/>
  <uml:OpaqueBehavior xmi:id="_wDaSkIq_EeqIWs6fLn5Ghw" name="getY" specification="_wB0XIYq_EeqIWs6fLn5Ghw">
    <ownedParameter xmi:id="_wDaSkYq_EeqIWs6fLn5Ghw" direction="return">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </ownedParameter>
    <language>java</language>
    <body>return this.y - this.etat.getPosY();
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_wDcu0Iq_EeqIWs6fLn5Ghw" name="getGoDown" specification="_wCPN4Iq_EeqIWs6fLn5Ghw">
    <ownedParameter xmi:id="_wDcu0Yq_EeqIWs6fLn5Ghw" direction="return">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
    </ownedParameter>
    <language>java</language>
    <body>return this.goDown;
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_wDdV4Iq_EeqIWs6fLn5Ghw" name="getAccel" specification="_wCRDEIq_EeqIWs6fLn5Ghw">
    <ownedParameter xmi:id="_wDdV4Yq_EeqIWs6fLn5Ghw" direction="return">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
    </ownedParameter>
    <language>java</language>
    <body>updateAccel();
		return this.accel;
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_wDgZMIq_EeqIWs6fLn5Ghw" name="getScore" specification="_wCZl8Iq_EeqIWs6fLn5Ghw">
    <ownedParameter xmi:id="_wDhAQIq_EeqIWs6fLn5Ghw" direction="return">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </ownedParameter>
    <language>java</language>
    <body>return this.score + getPosY()/100;
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_wDhAQYq_EeqIWs6fLn5Ghw" name="getEnnemis" specification="_wCeecIq_EeqIWs6fLn5Ghw">
    <ownedParameter xmi:id="_wDhAQoq_EeqIWs6fLn5Ghw" type="_v_QLUIq_EeqIWs6fLn5Ghw" direction="return"/>
    <language>java</language>
    <body>if(!this.fin)updateEnnemis();
		return this.ennemis;
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_wDhAQ4q_EeqIWs6fLn5Ghw" name="getPiste" specification="_wCgToIq_EeqIWs6fLn5Ghw">
    <ownedParameter xmi:id="_wDhARIq_EeqIWs6fLn5Ghw" type="_v--egIq_EeqIWs6fLn5Ghw" direction="return">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_wDhARYq_EeqIWs6fLn5Ghw" value="*"/>
    </ownedParameter>
    <language>java</language>
    <body>return this.piste.getPiste();
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_wDoVAIq_EeqIWs6fLn5Ghw" name="getY" specification="_wCqrsIq_EeqIWs6fLn5Ghw">
    <ownedParameter xmi:id="_wDoVAYq_EeqIWs6fLn5Ghw" direction="return">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </ownedParameter>
    <language>java</language>
    <body>return this.y - piste.getPosY();
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_wDpjIIq_EeqIWs6fLn5Ghw" name="getObstacles" specification="_wC1q0Iq_EeqIWs6fLn5Ghw">
    <ownedParameter xmi:id="_wDpjIYq_EeqIWs6fLn5Ghw" type="_v_QLUIq_EeqIWs6fLn5Ghw" direction="return"/>
    <language>java</language>
    <body>updateObstacles();
		return this.obstacles;
	</body>
  </uml:OpaqueBehavior>
  <UMLLabProfile:Reference xmi:id="_wELHkIq_EeqIWs6fLn5Ghw" base_Element="_wEKggIq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:Reference xmi:id="_wEMVsIq_EeqIWs6fLn5Ghw" base_Element="_wELuoIq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:Reference xmi:id="_wEM8wIq_EeqIWs6fLn5Ghw" base_Element="_wEMVsYq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:Reference xmi:id="_wENj0Iq_EeqIWs6fLn5Ghw" base_Element="_wEM8wYq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:Reference xmi:id="_wEOK4Iq_EeqIWs6fLn5Ghw" base_Element="_wENj0Yq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:Reference xmi:id="_wEOx8Iq_EeqIWs6fLn5Ghw" base_Element="_wEOK4Yq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:Reference xmi:id="_wEPZAIq_EeqIWs6fLn5Ghw" base_Element="_wEOx8Yq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:Reference xmi:id="_wEQAEIq_EeqIWs6fLn5Ghw" base_Element="_wEPZAYq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:Reference xmi:id="_wEQnIoq_EeqIWs6fLn5Ghw" base_Element="_wEQnIIq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:Reference xmi:id="_wER1QIq_EeqIWs6fLn5Ghw" base_Element="_wEROMIq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:Reference xmi:id="_wEScUIq_EeqIWs6fLn5Ghw" base_Element="_wER1QYq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:Reference xmi:id="_wETDYIq_EeqIWs6fLn5Ghw" base_Element="_wEScUYq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:Reference xmi:id="_wETqcIq_EeqIWs6fLn5Ghw" base_Element="_wETDYYq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:Reference xmi:id="_wEURgIq_EeqIWs6fLn5Ghw" base_Element="_wETqcYq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:Reference xmi:id="_wEU4kIq_EeqIWs6fLn5Ghw" base_Element="_wEURgYq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:Reference xmi:id="_wEVfooq_EeqIWs6fLn5Ghw" base_Element="_wEVfoIq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:Reference xmi:id="_wEWtwIq_EeqIWs6fLn5Ghw" base_Element="_wEWGsIq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:Reference xmi:id="_wEXU0Iq_EeqIWs6fLn5Ghw" base_Element="_wEWtwYq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:Reference xmi:id="_wEX74Iq_EeqIWs6fLn5Ghw" base_Element="_wEXU0Yq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:Reference xmi:id="_wEZKAIq_EeqIWs6fLn5Ghw" base_Element="_wEYi8Iq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:Reference xmi:id="_wEZxEIq_EeqIWs6fLn5Ghw" base_Element="_wEZKAYq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:Reference xmi:id="_wEaYIIq_EeqIWs6fLn5Ghw" base_Element="_wEZxEYq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:Reference xmi:id="_wEbmQIq_EeqIWs6fLn5Ghw" base_Element="_wEa_MIq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:Reference xmi:id="_wEcNUIq_EeqIWs6fLn5Ghw" base_Element="_wEbmQYq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:Reference xmi:id="_wEc0YIq_EeqIWs6fLn5Ghw" base_Element="_wEcNUYq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:Reference xmi:id="_wEdbcIq_EeqIWs6fLn5Ghw" base_Element="_wEc0YYq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:Reference xmi:id="_wEeCgoq_EeqIWs6fLn5Ghw" base_Element="_wEeCgIq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:Reference xmi:id="_wEfQoIq_EeqIWs6fLn5Ghw" base_Element="_wEepkIq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:Reference xmi:id="_wEf3sIq_EeqIWs6fLn5Ghw" base_Element="_wEfQoYq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:Reference xmi:id="_wEgewIq_EeqIWs6fLn5Ghw" base_Element="_wEf3sYq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:Reference xmi:id="_wEhF0Iq_EeqIWs6fLn5Ghw" base_Element="_wEgewYq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:Reference xmi:id="_wEhs4Iq_EeqIWs6fLn5Ghw" base_Element="_wEhF0Yq_EeqIWs6fLn5Ghw"/>
  <UMLLabProfile:Reference xmi:id="_wEiT8Iq_EeqIWs6fLn5Ghw" base_Element="_wEhs4Yq_EeqIWs6fLn5Ghw"/>
</xmi:XMI>
